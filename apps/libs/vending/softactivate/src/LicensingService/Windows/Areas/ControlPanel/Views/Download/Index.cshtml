@model PagedList.IPagedList<Licensing.Web.Models.Download>

@{
    ViewBag.Title = "Downloads";
}

<h2>Download Manager</h2>

@if (User.IsInRole("Administrators"))
{
    <p>
        @Html.ActionLink("Add Download", "Create")
    </p>
}

<div class="dbtablewrap">
<table class="dbtable">
    <tr>
        <th>
            @Html.ActionLink("Download Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.ActionLink("Details", "Details", new { id = item.Id }) 
            
            @if (User.IsInRole("Administrators"))
            {
                @:|
                @Html.ActionLink("Edit", "Edit", new { id = item.Id })     
                @:|
                using (Html.BeginForm("Delete/" + item.Id, "Download", FormMethod.Post, new { id = "deleteForm_" + item.Id })) {
                    @Html.AntiForgeryToken()
                    <a href="javascript:if (confirm('Are you sure you want to delete this download ?')) {document.getElementById('deleteForm_@item.Id').submit()}">Delete</a>
                }
            }
        </td>
    </tr>
}

</table>
</div>
<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
    &nbsp;
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw("&nbsp;");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter  })
    }
    else
    {
        @:<<
        @Html.Raw("&nbsp;");
        @:< Prev
    }
    &nbsp;
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter  })
        @Html.Raw("&nbsp;");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilterv = ViewBag.CurrentFilter  })
    }
    else
    {
        @:Next >
        @Html.Raw("&nbsp;")
        @:>>
    }
</div>
