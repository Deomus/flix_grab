@model Licensing.Web.Models.Download

@{
    ViewBag.Title = "Edit Download";
}

<h2>Product Information</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ProductId)
    
    <fieldset>
        <legend>Download</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description, new { @cols=50, @rows=3, @wrap="off" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
        
        <div class="editor-label">
            Path on Disk (relative to App_Downloads folder):
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LocalPath)
            @Html.ValidationMessageFor(model => model.LocalPath)
        </div>
        
        <div class="editor-label">
            Url (leave blank to use the path):
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Url)
            @Html.ValidationMessageFor(model => model.Url)
        </div>

        <div class="editor-label">
            MIME Type:
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MimeType)
            @Html.ValidationMessageFor(model => model.MimeType)
        </div>

        <div class="editor-label">
            Associated Product:
        </div>
        <div class="editor-field">
            @Html.DropDownList("SelectedProduct")
        </div>

        <div class="editor-label">
            Download is public (not license key restricted)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.IsPublic)
        </div>

        @if (!(ViewBag.IsReadOnly == true))
        {
            <p>
                <input type="submit" value="Save" />
            </p>
        }

    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
