/*! License information is available at vendors~orchestra.licenses.txt */
(window.webpackJsonp = window.webpackJsonp || []).push([
    [3], {
        sTBv: function(t, e, r) {
            (function(t) {
                ! function(e) {
                    var r = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== t ? t : "undefined" != typeof self ? self : {};

                    function n(t, e, r) {
                        return t(r = {
                            path: e,
                            exports: {},
                            require: function(t, e) {
                                return function() {
                                    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                                }()
                            }
                        }, r.exports), r.exports
                    }
                    var i = function(t) {
                            return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
                        }(n((function(t, e) {
                            t.exports = function() {
                                var e = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== r ? r : "undefined" != typeof self ? self : {};

                                function n(t, e, r) {
                                    return t(r = {
                                        path: e,
                                        exports: {},
                                        require: function(t, e) {
                                            return function() {
                                                throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                                            }()
                                        }
                                    }, r.exports), r.exports
                                }
                                var i = n((function(t, r) {
                                        (function(n) {
                                            var i = {
                                                function: !0,
                                                object: !0
                                            };

                                            function o(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var s, a = i.object && r && !r.nodeType ? r : null,
                                                u = i.object && t && !t.nodeType ? t : null,
                                                c = o(a && u && "object" == typeof e && e),
                                                h = o(i[typeof self] && self),
                                                f = o(i[typeof window] && window),
                                                l = u && u.exports === a ? a : null,
                                                p = o(i[typeof this] && this),
                                                d = c || f !== (p && p.window) && f || h || p || Function("return this")(),
                                                b = {
                                                    internals: {},
                                                    config: {
                                                        Promise: d.Promise
                                                    },
                                                    helpers: {}
                                                },
                                                _ = b.helpers.noop = function() {},
                                                y = b.helpers.identity = function(t) {
                                                    return t
                                                },
                                                v = b.helpers.defaultNow = Date.now,
                                                g = b.helpers.defaultComparer = function(t, e) {
                                                    return ht(t, e)
                                                },
                                                m = b.helpers.defaultSubComparer = function(t, e) {
                                                    return t > e ? 1 : t < e ? -1 : 0
                                                },
                                                w = (b.helpers.defaultKeySerializer = function(t) {
                                                    return t.toString()
                                                }, b.helpers.defaultError = function(t) {
                                                    throw t
                                                }),
                                                E = b.helpers.isPromise = function(t) {
                                                    return !!t && "function" != typeof t.subscribe && "function" == typeof t.then
                                                },
                                                S = b.helpers.isFunction = ((s = function(t) {
                                                    return "function" == typeof t || !1
                                                })(/x/) && (s = function(t) {
                                                    return "function" == typeof t && "[object Function]" == toString.call(t)
                                                }), s);

                                            function I(t) {
                                                for (var e = [], r = 0, n = t.length; r < n; r++) e.push(t[r]);
                                                return e
                                            }
                                            var T = {
                                                    e: {}
                                                },
                                                C = b.internals.tryCatch = function(t) {
                                                    if (!S(t)) throw new TypeError("fn must be a function");
                                                    return e = t,
                                                        function() {
                                                            try {
                                                                return e.apply(this, arguments)
                                                            } catch (t) {
                                                                return T.e = t, T
                                                            }
                                                        };
                                                    var e
                                                };

                                            function k(t) {
                                                throw t
                                            }
                                            b.config.longStackSupport = !1;
                                            var x, A = C((function() {
                                                throw new Error
                                            }))();
                                            x = !!A.e && !!A.e.stack;
                                            var O, D = N();

                                            function R(t) {
                                                var e = M(t);
                                                if (!e) return !1;
                                                var r = e[1];
                                                return e[0] === O && r >= D && r <= gn
                                            }

                                            function N() {
                                                if (x) try {
                                                    throw new Error
                                                } catch (r) {
                                                    var t = r.stack.split("\n"),
                                                        e = M(t[0].indexOf("@") > 0 ? t[1] : t[2]);
                                                    if (!e) return;
                                                    return O = e[0], e[1]
                                                }
                                            }

                                            function M(t) {
                                                var e = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(t);
                                                if (e) return [e[1], Number(e[2])];
                                                var r = /at ([^ ]+):(\d+):(?:\d+)$/.exec(t);
                                                if (r) return [r[1], Number(r[2])];
                                                var n = /.*@(.+):(\d+)$/.exec(t);
                                                return n ? [n[1], Number(n[2])] : void 0
                                            }
                                            var F = b.EmptyError = function() {
                                                this.message = "Sequence contains no elements.", Error.call(this)
                                            };
                                            F.prototype = Object.create(Error.prototype), F.prototype.name = "EmptyError";
                                            var P = b.ObjectDisposedError = function() {
                                                this.message = "Object has been disposed", Error.call(this)
                                            };
                                            P.prototype = Object.create(Error.prototype), P.prototype.name = "ObjectDisposedError";
                                            var U = b.ArgumentOutOfRangeError = function() {
                                                this.message = "Argument out of range", Error.call(this)
                                            };
                                            U.prototype = Object.create(Error.prototype), U.prototype.name = "ArgumentOutOfRangeError";
                                            var L = b.NotSupportedError = function(t) {
                                                this.message = t || "This operation is not supported", Error.call(this)
                                            };
                                            L.prototype = Object.create(Error.prototype), L.prototype.name = "NotSupportedError";
                                            var B = b.NotImplementedError = function(t) {
                                                this.message = t || "This operation is not implemented", Error.call(this)
                                            };
                                            B.prototype = Object.create(Error.prototype), B.prototype.name = "NotImplementedError";
                                            var j = b.helpers.notImplemented = function() {
                                                    throw new B
                                                },
                                                q = (b.helpers.notSupported = function() {
                                                    throw new L
                                                }, "function" == typeof Symbol && Symbol.iterator || "_es6shim_iterator_");
                                            d.Set && "function" == typeof(new d.Set)["@@iterator"] && (q = "@@iterator");
                                            var z = b.doneEnumerator = {
                                                    done: !0,
                                                    value: n
                                                },
                                                K = b.helpers.isIterable = function(t) {
                                                    return t && t[q] !== n
                                                },
                                                V = b.helpers.isArrayLike = function(t) {
                                                    return t && t.length !== n
                                                };
                                            b.helpers.iterator = q;
                                            var W = b.internals.bindCallback = function(t, e, r) {
                                                    if (void 0 === e) return t;
                                                    switch (r) {
                                                        case 0:
                                                            return function() {
                                                                return t.call(e)
                                                            };
                                                        case 1:
                                                            return function(r) {
                                                                return t.call(e, r)
                                                            };
                                                        case 2:
                                                            return function(r, n) {
                                                                return t.call(e, r, n)
                                                            };
                                                        case 3:
                                                            return function(r, n, i) {
                                                                return t.call(e, r, n, i)
                                                            }
                                                    }
                                                    return function() {
                                                        return t.apply(e, arguments)
                                                    }
                                                },
                                                H = "[object Arguments]",
                                                G = "[object Array]",
                                                Y = "[object Object]",
                                                J = {};
                                            J["[object Float32Array]"] = J["[object Float64Array]"] = J["[object Int8Array]"] = J["[object Int16Array]"] = J["[object Int32Array]"] = J["[object Uint8Array]"] = J["[object Uint8ClampedArray]"] = J["[object Uint16Array]"] = J["[object Uint32Array]"] = !0, J[H] = J[G] = J["[object ArrayBuffer]"] = J["[object Boolean]"] = J["[object Date]"] = J["[object Error]"] = J["[object Function]"] = J["[object Map]"] = J["[object Number]"] = J[Y] = J["[object RegExp]"] = J["[object Set]"] = J["[object String]"] = J["[object WeakMap]"] = !1;
                                            var $ = Object.prototype,
                                                X = $.hasOwnProperty,
                                                Q = $.toString,
                                                Z = Math.pow(2, 53) - 1,
                                                tt = Object.keys || function() {
                                                    var t = Object.prototype.hasOwnProperty,
                                                        e = !{
                                                            toString: null
                                                        }.propertyIsEnumerable("toString"),
                                                        r = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
                                                        n = r.length;
                                                    return function(i) {
                                                        if ("object" != typeof i && ("function" != typeof i || null === i)) throw new TypeError("Object.keys called on non-object");
                                                        var o, s, a = [];
                                                        for (o in i) t.call(i, o) && a.push(o);
                                                        if (e)
                                                            for (s = 0; s < n; s++) t.call(i, r[s]) && a.push(r[s]);
                                                        return a
                                                    }
                                                }();

                                            function et(t, e, r, i, o, s) {
                                                var a = tt(t),
                                                    u = a.length;
                                                if (u !== tt(e).length && !i) return !1;
                                                for (var c, h = u; h--;)
                                                    if (c = a[h], !(i ? c in e : X.call(e, c))) return !1;
                                                for (var f = i; ++h < u;) {
                                                    if (c = a[h], !(void 0 === n ? r(t[c], e[c], i, o, s) : void 0)) return !1;
                                                    f || (f = "constructor" === c)
                                                }
                                                if (!f) {
                                                    var l = t.constructor,
                                                        p = e.constructor;
                                                    if (l !== p && "constructor" in t && "constructor" in e && !("function" == typeof l && l instanceof l && "function" == typeof p && p instanceof p)) return !1
                                                }
                                                return !0
                                            }
                                            var rt = b.internals.isObject = function(t) {
                                                var e = typeof t;
                                                return !!t && ("object" === e || "function" === e)
                                            };

                                            function nt(t) {
                                                return !!t && "object" == typeof t
                                            }

                                            function it(t) {
                                                return "number" == typeof t && t > -1 && t % 1 == 0 && t <= Z
                                            }
                                            var ot = function() {
                                                    try {
                                                        Object({
                                                            toString: 0
                                                        } + "")
                                                    } catch (t) {
                                                        return function() {
                                                            return !1
                                                        }
                                                    }
                                                    return function(t) {
                                                        return "function" != typeof t.toString && "string" == typeof(t + "")
                                                    }
                                                }(),
                                                st = Array.isArray || function(t) {
                                                    return nt(t) && it(t.length) && Q.call(t) === G
                                                };

                                            function at(t, e) {
                                                for (var r = -1, n = t.length; ++r < n;)
                                                    if (e(t[r], r, t)) return !0;
                                                return !1
                                            }

                                            function ut(t, e, r, i, o, s) {
                                                var a = -1,
                                                    u = t.length,
                                                    c = e.length;
                                                if (u !== c && !(i && c > u)) return !1;
                                                for (; ++a < u;) {
                                                    var h = t[a],
                                                        f = e[a];
                                                    if (void 0 !== n) return !1;
                                                    if (i) {
                                                        if (!at(e, (function(t) {
                                                                return h === t || r(h, t, i, o, s)
                                                            }))) return !1
                                                    } else if (h !== f && !r(h, f, i, o, s)) return !1
                                                }
                                                return !0
                                            }

                                            function ct(t, e, r, n, i) {
                                                return t === e || (null == t || null == e || !rt(t) && !nt(e) ? t != t && e != e : function(t, e, r, n, i, o) {
                                                    var s, a = st(t),
                                                        u = st(e),
                                                        c = G,
                                                        h = G;
                                                    a || ((c = Q.call(t)) === H ? c = Y : c !== Y && (a = nt(s = t) && it(s.length) && !!J[Q.call(s)])), u || (h = Q.call(e)) === H && (h = Y);
                                                    var f = c === Y && !ot(t),
                                                        l = h === Y && !ot(e),
                                                        p = c === h;
                                                    if (p && !a && !f) return function(t, e, r) {
                                                        switch (r) {
                                                            case "[object Boolean]":
                                                            case "[object Date]":
                                                                return +t == +e;
                                                            case "[object Error]":
                                                                return t.name === e.name && t.message === e.message;
                                                            case "[object Number]":
                                                                return t !== +t ? e !== +e : t === +e;
                                                            case "[object RegExp]":
                                                            case "[object String]":
                                                                return t === e + ""
                                                        }
                                                        return !1
                                                    }(t, e, c);
                                                    if (!n) {
                                                        var d = f && X.call(t, "__wrapped__"),
                                                            b = l && X.call(e, "__wrapped__");
                                                        if (d || b) return r(d ? t.value() : t, b ? e.value() : e, n, i, o)
                                                    }
                                                    if (!p) return !1;
                                                    i || (i = []), o || (o = []);
                                                    for (var _ = i.length; _--;)
                                                        if (i[_] === t) return o[_] === e;
                                                    i.push(t), o.push(e);
                                                    var y = (a ? ut : et)(t, e, r, n, i, o);
                                                    return i.pop(), o.pop(), y
                                                }(t, e, ct, r, n, i))
                                            }
                                            var ht = b.internals.isEqual = function(t, e) {
                                                    return ct(t, e)
                                                },
                                                ft = b.internals.inherits = function(t, e) {
                                                    function r() {
                                                        this.constructor = t
                                                    }
                                                    r.prototype = e.prototype, t.prototype = new r
                                                },
                                                lt = b.internals.addProperties = function(t) {
                                                    for (var e = [], r = 1, n = arguments.length; r < n; r++) e.push(arguments[r]);
                                                    for (var i = 0, o = e.length; i < o; i++) {
                                                        var s = e[i];
                                                        for (var a in s) t[a] = s[a]
                                                    }
                                                },
                                                pt = b.internals.addRef = function(t, e) {
                                                    return new dn((function(r) {
                                                        return new Tt(e.getDisposable(), t.subscribe(r))
                                                    }))
                                                };

                                            function dt(t, e) {
                                                for (var r = new Array(t), n = 0; n < t; n++) r[n] = e();
                                                return r
                                            }
                                            var bt = b.CompositeDisposable = function() {
                                                    var t, e, r = [];
                                                    if (Array.isArray(arguments[0])) r = arguments[0];
                                                    else
                                                        for (e = arguments.length, r = new Array(e), t = 0; t < e; t++) r[t] = arguments[t];
                                                    this.disposables = r, this.isDisposed = !1, this.length = r.length
                                                },
                                                _t = bt.prototype;
                                            _t.add = function(t) {
                                                this.isDisposed ? t.dispose() : (this.disposables.push(t), this.length++)
                                            }, _t.remove = function(t) {
                                                var e = !1;
                                                if (!this.isDisposed) {
                                                    var r = this.disposables.indexOf(t); - 1 !== r && (e = !0, this.disposables.splice(r, 1), this.length--, t.dispose())
                                                }
                                                return e
                                            }, _t.dispose = function() {
                                                if (!this.isDisposed) {
                                                    this.isDisposed = !0;
                                                    for (var t = this.disposables.length, e = new Array(t), r = 0; r < t; r++) e[r] = this.disposables[r];
                                                    for (this.disposables = [], this.length = 0, r = 0; r < t; r++) e[r].dispose()
                                                }
                                            };
                                            var yt = b.Disposable = function(t) {
                                                this.isDisposed = !1, this.action = t || _
                                            };
                                            yt.prototype.dispose = function() {
                                                this.isDisposed || (this.action(), this.isDisposed = !0)
                                            };
                                            var vt = yt.create = function(t) {
                                                    return new yt(t)
                                                },
                                                gt = yt.empty = {
                                                    dispose: _
                                                },
                                                mt = yt.isDisposable = function(t) {
                                                    return t && S(t.dispose)
                                                },
                                                wt = yt.checkDisposed = function(t) {
                                                    if (t.isDisposed) throw new P
                                                },
                                                Et = yt._fixup = function(t) {
                                                    return mt(t) ? t : gt
                                                },
                                                St = b.SingleAssignmentDisposable = function() {
                                                    this.isDisposed = !1, this.current = null
                                                };
                                            St.prototype.getDisposable = function() {
                                                return this.current
                                            }, St.prototype.setDisposable = function(t) {
                                                if (this.current) throw new Error("Disposable has already been assigned");
                                                var e = this.isDisposed;
                                                !e && (this.current = t), e && t && t.dispose()
                                            }, St.prototype.dispose = function() {
                                                if (!this.isDisposed) {
                                                    this.isDisposed = !0;
                                                    var t = this.current;
                                                    this.current = null, t && t.dispose()
                                                }
                                            };
                                            var It = b.SerialDisposable = function() {
                                                this.isDisposed = !1, this.current = null
                                            };
                                            It.prototype.getDisposable = function() {
                                                return this.current
                                            }, It.prototype.setDisposable = function(t) {
                                                var e = this.isDisposed;
                                                if (!e) {
                                                    var r = this.current;
                                                    this.current = t
                                                }
                                                r && r.dispose(), e && t && t.dispose()
                                            }, It.prototype.dispose = function() {
                                                if (!this.isDisposed) {
                                                    this.isDisposed = !0;
                                                    var t = this.current;
                                                    this.current = null
                                                }
                                                t && t.dispose()
                                            };
                                            var Tt = b.BinaryDisposable = function(t, e) {
                                                this._first = t, this._second = e, this.isDisposed = !1
                                            };
                                            Tt.prototype.dispose = function() {
                                                if (!this.isDisposed) {
                                                    this.isDisposed = !0;
                                                    var t = this._first;
                                                    this._first = null, t && t.dispose();
                                                    var e = this._second;
                                                    this._second = null, e && e.dispose()
                                                }
                                            };
                                            var Ct = b.NAryDisposable = function(t) {
                                                this._disposables = t, this.isDisposed = !1
                                            };
                                            Ct.prototype.dispose = function() {
                                                if (!this.isDisposed) {
                                                    this.isDisposed = !0;
                                                    for (var t = 0, e = this._disposables.length; t < e; t++) this._disposables[t].dispose();
                                                    this._disposables.length = 0
                                                }
                                            };
                                            var kt = b.RefCountDisposable = function() {
                                                function t(t) {
                                                    this.disposable = t, this.disposable.count++, this.isInnerDisposed = !1
                                                }

                                                function e(t) {
                                                    this.underlyingDisposable = t, this.isDisposed = !1, this.isPrimaryDisposed = !1, this.count = 0
                                                }
                                                return t.prototype.dispose = function() {
                                                    this.disposable.isDisposed || this.isInnerDisposed || (this.isInnerDisposed = !0, this.disposable.count--, 0 === this.disposable.count && this.disposable.isPrimaryDisposed && (this.disposable.isDisposed = !0, this.disposable.underlyingDisposable.dispose()))
                                                }, e.prototype.dispose = function() {
                                                    this.isDisposed || this.isPrimaryDisposed || (this.isPrimaryDisposed = !0, 0 === this.count && (this.isDisposed = !0, this.underlyingDisposable.dispose()))
                                                }, e.prototype.getDisposable = function() {
                                                    return this.isDisposed ? gt : new t(this)
                                                }, e
                                            }();

                                            function xt(t, e) {
                                                this.scheduler = t, this.disposable = e, this.isDisposed = !1
                                            }

                                            function At(t, e) {
                                                e.isDisposed || (e.isDisposed = !0, e.disposable.dispose())
                                            }
                                            xt.prototype.dispose = function() {
                                                this.scheduler.schedule(this, At)
                                            };
                                            var Ot = b.internals.ScheduledItem = function(t, e, r, n, i) {
                                                this.scheduler = t, this.state = e, this.action = r, this.dueTime = n, this.comparer = i || m, this.disposable = new St
                                            };
                                            Ot.prototype.invoke = function() {
                                                this.disposable.setDisposable(this.invokeCore())
                                            }, Ot.prototype.compareTo = function(t) {
                                                return this.comparer(this.dueTime, t.dueTime)
                                            }, Ot.prototype.isCancelled = function() {
                                                return this.disposable.isDisposed
                                            }, Ot.prototype.invokeCore = function() {
                                                return Et(this.action(this.scheduler, this.state))
                                            };
                                            var Dt = b.Scheduler = function() {
                                                    function t() {}
                                                    t.isScheduler = function(e) {
                                                        return e instanceof t
                                                    };
                                                    var e = t.prototype;
                                                    return e.schedule = function(t, e) {
                                                        throw new B
                                                    }, e.scheduleFuture = function(e, r, n) {
                                                        var i = r;
                                                        return i instanceof Date && (i -= this.now()), 0 === (i = t.normalize(i)) ? this.schedule(e, n) : this._scheduleFuture(e, i, n)
                                                    }, e._scheduleFuture = function(t, e, r) {
                                                        throw new B
                                                    }, t.now = v, t.prototype.now = v, t.normalize = function(t) {
                                                        return t < 0 && (t = 0), t
                                                    }, t
                                                }(),
                                                Rt = Dt.normalize,
                                                Nt = Dt.isScheduler;
                                            ! function(t) {
                                                function e(t, e) {
                                                    var r = e[0],
                                                        n = e[1],
                                                        i = new bt;
                                                    return n(r, (function e(r) {
                                                        var o = !1,
                                                            s = !1,
                                                            a = t.schedule(r, (function(t, r) {
                                                                return o ? i.remove(a) : s = !0, n(r, e), gt
                                                            }));
                                                        s || (i.add(a), o = !0)
                                                    })), i
                                                }

                                                function r(t, e) {
                                                    var r = e[0],
                                                        n = e[1],
                                                        i = new bt;
                                                    return n(r, (function e(r, o) {
                                                        var s = !1,
                                                            a = !1,
                                                            u = t.scheduleFuture(r, o, (function(t, r) {
                                                                return s ? i.remove(u) : a = !0, n(r, e), gt
                                                            }));
                                                        a || (i.add(u), s = !0)
                                                    })), i
                                                }
                                                t.scheduleRecursive = function(t, r) {
                                                    return this.schedule([t, r], e)
                                                }, t.scheduleRecursiveFuture = function(t, e, n) {
                                                    return this.scheduleFuture([t, n], e, r)
                                                }
                                            }(Dt.prototype), Dt.prototype.schedulePeriodic = function(t, e, r) {
                                                    if (void 0 === d.setInterval) throw new L;
                                                    e = Rt(e);
                                                    var n = t,
                                                        i = d.setInterval((function() {
                                                            n = r(n)
                                                        }), e);
                                                    return vt((function() {
                                                        d.clearInterval(i)
                                                    }))
                                                },
                                                function(t) {
                                                    t.catchError = t.catch = function(t) {
                                                        return new Wt(this, t)
                                                    }
                                                }(Dt.prototype), b.internals.SchedulePeriodicRecursive = function() {
                                                    function t(t, e, r, n) {
                                                        this._scheduler = t, this._state = e, this._period = r, this._action = n
                                                    }
                                                    return t.prototype.start = function() {
                                                        var t = new St;
                                                        return this._cancel = t, t.setDisposable(this._scheduler.scheduleRecursiveFuture(0, this._period, function(t) {
                                                            return function(e, r) {
                                                                r(0, t._period);
                                                                var n = C(t._action)(t._state);
                                                                n === T && (t._cancel.dispose(), k(n.e)), t._state = n
                                                            }
                                                        }(this))), t
                                                    }, t
                                                }();
                                            var Mt, Ft, Pt = function(t) {
                                                    function e() {
                                                        t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.schedule = function(t, e) {
                                                        return Et(e(this, t))
                                                    }, e
                                                }(Dt),
                                                Ut = Dt.immediate = new Pt,
                                                Lt = function(t) {
                                                    var e;

                                                    function r() {
                                                        for (; e.length > 0;) {
                                                            var t = e.dequeue();
                                                            !t.isCancelled() && t.invoke()
                                                        }
                                                    }

                                                    function n() {
                                                        t.call(this)
                                                    }
                                                    return ft(n, t), n.prototype.schedule = function(t, n) {
                                                        var i = new Ot(this, t, n, this.now());
                                                        if (e) e.enqueue(i);
                                                        else {
                                                            (e = new Gt(4)).enqueue(i);
                                                            var o = C(r)();
                                                            e = null, o === T && k(o.e)
                                                        }
                                                        return i.disposable
                                                    }, n.prototype.scheduleRequired = function() {
                                                        return !e
                                                    }, n
                                                }(Dt),
                                                Bt = Dt.currentThread = new Lt,
                                                jt = function() {
                                                    var t, e = _;
                                                    if (d.setTimeout) t = d.setTimeout, e = d.clearTimeout;
                                                    else {
                                                        if (!d.WScript) throw new L;
                                                        t = function(t, e) {
                                                            d.WScript.Sleep(e), t()
                                                        }
                                                    }
                                                    return {
                                                        setTimeout: t,
                                                        clearTimeout: e
                                                    }
                                                }(),
                                                qt = jt.setTimeout,
                                                zt = jt.clearTimeout;
                                            ! function() {
                                                var t = 1,
                                                    e = {},
                                                    r = !1;

                                                function n(t) {
                                                    if (r) qt((function() {
                                                        n(t)
                                                    }), 0);
                                                    else {
                                                        var i = e[t];
                                                        if (i) {
                                                            r = !0;
                                                            var o = C(i)();
                                                            Ft(t), r = !1, o === T && k(o.e)
                                                        }
                                                    }
                                                }
                                                Ft = function(t) {
                                                    delete e[t]
                                                };
                                                var i = new RegExp("^" + String(toString).replace(/[.*+?^${}()|[\]\\]/g, "\\$&").replace(/toString| for [^\]]+/g, ".*?") + "$"),
                                                    o = "function" == typeof(o = c && l && c.setImmediate) && !i.test(o) && o;
                                                if (S(o)) Mt = function(r) {
                                                    var i = t++;
                                                    return e[i] = r, o((function() {
                                                        n(i)
                                                    })), i
                                                };
                                                else if (void 0 !== {} && "[object process]" === {}.toString.call({})) Mt = function(r) {
                                                    var i = t++;
                                                    return e[i] = r, {}.nextTick((function() {
                                                        n(i)
                                                    })), i
                                                };
                                                else if (function() {
                                                        if (!d.postMessage || d.importScripts) return !1;
                                                        var t = !1,
                                                            e = d.onmessage;
                                                        return d.onmessage = function() {
                                                            t = !0
                                                        }, d.postMessage("", "*"), d.onmessage = e, t
                                                    }()) {
                                                    var s = "ms.rx.schedule" + Math.random();
                                                    d.addEventListener("message", (function(t) {
                                                        "string" == typeof t.data && t.data.substring(0, s.length) === s && n(t.data.substring(s.length))
                                                    }), !1), Mt = function(r) {
                                                        var n = t++;
                                                        return e[n] = r, d.postMessage(s + n, "*"), n
                                                    }
                                                } else if (d.MessageChannel) {
                                                    var a = new d.MessageChannel;
                                                    a.port1.onmessage = function(t) {
                                                        n(t.data)
                                                    }, Mt = function(r) {
                                                        var n = t++;
                                                        return e[n] = r, a.port2.postMessage(n), n
                                                    }
                                                } else Mt = "document" in d && "onreadystatechange" in d.document.createElement("script") ? function(r) {
                                                    var i = d.document.createElement("script"),
                                                        o = t++;
                                                    return e[o] = r, i.onreadystatechange = function() {
                                                        n(o), i.onreadystatechange = null, i.parentNode.removeChild(i), i = null
                                                    }, d.document.documentElement.appendChild(i), o
                                                } : function(r) {
                                                    var i = t++;
                                                    return e[i] = r, qt((function() {
                                                        n(i)
                                                    }), 0), i
                                                }
                                            }();
                                            var Kt = function(t) {
                                                    function e() {
                                                        t.call(this)
                                                    }

                                                    function r(t, e, r, n) {
                                                        return function() {
                                                            t.setDisposable(yt._fixup(e(r, n)))
                                                        }
                                                    }

                                                    function n(t) {
                                                        this._id = t, this.isDisposed = !1
                                                    }

                                                    function i(t) {
                                                        this._id = t, this.isDisposed = !1
                                                    }
                                                    return ft(e, t), n.prototype.dispose = function() {
                                                        this.isDisposed || (this.isDisposed = !0, Ft(this._id))
                                                    }, i.prototype.dispose = function() {
                                                        this.isDisposed || (this.isDisposed = !0, zt(this._id))
                                                    }, e.prototype.schedule = function(t, e) {
                                                        var i = new St,
                                                            o = Mt(r(i, e, this, t));
                                                        return new Tt(i, new n(o))
                                                    }, e.prototype._scheduleFuture = function(t, e, n) {
                                                        if (0 === e) return this.schedule(t, n);
                                                        var o = new St,
                                                            s = qt(r(o, n, this, t), e);
                                                        return new Tt(o, new i(s))
                                                    }, e.prototype.scheduleLongRunning = function(t, e) {
                                                        var r = vt(_);
                                                        return Mt(function(t, e, r) {
                                                            return function() {
                                                                e(t, r)
                                                            }
                                                        }(t, e, r)), r
                                                    }, e
                                                }(Dt),
                                                Vt = Dt.default = Dt.async = new Kt,
                                                Wt = function(t) {
                                                    function e(e, r) {
                                                        this._scheduler = e, this._handler = r, this._recursiveOriginal = null, this._recursiveWrapper = null, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.schedule = function(t, e) {
                                                        return this._scheduler.schedule(t, this._wrap(e))
                                                    }, e.prototype._scheduleFuture = function(t, e, r) {
                                                        return this._scheduler.schedule(t, e, this._wrap(r))
                                                    }, e.prototype.now = function() {
                                                        return this._scheduler.now()
                                                    }, e.prototype._clone = function(t) {
                                                        return new e(t, this._handler)
                                                    }, e.prototype._wrap = function(t) {
                                                        var e = this;
                                                        return function(r, n) {
                                                            var i = C(t)(e._getRecursiveWrapper(r), n);
                                                            return i === T ? (e._handler(i.e) || k(i.e), gt) : Et(i)
                                                        }
                                                    }, e.prototype._getRecursiveWrapper = function(t) {
                                                        if (this._recursiveOriginal !== t) {
                                                            this._recursiveOriginal = t;
                                                            var e = this._clone(t);
                                                            e._recursiveOriginal = t, e._recursiveWrapper = e, this._recursiveWrapper = e
                                                        }
                                                        return this._recursiveWrapper
                                                    }, e.prototype.schedulePeriodic = function(t, e, r) {
                                                        var n = this,
                                                            i = !1,
                                                            o = new St;
                                                        return o.setDisposable(this._scheduler.schedulePeriodic(t, e, (function(t) {
                                                            if (i) return null;
                                                            var e = C(r)(t);
                                                            return e === T ? (i = !0, n._handler(e.e) || k(e.e), o.dispose(), null) : e
                                                        }))), o
                                                    }, e
                                                }(Dt);

                                            function Ht(t, e) {
                                                this.id = t, this.value = e
                                            }
                                            Ht.prototype.compareTo = function(t) {
                                                var e = this.value.compareTo(t.value);
                                                return 0 === e && (e = this.id - t.id), e
                                            };
                                            var Gt = b.internals.PriorityQueue = function(t) {
                                                    this.items = new Array(t), this.length = 0
                                                },
                                                Yt = Gt.prototype;
                                            Yt.isHigherPriority = function(t, e) {
                                                return this.items[t].compareTo(this.items[e]) < 0
                                            }, Yt.percolate = function(t) {
                                                if (!(t >= this.length || t < 0)) {
                                                    var e = t - 1 >> 1;
                                                    if (!(e < 0 || e === t) && this.isHigherPriority(t, e)) {
                                                        var r = this.items[t];
                                                        this.items[t] = this.items[e], this.items[e] = r, this.percolate(e)
                                                    }
                                                }
                                            }, Yt.heapify = function(t) {
                                                if (+t || (t = 0), !(t >= this.length || t < 0)) {
                                                    var e = 2 * t + 1,
                                                        r = 2 * t + 2,
                                                        n = t;
                                                    if (e < this.length && this.isHigherPriority(e, n) && (n = e), r < this.length && this.isHigherPriority(r, n) && (n = r), n !== t) {
                                                        var i = this.items[t];
                                                        this.items[t] = this.items[n], this.items[n] = i, this.heapify(n)
                                                    }
                                                }
                                            }, Yt.peek = function() {
                                                return this.items[0].value
                                            }, Yt.removeAt = function(t) {
                                                this.items[t] = this.items[--this.length], this.items[this.length] = n, this.heapify()
                                            }, Yt.dequeue = function() {
                                                var t = this.peek();
                                                return this.removeAt(0), t
                                            }, Yt.enqueue = function(t) {
                                                var e = this.length++;
                                                this.items[e] = new Ht(Gt.count++, t), this.percolate(e)
                                            }, Yt.remove = function(t) {
                                                for (var e = 0; e < this.length; e++)
                                                    if (this.items[e].value === t) return this.removeAt(e), !0;
                                                return !1
                                            }, Gt.count = 0;
                                            var Jt = b.Notification = function() {
                                                    function t() {}
                                                    return t.prototype._accept = function(t, e, r) {
                                                        throw new B
                                                    }, t.prototype._acceptObserver = function(t, e, r) {
                                                        throw new B
                                                    }, t.prototype.accept = function(t, e, r) {
                                                        return t && "object" == typeof t ? this._acceptObserver(t) : this._accept(t, e, r)
                                                    }, t.prototype.toObservable = function(t) {
                                                        var e = this;
                                                        return Nt(t) || (t = Ut), new dn((function(r) {
                                                            return t.schedule(e, (function(t, e) {
                                                                e._acceptObserver(r), "N" === e.kind && r.onCompleted()
                                                            }))
                                                        }))
                                                    }, t
                                                }(),
                                                $t = function(t) {
                                                    function e(t) {
                                                        this.value = t, this.kind = "N"
                                                    }
                                                    return ft(e, t), e.prototype._accept = function(t) {
                                                        return t(this.value)
                                                    }, e.prototype._acceptObserver = function(t) {
                                                        return t.onNext(this.value)
                                                    }, e.prototype.toString = function() {
                                                        return "OnNext(" + this.value + ")"
                                                    }, e
                                                }(Jt),
                                                Xt = function(t) {
                                                    function e(t) {
                                                        this.error = t, this.kind = "E"
                                                    }
                                                    return ft(e, t), e.prototype._accept = function(t, e) {
                                                        return e(this.error)
                                                    }, e.prototype._acceptObserver = function(t) {
                                                        return t.onError(this.error)
                                                    }, e.prototype.toString = function() {
                                                        return "OnError(" + this.error + ")"
                                                    }, e
                                                }(Jt),
                                                Qt = function(t) {
                                                    function e() {
                                                        this.kind = "C"
                                                    }
                                                    return ft(e, t), e.prototype._accept = function(t, e, r) {
                                                        return r()
                                                    }, e.prototype._acceptObserver = function(t) {
                                                        return t.onCompleted()
                                                    }, e.prototype.toString = function() {
                                                        return "OnCompleted()"
                                                    }, e
                                                }(Jt),
                                                Zt = Jt.createOnNext = function(t) {
                                                    return new $t(t)
                                                },
                                                te = Jt.createOnError = function(t) {
                                                    return new Xt(t)
                                                },
                                                ee = Jt.createOnCompleted = function() {
                                                    return new Qt
                                                },
                                                re = b.Observer = function() {};
                                            re.prototype.toNotifier = function() {
                                                var t = this;
                                                return function(e) {
                                                    return e.accept(t)
                                                }
                                            }, re.prototype.asObserver = function() {
                                                var t = this;
                                                return new se((function(e) {
                                                    t.onNext(e)
                                                }), (function(e) {
                                                    t.onError(e)
                                                }), (function() {
                                                    t.onCompleted()
                                                }))
                                            }, re.prototype.checked = function() {
                                                return new ae(this)
                                            };
                                            var ne = re.create = function(t, e, r) {
                                                return t || (t = _), e || (e = w), r || (r = _), new se(t, e, r)
                                            };
                                            re.fromNotifier = function(t, e) {
                                                var r = W(t, e, 1);
                                                return new se((function(t) {
                                                    return r(Zt(t))
                                                }), (function(t) {
                                                    return r(te(t))
                                                }), (function() {
                                                    return r(ee())
                                                }))
                                            }, re.prototype.notifyOn = function(t) {
                                                return new ue(t, this)
                                            }, re.prototype.makeSafe = function(t) {
                                                return new AnonymousSafeObserver(this._onNext, this._onError, this._onCompleted, t)
                                            };
                                            var ie, oe = b.internals.AbstractObserver = function(t) {
                                                    function e() {
                                                        this.isStopped = !1
                                                    }
                                                    return ft(e, t), e.prototype.next = j, e.prototype.error = j, e.prototype.completed = j, e.prototype.onNext = function(t) {
                                                        !this.isStopped && this.next(t)
                                                    }, e.prototype.onError = function(t) {
                                                        this.isStopped || (this.isStopped = !0, this.error(t))
                                                    }, e.prototype.onCompleted = function() {
                                                        this.isStopped || (this.isStopped = !0, this.completed())
                                                    }, e.prototype.dispose = function() {
                                                        this.isStopped = !0
                                                    }, e.prototype.fail = function(t) {
                                                        return !this.isStopped && (this.isStopped = !0, this.error(t), !0)
                                                    }, e
                                                }(re),
                                                se = b.AnonymousObserver = function(t) {
                                                    function e(e, r, n) {
                                                        t.call(this), this._onNext = e, this._onError = r, this._onCompleted = n
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        this._onNext(t)
                                                    }, e.prototype.error = function(t) {
                                                        this._onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._onCompleted()
                                                    }, e
                                                }(oe),
                                                ae = function(t) {
                                                    function e(e) {
                                                        t.call(this), this._observer = e, this._state = 0
                                                    }
                                                    ft(e, t);
                                                    var r = e.prototype;
                                                    return r.onNext = function(t) {
                                                        this.checkAccess();
                                                        var e = C(this._observer.onNext).call(this._observer, t);
                                                        this._state = 0, e === T && k(e.e)
                                                    }, r.onError = function(t) {
                                                        this.checkAccess();
                                                        var e = C(this._observer.onError).call(this._observer, t);
                                                        this._state = 2, e === T && k(e.e)
                                                    }, r.onCompleted = function() {
                                                        this.checkAccess();
                                                        var t = C(this._observer.onCompleted).call(this._observer);
                                                        this._state = 2, t === T && k(t.e)
                                                    }, r.checkAccess = function() {
                                                        if (1 === this._state) throw new Error("Re-entrancy detected");
                                                        if (2 === this._state) throw new Error("Observer completed");
                                                        0 === this._state && (this._state = 1)
                                                    }, e
                                                }(re),
                                                ue = function(t) {
                                                    function e(e, r, n) {
                                                        t.call(this, e, r), this._cancel = n
                                                    }
                                                    return ft(e, t), e.prototype.next = function(e) {
                                                        t.prototype.next.call(this, e), this.ensureActive()
                                                    }, e.prototype.error = function(e) {
                                                        t.prototype.error.call(this, e), this.ensureActive()
                                                    }, e.prototype.completed = function() {
                                                        t.prototype.completed.call(this), this.ensureActive()
                                                    }, e.prototype.dispose = function() {
                                                        t.prototype.dispose.call(this), this._cancel && this._cancel.dispose(), this._cancel = null
                                                    }, e
                                                }(b.internals.ScheduledObserver = function(t) {
                                                    function e(e, r) {
                                                        t.call(this), this.scheduler = e, this.observer = r, this.isAcquired = !1, this.hasFaulted = !1, this.queue = [], this.disposable = new It
                                                    }

                                                    function r(t, e) {
                                                        var r;
                                                        if (t.queue.length > 0) {
                                                            r = t.queue.shift();
                                                            var n = C(r)();
                                                            if (n === T) return t.queue = [], t.hasFaulted = !0, k(n.e);
                                                            e(t)
                                                        } else t.isAcquired = !1
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        this.queue.push(function(t, e) {
                                                            return function() {
                                                                t.onNext(e)
                                                            }
                                                        }(this.observer, t))
                                                    }, e.prototype.error = function(t) {
                                                        this.queue.push(function(t, e) {
                                                            return function() {
                                                                t.onError(e)
                                                            }
                                                        }(this.observer, t))
                                                    }, e.prototype.completed = function() {
                                                        var t;
                                                        this.queue.push((t = this.observer, function() {
                                                            t.onCompleted()
                                                        }))
                                                    }, e.prototype.ensureActive = function() {
                                                        var t = !1;
                                                        !this.hasFaulted && this.queue.length > 0 && (t = !this.isAcquired, this.isAcquired = !0), t && this.disposable.setDisposable(this.scheduler.scheduleRecursive(this, r))
                                                    }, e.prototype.dispose = function() {
                                                        t.prototype.dispose.call(this), this.disposable.dispose()
                                                    }, e
                                                }(oe)),
                                                ce = b.Observable = function() {
                                                    function t() {
                                                        if (b.config.longStackSupport && x) {
                                                            var t = this._subscribe,
                                                                e = C(k)(new Error).e;
                                                            this.stack = e.stack.substring(e.stack.indexOf("\n") + 1), this._subscribe = function(t, e) {
                                                                return function(r) {
                                                                    var n = r.onError;
                                                                    return r.onError = function(e) {
                                                                        (function(t, e) {
                                                                            if (x && e.stack && "object" == typeof t && null !== t && t.stack && -1 === t.stack.indexOf("From previous event:")) {
                                                                                for (var r = [], n = e; n; n = n.source) n.stack && r.unshift(n.stack);
                                                                                r.unshift(t.stack);
                                                                                var i = r.join("\nFrom previous event:\n");
                                                                                t.stack = function(t) {
                                                                                    for (var e = t.split("\n"), r = [], n = 0, i = e.length; n < i; n++) {
                                                                                        var o = e[n];
                                                                                        !R(o) && -1 === (s = o).indexOf("(module.js:") && -1 === s.indexOf("(node.js:") && o && r.push(o)
                                                                                    }
                                                                                    var s;
                                                                                    return r.join("\n")
                                                                                }(i)
                                                                            }
                                                                        })(e, t), n.call(r, e)
                                                                    }, e.call(t, r)
                                                                }
                                                            }(this, t)
                                                        }
                                                    }
                                                    return ie = t.prototype, t.isObservable = function(t) {
                                                        return t && S(t.subscribe)
                                                    }, ie.subscribe = ie.forEach = function(t, e, r) {
                                                        return this._subscribe("object" == typeof t ? t : ne(t, e, r))
                                                    }, ie.subscribeOnNext = function(t, e) {
                                                        return this._subscribe(ne(void 0 !== e ? function(r) {
                                                            t.call(e, r)
                                                        } : t))
                                                    }, ie.subscribeOnError = function(t, e) {
                                                        return this._subscribe(ne(null, void 0 !== e ? function(r) {
                                                            t.call(e, r)
                                                        } : t))
                                                    }, ie.subscribeOnCompleted = function(t, e) {
                                                        return this._subscribe(ne(null, null, void 0 !== e ? function() {
                                                            t.call(e)
                                                        } : t))
                                                    }, t
                                                }(),
                                                he = b.ObservableBase = function(t) {
                                                    function e(t, e) {
                                                        var r, n = e[0],
                                                            i = e[1],
                                                            o = C(i.subscribeCore).call(i, n);
                                                        o !== T || n.fail(T.e) || k(T.e), n.setDisposable((r = o) && S(r.dispose) ? r : S(r) ? vt(r) : gt)
                                                    }

                                                    function r() {
                                                        t.call(this)
                                                    }
                                                    return ft(r, t), r.prototype._subscribe = function(t) {
                                                        var r = new bn(t),
                                                            n = [r, this];
                                                        return Bt.scheduleRequired() ? Bt.schedule(n, e) : e(0, n), r
                                                    }, r.prototype.subscribeCore = j, r
                                                }(ce),
                                                fe = b.FlatMapObservable = function(t) {
                                                    function e(e, r, n, i) {
                                                        this.resultSelector = S(n) ? n : null, this.selector = W(S(r) ? r : function() {
                                                            return r
                                                        }, i, 3), this.source = e, t.call(this)
                                                    }

                                                    function r(t, e, r, n) {
                                                        this.i = 0, this.selector = e, this.resultSelector = r, this.source = n, this.o = t, oe.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new r(t, this.selector, this.resultSelector, this))
                                                    }, ft(r, oe), r.prototype._wrapResult = function(t, e, r) {
                                                        return this.resultSelector ? t.map((function(t, n) {
                                                            return this.resultSelector(e, t, r, n)
                                                        }), this) : t
                                                    }, r.prototype.next = function(t) {
                                                        var e = this.i++,
                                                            r = C(this.selector)(t, e, this.source);
                                                        if (r === T) return this.o.onError(r.e);
                                                        E(r) && (r = Se(r)), (V(r) || K(r)) && (r = ce.from(r)), this.o.onNext(this._wrapResult(r, t, e))
                                                    }, r.prototype.error = function(t) {
                                                        this.o.onError(t)
                                                    }, r.prototype.completed = function() {
                                                        this.o.onCompleted()
                                                    }, e
                                                }(he),
                                                le = b.internals.Enumerable = function() {};

                                            function pe(t) {
                                                this._s = t, this.isDisposed = !1
                                            }
                                            pe.prototype.dispose = function() {
                                                this.isDisposed || (this.isDisposed = !0, this._s.isDisposed = !0)
                                            };
                                            var de = function(t) {
                                                function e(e) {
                                                    this.sources = e, t.call(this)
                                                }

                                                function r(t, e) {
                                                    if (!t.isDisposed) {
                                                        var r = C(t.e.next).call(t.e);
                                                        if (r === T) return t.o.onError(r.e);
                                                        if (r.done) return t.o.onCompleted();
                                                        var i = r.value;
                                                        E(i) && (i = Se(i));
                                                        var o = new St;
                                                        t.subscription.setDisposable(o), o.setDisposable(i.subscribe(new n(t, e)))
                                                    }
                                                }

                                                function n(t, e) {
                                                    this._state = t, this._recurse = e, oe.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    var e = new It,
                                                        n = {
                                                            isDisposed: !1,
                                                            o: t,
                                                            subscription: e,
                                                            e: this.sources[q]()
                                                        },
                                                        i = Bt.scheduleRecursive(n, r);
                                                    return new Ct([e, i, new pe(n)])
                                                }, ft(n, oe), n.prototype.next = function(t) {
                                                    this._state.o.onNext(t)
                                                }, n.prototype.error = function(t) {
                                                    this._state.o.onError(t)
                                                }, n.prototype.completed = function() {
                                                    this._recurse(this._state)
                                                }, e
                                            }(he);
                                            le.prototype.concat = function() {
                                                return new de(this)
                                            };
                                            var be = function(t) {
                                                function e(e) {
                                                    this.sources = e, t.call(this)
                                                }

                                                function r(t, e) {
                                                    if (!t.isDisposed) {
                                                        var r = C(t.e.next).call(t.e);
                                                        if (r === T) return t.o.onError(r.e);
                                                        if (r.done) return null !== t.lastError ? t.o.onError(t.lastError) : t.o.onCompleted();
                                                        var i = r.value;
                                                        E(i) && (i = Se(i));
                                                        var o = new St;
                                                        t.subscription.setDisposable(o), o.setDisposable(i.subscribe(new n(t, e)))
                                                    }
                                                }

                                                function n(t, e) {
                                                    this._state = t, this._recurse = e, oe.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    var e = new It,
                                                        n = {
                                                            isDisposed: !1,
                                                            e: this.sources[q](),
                                                            subscription: e,
                                                            lastError: null,
                                                            o: t
                                                        },
                                                        i = Bt.scheduleRecursive(n, r);
                                                    return new Ct([e, i, new pe(n)])
                                                }, ft(n, oe), n.prototype.next = function(t) {
                                                    this._state.o.onNext(t)
                                                }, n.prototype.error = function(t) {
                                                    this._state.lastError = t, this._recurse(this._state)
                                                }, n.prototype.completed = function() {
                                                    this._state.o.onCompleted()
                                                }, e
                                            }(he);
                                            le.prototype.catchError = function() {
                                                return new be(this)
                                            };
                                            var _e = function(t) {
                                                    function e(t, e) {
                                                        this.v = t, this.c = null == e ? -1 : e
                                                    }

                                                    function r(t) {
                                                        this.v = t.v, this.l = t.c
                                                    }
                                                    return ft(e, t), e.prototype[q] = function() {
                                                        return new r(this)
                                                    }, r.prototype.next = function() {
                                                        return 0 === this.l ? z : (this.l > 0 && this.l--, {
                                                            done: !1,
                                                            value: this.v
                                                        })
                                                    }, e
                                                }(le),
                                                ye = le.repeat = function(t, e) {
                                                    return new _e(t, e)
                                                },
                                                ve = function(t) {
                                                    function e(t, e, r) {
                                                        this.s = t, this.fn = e ? W(e, r, 3) : null
                                                    }

                                                    function r(t) {
                                                        this.i = -1, this.s = t.s, this.l = this.s.length, this.fn = t.fn
                                                    }
                                                    return ft(e, t), e.prototype[q] = function() {
                                                        return new r(this)
                                                    }, r.prototype.next = function() {
                                                        return ++this.i < this.l ? {
                                                            done: !1,
                                                            value: this.fn ? this.fn(this.s[this.i], this.i, this.s) : this.s[this.i]
                                                        } : z
                                                    }, e
                                                }(le),
                                                ge = le.of = function(t, e, r) {
                                                    return new ve(t, e, r)
                                                },
                                                me = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._s = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new ue(this._s, t))
                                                    }, e
                                                }(he);
                                            ie.observeOn = function(t) {
                                                return new me(this, t)
                                            };
                                            var we = function(t) {
                                                function e(e, r) {
                                                    this.source = e, this._s = r, t.call(this)
                                                }

                                                function r(t, e) {
                                                    e[1].setDisposable(new xt(t, e[0].subscribe(e[2])))
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    var e = new St,
                                                        n = new It;
                                                    return n.setDisposable(e), e.setDisposable(this._s.schedule([this.source, n, t], r)), n
                                                }, e
                                            }(he);
                                            ie.subscribeOn = function(t) {
                                                return new we(this, t)
                                            };
                                            var Ee = function(t) {
                                                    function e(e, r) {
                                                        this._p = e, this._s = r, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        var r = e[0];
                                                        r.onNext(e[1]), r.onCompleted()
                                                    }

                                                    function n(t, e) {
                                                        e[0].onError(e[1])
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new St,
                                                            i = this,
                                                            o = this._p;
                                                        return S(o) && (o = C(o)()) === T ? (t.onError(o.e), e) : (o.then((function(n) {
                                                            e.setDisposable(i._s.schedule([t, n], r))
                                                        }), (function(r) {
                                                            e.setDisposable(i._s.schedule([t, r], n))
                                                        })), e)
                                                    }, e
                                                }(he),
                                                Se = ce.fromPromise = function(t, e) {
                                                    return e || (e = Vt), new Ee(t, e)
                                                };
                                            ie.toPromise = function(t) {
                                                if (t || (t = b.config.Promise), !t) throw new L("Promise type not provided nor in Rx.config.Promise");
                                                var e = this;
                                                return new t((function(t, r) {
                                                    var n;
                                                    e.subscribe((function(t) {
                                                        n = t
                                                    }), r, (function() {
                                                        t(n)
                                                    }))
                                                }))
                                            };
                                            var Ie = function(t) {
                                                function e(e) {
                                                    this.source = e, t.call(this)
                                                }

                                                function r(t) {
                                                    this.o = t, this.a = [], oe.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this.source.subscribe(new r(t))
                                                }, ft(r, oe), r.prototype.next = function(t) {
                                                    this.a.push(t)
                                                }, r.prototype.error = function(t) {
                                                    this.o.onError(t)
                                                }, r.prototype.completed = function() {
                                                    this.o.onNext(this.a), this.o.onCompleted()
                                                }, e
                                            }(he);
                                            ie.toArray = function() {
                                                return new Ie(this)
                                            }, ce.create = function(t, e) {
                                                return new dn(t, e)
                                            };
                                            var Te = function(t) {
                                                    function e(e) {
                                                        this._f = e, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = C(this._f)();
                                                        return e === T ? Ye(e.e).subscribe(t) : (E(e) && (e = Se(e)), e.subscribe(t))
                                                    }, e
                                                }(he),
                                                Ce = (ce.defer = function(t) {
                                                    return new Te(t)
                                                }, function(t) {
                                                    function e(e) {
                                                        this.scheduler = e, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        this.observer = t, this.scheduler = e
                                                    }

                                                    function n(t, e) {
                                                        return e.onCompleted(), gt
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return new r(t, this.scheduler).run()
                                                    }, r.prototype.run = function() {
                                                        var t = this.observer;
                                                        return this.scheduler === Ut ? n(0, t) : this.scheduler.schedule(t, n)
                                                    }, e
                                                }(he)),
                                                ke = new Ce(Ut),
                                                xe = ce.empty = function(t) {
                                                    return Nt(t) || (t = Ut), t === Ut ? ke : new Ce(t)
                                                },
                                                Ae = function(t) {
                                                    function e(e, r, n) {
                                                        this._iterable = e, this._fn = r, this._scheduler = n, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = function(t) {
                                                            var e = t[q];
                                                            if (!e && "string" == typeof t) return new De(t)[q]();
                                                            if (!e && t.length !== n) return new Ne(t)[q]();
                                                            if (!e) throw new TypeError("Object is not iterable");
                                                            return t[q]()
                                                        }(Object(this._iterable));
                                                        return this._scheduler.scheduleRecursive(0, function(t, e, r) {
                                                            return function(n, i) {
                                                                var o = C(e.next).call(e);
                                                                if (o === T) return t.onError(o.e);
                                                                if (o.done) return t.onCompleted();
                                                                var s = o.value;
                                                                if (S(r) && (s = C(r)(s, n)) === T) return t.onError(s.e);
                                                                t.onNext(s), i(n + 1)
                                                            }
                                                        }(t, e, this._fn))
                                                    }, e
                                                }(he),
                                                Oe = Math.pow(2, 53) - 1;

                                            function De(t) {
                                                this._s = t
                                            }

                                            function Re(t) {
                                                this._s = t, this._l = t.length, this._i = 0
                                            }

                                            function Ne(t) {
                                                this._a = t
                                            }

                                            function Me(t) {
                                                var e, r;
                                                this._a = t, this._l = (r = +t.length, isNaN(r) ? 0 : 0 !== r && "number" == typeof(e = r) && d.isFinite(e) ? (r = function(t) {
                                                    var e = +t;
                                                    return 0 === e || isNaN(e) ? e : e < 0 ? -1 : 1
                                                }(r) * Math.floor(Math.abs(r))) <= 0 ? 0 : r > Oe ? Oe : r : r), this._i = 0
                                            }
                                            De.prototype[q] = function() {
                                                return new Re(this._s)
                                            }, Re.prototype[q] = function() {
                                                return this
                                            }, Re.prototype.next = function() {
                                                return this._i < this._l ? {
                                                    done: !1,
                                                    value: this._s.charAt(this._i++)
                                                } : z
                                            }, Ne.prototype[q] = function() {
                                                return new Me(this._a)
                                            }, Me.prototype[q] = function() {
                                                return this
                                            }, Me.prototype.next = function() {
                                                return this._i < this._l ? {
                                                    done: !1,
                                                    value: this._a[this._i++]
                                                } : z
                                            };
                                            var Fe = ce.from = function(t, e, r, n) {
                                                    if (null == t) throw new Error("iterable cannot be null.");
                                                    if (e && !S(e)) throw new Error("mapFn when provided must be a function");
                                                    if (e) var i = W(e, r, 2);
                                                    return Nt(n) || (n = Bt), new Ae(t, i, n)
                                                },
                                                Pe = function(t) {
                                                    function e(e, r) {
                                                        this._args = e, this._scheduler = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this._scheduler.scheduleRecursive(0, function(t, e) {
                                                            var r = e.length;
                                                            return function(n, i) {
                                                                n < r ? (t.onNext(e[n]), i(n + 1)) : t.onCompleted()
                                                            }
                                                        }(t, this._args))
                                                    }, e
                                                }(he),
                                                Ue = ce.fromArray = function(t, e) {
                                                    return Nt(e) || (e = Bt), new Pe(t, e)
                                                },
                                                Le = function(t) {
                                                    function e(e, r, n, i, o) {
                                                        this._initialState = e, this._cndFn = r, this._itrFn = n, this._resFn = i, this._s = o, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        if (t.first) t.first = !1;
                                                        else if (t.newState = C(t.self._itrFn)(t.newState), t.newState === T) return t.o.onError(t.newState.e);
                                                        var r = C(t.self._cndFn)(t.newState);
                                                        if (r === T) return t.o.onError(r.e);
                                                        if (r) {
                                                            var n = C(t.self._resFn)(t.newState);
                                                            if (n === T) return t.o.onError(n.e);
                                                            t.o.onNext(n), e(t)
                                                        } else t.o.onCompleted()
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this._s.scheduleRecursive({
                                                            o: t,
                                                            self: this,
                                                            first: !0,
                                                            newState: this._initialState
                                                        }, r)
                                                    }, e
                                                }(he);
                                            ce.generate = function(t, e, r, n, i) {
                                                return Nt(i) || (i = Bt), new Le(t, e, r, n, i)
                                            };
                                            var Be = new(function(t) {
                                                    function e() {
                                                        t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return gt
                                                    }, e
                                                }(he)),
                                                je = ce.never = function() {
                                                    return Be
                                                };

                                            function qe(t, e) {
                                                return Nt(t) || (t = Bt), new Pe(e, t)
                                            }
                                            ce.of = function() {
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                return new Pe(e, Bt)
                                            }, ce.ofWithScheduler = function(t) {
                                                for (var e = arguments.length, r = new Array(e - 1), n = 1; n < e; n++) r[n - 1] = arguments[n];
                                                return new Pe(r, t)
                                            };
                                            var ze = function(t) {
                                                function e(e, r) {
                                                    this._o = e, this._keys = Object.keys(e), this._scheduler = r, t.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this._scheduler.scheduleRecursive(0, function(t, e, r) {
                                                        return function(n, i) {
                                                            if (n < r.length) {
                                                                var o = r[n];
                                                                t.onNext([o, e[o]]), i(n + 1)
                                                            } else t.onCompleted()
                                                        }
                                                    }(t, this._o, this._keys))
                                                }, e
                                            }(he);
                                            ce.pairs = function(t, e) {
                                                return e || (e = Bt), new ze(t, e)
                                            };
                                            var Ke = function(t) {
                                                function e(e, r, n) {
                                                    this.start = e, this.rangeCount = r, this.scheduler = n, t.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this.scheduler.scheduleRecursive(0, function(t, e, r) {
                                                        return function(n, i) {
                                                            n < e ? (r.onNext(t + n), i(n + 1)) : r.onCompleted()
                                                        }
                                                    }(this.start, this.rangeCount, t))
                                                }, e
                                            }(he);
                                            ce.range = function(t, e, r) {
                                                return Nt(r) || (r = Bt), new Ke(t, e, r)
                                            };
                                            var Ve = function(t) {
                                                function e(e, r, n) {
                                                    this.value = e, this.repeatCount = null == r ? -1 : r, this.scheduler = n, t.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    return new We(t, this).run()
                                                }, e
                                            }(he);

                                            function We(t, e) {
                                                this.observer = t, this.parent = e
                                            }
                                            We.prototype.run = function() {
                                                var t = this.observer,
                                                    e = this.parent.value;
                                                return this.parent.scheduler.scheduleRecursive(this.parent.repeatCount, (function(r, n) {
                                                    if ((-1 === r || r > 0) && (t.onNext(e), r > 0 && r--), 0 === r) return t.onCompleted();
                                                    n(r)
                                                }))
                                            }, ce.repeat = function(t, e, r) {
                                                return Nt(r) || (r = Bt), new Ve(t, e, r)
                                            };
                                            var He = function(t) {
                                                    function e(e, r) {
                                                        this._value = e, this._scheduler = r, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        var r = e[1];
                                                        return r.onNext(e[0]), r.onCompleted(), gt
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = [this._value, t];
                                                        return this._scheduler === Ut ? r(0, e) : this._scheduler.schedule(e, r)
                                                    }, e
                                                }(he),
                                                Ge = (ce.return = ce.just = function(t, e) {
                                                    return Nt(e) || (e = Ut), new He(t, e)
                                                }, function(t) {
                                                    function e(e, r) {
                                                        this._error = e, this._scheduler = r, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        return e[1].onError(e[0]), gt
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = [this._error, t];
                                                        return this._scheduler === Ut ? r(0, e) : this._scheduler.schedule(e, r)
                                                    }, e
                                                }(he)),
                                                Ye = ce.throw = function(t, e) {
                                                    return Nt(e) || (e = Ut), new Ge(t, e)
                                                },
                                                Je = function(t) {
                                                    function e(e, r) {
                                                        this._resFn = e, this._obsFn = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = gt,
                                                            r = C(this._resFn)();
                                                        if (r === T) return new Tt(Ye(r.e).subscribe(t), e);
                                                        r && (e = r);
                                                        var n = C(this._obsFn)(r);
                                                        return new Tt(n === T ? Ye(n.e).subscribe(t) : n.subscribe(t), e)
                                                    }, e
                                                }(he);

                                            function $e(t, e) {
                                                return t.amb(e)
                                            }
                                            ce.using = function(t, e) {
                                                return new Je(t, e)
                                            }, ie.amb = function(t) {
                                                var e = this;
                                                return new dn((function(r) {
                                                    var n, i = new St,
                                                        o = new St;

                                                    function s() {
                                                        n || (n = "L", o.dispose())
                                                    }

                                                    function a() {
                                                        n || (n = "R", i.dispose())
                                                    }
                                                    E(t) && (t = Se(t));
                                                    var u = ne((function(t) {
                                                            s(), "L" === n && r.onNext(t)
                                                        }), (function(t) {
                                                            s(), "L" === n && r.onError(t)
                                                        }), (function() {
                                                            s(), "L" === n && r.onCompleted()
                                                        })),
                                                        c = ne((function(t) {
                                                            a(), "R" === n && r.onNext(t)
                                                        }), (function(t) {
                                                            a(), "R" === n && r.onError(t)
                                                        }), (function() {
                                                            a(), "R" === n && r.onCompleted()
                                                        }));
                                                    return i.setDisposable(e.subscribe(u)), o.setDisposable(t.subscribe(c)), new Tt(i, o)
                                                }))
                                            }, ce.amb = function() {
                                                var t, e = je();
                                                if (Array.isArray(arguments[0])) t = arguments[0];
                                                else {
                                                    var r = arguments.length;
                                                    t = new Array(t);
                                                    for (var n = 0; n < r; n++) t[n] = arguments[n]
                                                }
                                                for (n = 0, r = t.length; n < r; n++) e = $e(e, t[n]);
                                                return e
                                            };
                                            var Xe = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._fn = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new St,
                                                            r = new It;
                                                        return r.setDisposable(e), e.setDisposable(this.source.subscribe(new Qe(t, r, this._fn))), r
                                                    }, e
                                                }(he),
                                                Qe = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._s = r, this._fn = n, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        this._o.onNext(t)
                                                    }, e.prototype.completed = function() {
                                                        return this._o.onCompleted()
                                                    }, e.prototype.error = function(t) {
                                                        var e = C(this._fn)(t);
                                                        if (e === T) return this._o.onError(e.e);
                                                        E(e) && (e = Se(e));
                                                        var r = new St;
                                                        this._s.setDisposable(r), r.setDisposable(e.subscribe(this._o))
                                                    }, e
                                                }(oe);
                                            ie.catch = function(t) {
                                                return S(t) ? new Xe(this, t) : Ze([this, t])
                                            };
                                            var Ze = ce.catch = function() {
                                                var t;
                                                if (Array.isArray(arguments[0])) t = arguments[0];
                                                else {
                                                    var e = arguments.length;
                                                    t = new Array(e);
                                                    for (var r = 0; r < e; r++) t[r] = arguments[r]
                                                }
                                                return ge(t).catchError()
                                            };

                                            function tr() {
                                                return !1
                                            }

                                            function er() {
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                return e
                                            }
                                            ie.combineLatest = function() {
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                return Array.isArray(e[0]) ? e[0].unshift(this) : e.unshift(this), ir.apply(this, e)
                                            };
                                            var rr = function(t) {
                                                    function e(e, r) {
                                                        this._params = e, this._cb = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        for (var e = this._params.length, r = new Array(e), n = {
                                                                hasValue: dt(e, tr),
                                                                hasValueAll: !1,
                                                                isDone: dt(e, tr),
                                                                values: new Array(e)
                                                            }, i = 0; i < e; i++) {
                                                            var o = this._params[i],
                                                                s = new St;
                                                            r[i] = s, E(o) && (o = Se(o)), s.setDisposable(o.subscribe(new nr(t, i, this._cb, n)))
                                                        }
                                                        return new Ct(r)
                                                    }, e
                                                }(he),
                                                nr = function(t) {
                                                    function e(e, r, n, i) {
                                                        this._o = e, this._i = r, this._cb = n, this._state = i, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        if (this._state.values[this._i] = t, this._state.hasValue[this._i] = !0, this._state.hasValueAll || (this._state.hasValueAll = this._state.hasValue.every(y))) {
                                                            var e = C(this._cb).apply(null, this._state.values);
                                                            if (e === T) return this._o.onError(e.e);
                                                            this._o.onNext(e)
                                                        } else this._state.isDone.filter((r = this._i, function(t, e) {
                                                            return e !== r
                                                        })).every(y) && this._o.onCompleted();
                                                        var r
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._state.isDone[this._i] = !0, this._state.isDone.every(y) && this._o.onCompleted()
                                                    }, e
                                                }(oe),
                                                ir = ce.combineLatest = function() {
                                                    for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                    var n = S(e[t - 1]) ? e.pop() : er;
                                                    return Array.isArray(e[0]) && (e = e[0]), new rr(e, n)
                                                };
                                            ie.concat = function() {
                                                for (var t = [], e = 0, r = arguments.length; e < r; e++) t.push(arguments[e]);
                                                return t.unshift(this), ar.apply(null, t)
                                            };
                                            var or = function(t) {
                                                    function e(e, r) {
                                                        this._s = e, this._fn = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        this._s.o.onNext(t)
                                                    }, e.prototype.error = function(t) {
                                                        this._s.o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._s.i++, this._fn(this._s)
                                                    }, e
                                                }(oe),
                                                sr = function(t) {
                                                    function e(e) {
                                                        this._sources = e, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        if (!t.disposable.isDisposed) {
                                                            if (t.i === t.sources.length) return t.o.onCompleted();
                                                            var r = t.sources[t.i];
                                                            E(r) && (r = Se(r));
                                                            var n = new St;
                                                            t.subscription.setDisposable(n), n.setDisposable(r.subscribe(new or(t, e)))
                                                        }
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new It,
                                                            n = vt(_),
                                                            i = Ut.scheduleRecursive({
                                                                o: t,
                                                                i: 0,
                                                                subscription: e,
                                                                disposable: n,
                                                                sources: this._sources
                                                            }, r);
                                                        return new Ct([e, n, i])
                                                    }, e
                                                }(he),
                                                ar = ce.concat = function() {
                                                    var t;
                                                    if (Array.isArray(arguments[0])) t = arguments[0];
                                                    else {
                                                        t = new Array(arguments.length);
                                                        for (var e = 0, r = arguments.length; e < r; e++) t[e] = arguments[e]
                                                    }
                                                    return new sr(t)
                                                };
                                            ie.concatAll = function() {
                                                return this.merge(1)
                                            };
                                            var ur = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this.maxConcurrent = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new bt;
                                                        return e.add(this.source.subscribe(new cr(t, this.maxConcurrent, e))), e
                                                    }, e
                                                }(he),
                                                cr = function(t) {
                                                    function e(e, r, n) {
                                                        this.o = e, this.max = r, this.g = n, this.done = !1, this.q = [], this.activeCount = 0, t.call(this)
                                                    }

                                                    function r(e, r) {
                                                        this.parent = e, this.sad = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.handleSubscribe = function(t) {
                                                        var e = new St;
                                                        this.g.add(e), E(t) && (t = Se(t)), e.setDisposable(t.subscribe(new r(this, e)))
                                                    }, e.prototype.next = function(t) {
                                                        this.activeCount < this.max ? (this.activeCount++, this.handleSubscribe(t)) : this.q.push(t)
                                                    }, e.prototype.error = function(t) {
                                                        this.o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this.done = !0, 0 === this.activeCount && this.o.onCompleted()
                                                    }, ft(r, t), r.prototype.next = function(t) {
                                                        this.parent.o.onNext(t)
                                                    }, r.prototype.error = function(t) {
                                                        this.parent.o.onError(t)
                                                    }, r.prototype.completed = function() {
                                                        this.parent.g.remove(this.sad), this.parent.q.length > 0 ? this.parent.handleSubscribe(this.parent.q.shift()) : (this.parent.activeCount--, this.parent.done && 0 === this.parent.activeCount && this.parent.o.onCompleted())
                                                    }, e
                                                }(oe);
                                            ie.merge = function(t) {
                                                return "number" != typeof t ? hr(this, t) : new ur(this, t)
                                            };
                                            var hr = ce.merge = function() {
                                                    var t, e, r = [],
                                                        n = arguments.length;
                                                    if (arguments[0])
                                                        if (Nt(arguments[0]))
                                                            for (t = arguments[0], e = 1; e < n; e++) r.push(arguments[e]);
                                                        else
                                                            for (t = Ut, e = 0; e < n; e++) r.push(arguments[e]);
                                                    else
                                                        for (t = Ut, e = 1; e < n; e++) r.push(arguments[e]);
                                                    return Array.isArray(r[0]) && (r = r[0]), qe(t, r).mergeAll()
                                                },
                                                fr = b.CompositeError = function(t) {
                                                    this.innerErrors = t, this.message = "This contains multiple errors. Check the innerErrors", Error.call(this)
                                                };
                                            fr.prototype = Object.create(Error.prototype), fr.prototype.name = "CompositeError";
                                            var lr = function(t) {
                                                    function e(e) {
                                                        this.source = e, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new bt,
                                                            r = new St,
                                                            n = {
                                                                isStopped: !1,
                                                                errors: [],
                                                                o: t
                                                            };
                                                        return e.add(r), r.setDisposable(this.source.subscribe(new pr(e, n))), e
                                                    }, e
                                                }(he),
                                                pr = function(t) {
                                                    function e(e, r) {
                                                        this._group = e, this._state = r, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        0 === e.length ? t.onCompleted() : t.onError(1 === e.length ? e[0] : new fr(e))
                                                    }

                                                    function n(e, r, n) {
                                                        this._inner = e, this._group = r, this._state = n, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        var e = new St;
                                                        this._group.add(e), E(t) && (t = Se(t)), e.setDisposable(t.subscribe(new n(e, this._group, this._state)))
                                                    }, e.prototype.error = function(t) {
                                                        this._state.errors.push(t), this._state.isStopped = !0, 1 === this._group.length && r(this._state.o, this._state.errors)
                                                    }, e.prototype.completed = function() {
                                                        this._state.isStopped = !0, 1 === this._group.length && r(this._state.o, this._state.errors)
                                                    }, ft(n, t), n.prototype.next = function(t) {
                                                        this._state.o.onNext(t)
                                                    }, n.prototype.error = function(t) {
                                                        this._state.errors.push(t), this._group.remove(this._inner), this._state.isStopped && 1 === this._group.length && r(this._state.o, this._state.errors)
                                                    }, n.prototype.completed = function() {
                                                        this._group.remove(this._inner), this._state.isStopped && 1 === this._group.length && r(this._state.o, this._state.errors)
                                                    }, e
                                                }(oe);
                                            ce.mergeDelayError = function() {
                                                var t;
                                                if (Array.isArray(arguments[0])) t = arguments[0];
                                                else {
                                                    var e = arguments.length;
                                                    t = new Array(e);
                                                    for (var r = 0; r < e; r++) t[r] = arguments[r]
                                                }
                                                var n = qe(null, t);
                                                return new lr(n)
                                            };
                                            var dr = function(t) {
                                                    function e(e) {
                                                        this.source = e, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new bt,
                                                            r = new St;
                                                        return e.add(r), r.setDisposable(this.source.subscribe(new br(t, e))), e
                                                    }, e
                                                }(he),
                                                br = function(t) {
                                                    function e(e, r) {
                                                        this.o = e, this.g = r, this.done = !1, t.call(this)
                                                    }

                                                    function r(e, r) {
                                                        this.parent = e, this.sad = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        var e = new St;
                                                        this.g.add(e), E(t) && (t = Se(t)), e.setDisposable(t.subscribe(new r(this, e)))
                                                    }, e.prototype.error = function(t) {
                                                        this.o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this.done = !0, 1 === this.g.length && this.o.onCompleted()
                                                    }, ft(r, t), r.prototype.next = function(t) {
                                                        this.parent.o.onNext(t)
                                                    }, r.prototype.error = function(t) {
                                                        this.parent.o.onError(t)
                                                    }, r.prototype.completed = function() {
                                                        this.parent.g.remove(this.sad), this.parent.done && 1 === this.parent.g.length && this.parent.o.onCompleted()
                                                    }, e
                                                }(oe);
                                            ie.mergeAll = function() {
                                                return new dr(this)
                                            }, ie.onErrorResumeNext = function(t) {
                                                if (!t) throw new Error("Second observable is required");
                                                return vr([this, t])
                                            };
                                            var _r = function(t) {
                                                    function e(e) {
                                                        this.sources = e, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        if (t.pos < t.sources.length) {
                                                            var r = t.sources[t.pos++];
                                                            E(r) && (r = Se(r));
                                                            var n = new St;
                                                            t.subscription.setDisposable(n), n.setDisposable(r.subscribe(new yr(t, e)))
                                                        } else t.o.onCompleted()
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new It,
                                                            n = Ut.scheduleRecursive({
                                                                pos: 0,
                                                                subscription: e,
                                                                o: t,
                                                                sources: this.sources
                                                            }, r);
                                                        return new Tt(e, n)
                                                    }, e
                                                }(he),
                                                yr = function(t) {
                                                    function e(e, r) {
                                                        this._state = e, this._recurse = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        this._state.o.onNext(t)
                                                    }, e.prototype.error = function() {
                                                        this._recurse(this._state)
                                                    }, e.prototype.completed = function() {
                                                        this._recurse(this._state)
                                                    }, e
                                                }(oe),
                                                vr = ce.onErrorResumeNext = function() {
                                                    var t = [];
                                                    if (Array.isArray(arguments[0])) t = arguments[0];
                                                    else {
                                                        var e = arguments.length;
                                                        t = new Array(e);
                                                        for (var r = 0; r < e; r++) t[r] = arguments[r]
                                                    }
                                                    return new _r(t)
                                                },
                                                gr = function(t) {
                                                    function e(e, r) {
                                                        this._s = e, this._o = E(r) ? Se(r) : r, this._open = !1, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new St;
                                                        e.setDisposable(this._s.subscribe(new mr(t, this))), E(this._o) && (this._o = Se(this._o));
                                                        var r = new St;
                                                        return r.setDisposable(this._o.subscribe(new wr(t, this, r))), new Tt(e, r)
                                                    }, e
                                                }(he),
                                                mr = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._p = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        this._p._open && this._o.onNext(t)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.onCompleted = function() {
                                                        this._p._open && this._o.onCompleted()
                                                    }, e
                                                }(oe),
                                                wr = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._p = r, this._r = n, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function() {
                                                        this._p._open = !0, this._r.dispose()
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.onCompleted = function() {
                                                        this._r.dispose()
                                                    }, e
                                                }(oe);
                                            ie.skipUntil = function(t) {
                                                return new gr(this, t)
                                            };
                                            var Er = function(t) {
                                                function e(e) {
                                                    this.source = e, t.call(this)
                                                }

                                                function r(t, e) {
                                                    this.o = t, this.inner = e, this.stopped = !1, this.latest = 0, this.hasLatest = !1, oe.call(this)
                                                }

                                                function n(t, e) {
                                                    this.parent = t, this.id = e, oe.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    var e = new It,
                                                        n = this.source.subscribe(new r(t, e));
                                                    return new Tt(n, e)
                                                }, ft(r, oe), r.prototype.next = function(t) {
                                                    var e = new St,
                                                        r = ++this.latest;
                                                    this.hasLatest = !0, this.inner.setDisposable(e), E(t) && (t = Se(t)), e.setDisposable(t.subscribe(new n(this, r)))
                                                }, r.prototype.error = function(t) {
                                                    this.o.onError(t)
                                                }, r.prototype.completed = function() {
                                                    this.stopped = !0, !this.hasLatest && this.o.onCompleted()
                                                }, ft(n, oe), n.prototype.next = function(t) {
                                                    this.parent.latest === this.id && this.parent.o.onNext(t)
                                                }, n.prototype.error = function(t) {
                                                    this.parent.latest === this.id && this.parent.o.onError(t)
                                                }, n.prototype.completed = function() {
                                                    this.parent.latest === this.id && (this.parent.hasLatest = !1, this.parent.stopped && this.parent.o.onCompleted())
                                                }, e
                                            }(he);
                                            ie.switch = ie.switchLatest = function() {
                                                return new Er(this)
                                            };
                                            var Sr = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this.other = E(r) ? Se(r) : r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return new Tt(this.source.subscribe(t), this.other.subscribe(new Ir(t)))
                                                    }, e
                                                }(he),
                                                Ir = function(t) {
                                                    function e(e) {
                                                        this._o = e, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function() {
                                                        this._o.onCompleted()
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.onCompleted = _, e
                                                }(oe);

                                            function tr() {
                                                return !1
                                            }

                                            function er() {
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                return e
                                            }
                                            ie.takeUntil = function(t) {
                                                return new Sr(this, t)
                                            };
                                            var Tr = function(t) {
                                                    function e(e, r, n) {
                                                        this._s = e, this._ss = r, this._cb = n, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        for (var e = this._ss.length, r = {
                                                                hasValue: dt(e, tr),
                                                                hasValueAll: !1,
                                                                values: new Array(e)
                                                            }, n = this._ss.length, i = new Array(n + 1), o = 0; o < n; o++) {
                                                            var s = this._ss[o],
                                                                a = new St;
                                                            E(s) && (s = Se(s)), a.setDisposable(s.subscribe(new Cr(t, o, r))), i[o] = a
                                                        }
                                                        var u = new St;
                                                        return u.setDisposable(this._s.subscribe(new kr(t, this._cb, r))), i[n] = u, new Ct(i)
                                                    }, e
                                                }(he),
                                                Cr = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._i = r, this._state = n, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        this._state.values[this._i] = t, this._state.hasValue[this._i] = !0, this._state.hasValueAll = this._state.hasValue.every(y)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = _, e
                                                }(oe),
                                                kr = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._cb = r, this._state = n, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        var e = [t].concat(this._state.values);
                                                        if (this._state.hasValueAll) {
                                                            var r = C(this._cb).apply(null, e);
                                                            if (r === T) return this._o.onError(r.e);
                                                            this._o.onNext(r)
                                                        }
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(oe);

                                            function tr() {
                                                return !1
                                            }

                                            function xr() {
                                                return []
                                            }
                                            ie.withLatestFrom = function() {
                                                if (0 === arguments.length) throw new Error("invalid arguments");
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                var n = S(e[t - 1]) ? e.pop() : er;
                                                return Array.isArray(e[0]) && (e = e[0]), new Tr(this, e, n)
                                            };
                                            var Ar = function(t) {
                                                    function e(e, r) {
                                                        this._s = e, this._cb = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        for (var e = this._s.length, r = new Array(e), n = dt(e, tr), i = dt(e, xr), o = 0; o < e; o++) {
                                                            var s = this._s[o],
                                                                a = new St;
                                                            r[o] = a, E(s) && (s = Se(s)), a.setDisposable(s.subscribe(new Or(t, o, this, i, n)))
                                                        }
                                                        return new Ct(r)
                                                    }, e
                                                }(he),
                                                Or = function(t) {
                                                    function e(e, r, n, i, o) {
                                                        this._o = e, this._i = r, this._p = n, this._q = i, this._d = o, t.call(this)
                                                    }

                                                    function r(t) {
                                                        return t.length > 0
                                                    }

                                                    function n(t) {
                                                        return t.shift()
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        if (this._q[this._i].push(t), this._q.every(r)) {
                                                            var e = this._q.map(n),
                                                                i = C(this._p._cb).apply(null, e);
                                                            if (i === T) return this._o.onError(i.e);
                                                            this._o.onNext(i)
                                                        } else this._d.filter((o = this._i, function(t, e) {
                                                            return e !== o
                                                        })).every(y) && this._o.onCompleted();
                                                        var o
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._d[this._i] = !0, this._d.every(y) && this._o.onCompleted()
                                                    }, e
                                                }(oe);

                                            function tr() {
                                                return !1
                                            }

                                            function xr() {
                                                return []
                                            }

                                            function er() {
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                return e
                                            }
                                            ie.zip = function() {
                                                if (0 === arguments.length) throw new Error("invalid arguments");
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                var n = S(e[t - 1]) ? e.pop() : er;
                                                Array.isArray(e[0]) && (e = e[0]);
                                                var i = this;
                                                return e.unshift(i), new Ar(e, n)
                                            }, ce.zip = function() {
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                Array.isArray(e[0]) && (e = S(e[1]) ? e[0].concat(e[1]) : e[0]);
                                                var n = e.shift();
                                                return n.zip.apply(n, e)
                                            };
                                            var Dr = function(t) {
                                                    function e(e, r) {
                                                        this.sources = e, this._cb = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        for (var e = this.sources, r = e.length, n = new Array(r), i = {
                                                                q: dt(r, xr),
                                                                done: dt(r, tr),
                                                                cb: this._cb,
                                                                o: t
                                                            }, o = 0; o < r; o++) ! function(t) {
                                                            var r = e[t],
                                                                o = new St;
                                                            (V(r) || K(r)) && (r = Fe(r)), n[t] = o, o.setDisposable(r.subscribe(new Rr(i, t)))
                                                        }(o);
                                                        return new Ct(n)
                                                    }, e
                                                }(he),
                                                Rr = function(t) {
                                                    function e(e, r) {
                                                        this._s = e, this._i = r, t.call(this)
                                                    }

                                                    function r(t) {
                                                        return t.length > 0
                                                    }

                                                    function n(t) {
                                                        return t.shift()
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        if (this._s.q[this._i].push(t), this._s.q.every(r)) {
                                                            var e = this._s.q.map(n),
                                                                i = C(this._s.cb).apply(null, e);
                                                            if (i === T) return this._s.o.onError(i.e);
                                                            this._s.o.onNext(i)
                                                        } else this._s.done.filter((o = this._i, function(t, e) {
                                                            return e !== o
                                                        })).every(y) && this._s.o.onCompleted();
                                                        var o
                                                    }, e.prototype.error = function(t) {
                                                        this._s.o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._s.done[this._i] = !0, this._s.done.every(y) && this._s.o.onCompleted()
                                                    }, e
                                                }(oe);

                                            function Nr(t) {
                                                return t.toArray()
                                            }

                                            function Mr(t) {
                                                return t.length > 0
                                            }
                                            ie.zipIterable = function() {
                                                if (0 === arguments.length) throw new Error("invalid arguments");
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                var n = S(e[t - 1]) ? e.pop() : er,
                                                    i = this;
                                                return e.unshift(i), new Dr(e, n)
                                            }, ie.asObservable = function() {
                                                return new dn((t = this, function(e) {
                                                    return t.subscribe(e)
                                                }), this);
                                                var t
                                            }, ie.bufferWithCount = ie.bufferCount = function(t, e) {
                                                return "number" != typeof e && (e = t), this.windowWithCount(t, e).flatMap(Nr).filter(Mr)
                                            };
                                            var Fr = function(t) {
                                                    function e(e) {
                                                        this.source = e, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new Pr(t))
                                                    }, e
                                                }(he),
                                                Pr = function(t) {
                                                    function e(e) {
                                                        this._o = e, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        t.accept(this._o)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(oe);
                                            ie.dematerialize = function() {
                                                return new Fr(this)
                                            };
                                            var Ur = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this.keyFn = r, this.comparer = n, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new Lr(t, this.keyFn, this.comparer))
                                                    }, e
                                                }(he),
                                                Lr = function(t) {
                                                    function e(e, r, n) {
                                                        this.o = e, this.keyFn = r, this.comparer = n, this.hasCurrentKey = !1, this.currentKey = null, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        var e, r = t;
                                                        return S(this.keyFn) && (r = C(this.keyFn)(t)) === T ? this.o.onError(r.e) : this.hasCurrentKey && (e = C(this.comparer)(this.currentKey, r)) === T ? this.o.onError(e.e) : void(this.hasCurrentKey && e || (this.hasCurrentKey = !0, this.currentKey = r, this.o.onNext(t)))
                                                    }, e.prototype.error = function(t) {
                                                        this.o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this.o.onCompleted()
                                                    }, e
                                                }(oe);
                                            ie.distinctUntilChanged = function(t, e) {
                                                return e || (e = g), new Ur(this, t, e)
                                            };
                                            var Br = function(t) {
                                                function e(e, r, n, i) {
                                                    this.source = e, this._oN = r, this._oE = n, this._oC = i, t.call(this)
                                                }

                                                function r(t, e) {
                                                    this.o = t, this.t = !e._oN || S(e._oN) ? ne(e._oN || _, e._oE || _, e._oC || _) : e._oN, this.isStopped = !1, oe.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this.source.subscribe(new r(t, this))
                                                }, ft(r, oe), r.prototype.next = function(t) {
                                                    var e = C(this.t.onNext).call(this.t, t);
                                                    e === T && this.o.onError(e.e), this.o.onNext(t)
                                                }, r.prototype.error = function(t) {
                                                    var e = C(this.t.onError).call(this.t, t);
                                                    if (e === T) return this.o.onError(e.e);
                                                    this.o.onError(t)
                                                }, r.prototype.completed = function() {
                                                    var t = C(this.t.onCompleted).call(this.t);
                                                    if (t === T) return this.o.onError(t.e);
                                                    this.o.onCompleted()
                                                }, e
                                            }(he);
                                            ie.do = ie.tap = ie.doAction = function(t, e, r) {
                                                return new Br(this, t, e, r)
                                            }, ie.doOnNext = ie.tapOnNext = function(t, e) {
                                                return this.tap(void 0 !== e ? function(r) {
                                                    t.call(e, r)
                                                } : t)
                                            }, ie.doOnError = ie.tapOnError = function(t, e) {
                                                return this.tap(_, void 0 !== e ? function(r) {
                                                    t.call(e, r)
                                                } : t)
                                            }, ie.doOnCompleted = ie.tapOnCompleted = function(t, e) {
                                                return this.tap(_, null, void 0 !== e ? function() {
                                                    t.call(e)
                                                } : t)
                                            };
                                            var jr = function(t) {
                                                function e(e, r, n) {
                                                    this.source = e, this._fn = W(r, n, 0), t.call(this)
                                                }

                                                function r(t, e) {
                                                    this.isDisposed = !1, this._s = t, this._fn = e
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    var e = C(this.source.subscribe).call(this.source, t);
                                                    return e === T && (this._fn(), k(e.e)), new r(e, this._fn)
                                                }, r.prototype.dispose = function() {
                                                    if (!this.isDisposed) {
                                                        var t = C(this._s.dispose).call(this._s);
                                                        this._fn(), t === T && k(t.e)
                                                    }
                                                }, e
                                            }(he);
                                            ie.finally = function(t, e) {
                                                return new jr(this, t, e)
                                            };
                                            var qr = function(t) {
                                                function e(e) {
                                                    this.source = e, t.call(this)
                                                }

                                                function r(t) {
                                                    this.o = t, this.isStopped = !1
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this.source.subscribe(new r(t))
                                                }, r.prototype.onNext = _, r.prototype.onError = function(t) {
                                                    this.isStopped || (this.isStopped = !0, this.o.onError(t))
                                                }, r.prototype.onCompleted = function() {
                                                    this.isStopped || (this.isStopped = !0, this.o.onCompleted())
                                                }, r.prototype.dispose = function() {
                                                    this.isStopped = !0
                                                }, r.prototype.fail = function(t) {
                                                    return !this.isStopped && (this.isStopped = !0, this.observer.onError(t), !0)
                                                }, e
                                            }(he);
                                            ie.ignoreElements = function() {
                                                return new qr(this)
                                            };
                                            var zr = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new Kr(t))
                                                    }, e
                                                }(he),
                                                Kr = function(t) {
                                                    function e(e) {
                                                        this._o = e, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        this._o.onNext(Zt(t))
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onNext(te(t)), this._o.onCompleted()
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(ee()), this._o.onCompleted()
                                                    }, e
                                                }(oe);

                                            function Vr(t) {
                                                return {
                                                    "@@iterator": function() {
                                                        return {
                                                            next: function() {
                                                                return {
                                                                    done: !1,
                                                                    value: t
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            ie.materialize = function() {
                                                return new zr(this)
                                            }, ie.repeat = function(t) {
                                                return ye(this, t).concat()
                                            }, ie.retry = function(t) {
                                                return ye(this, t).catchError()
                                            };
                                            var Wr = function(t) {
                                                function e(t) {
                                                    return {
                                                        isDisposed: !1,
                                                        dispose: function() {
                                                            this.isDisposed || (this.isDisposed = !0, t.isDisposed = !0)
                                                        }
                                                    }
                                                }

                                                function r(e, r) {
                                                    this.source = e, this._notifier = r, t.call(this)
                                                }
                                                return ft(r, t), r.prototype.subscribeCore = function(t) {
                                                    var r = new yn,
                                                        n = new yn,
                                                        i = this._notifier(r).subscribe(n),
                                                        o = this.source["@@iterator"](),
                                                        s = {
                                                            isDisposed: !1
                                                        },
                                                        a = new It,
                                                        u = Bt.scheduleRecursive(null, (function(e, i) {
                                                            if (!s.isDisposed) {
                                                                var u = o.next();
                                                                if (u.done) t.onCompleted();
                                                                else {
                                                                    var c = u.value;
                                                                    E(c) && (c = Se(c));
                                                                    var h = new St,
                                                                        f = new St;
                                                                    a.setDisposable(new Tt(f, h)), h.setDisposable(c.subscribe((function(e) {
                                                                        t.onNext(e)
                                                                    }), (function(e) {
                                                                        f.setDisposable(n.subscribe(i, (function(e) {
                                                                            t.onError(e)
                                                                        }), (function() {
                                                                            t.onCompleted()
                                                                        }))), r.onNext(e), h.dispose()
                                                                    }), (function() {
                                                                        t.onCompleted()
                                                                    })))
                                                                }
                                                            }
                                                        }));
                                                    return new Ct([i, a, u, e(s)])
                                                }, r
                                            }(he);

                                            function Vr(t) {
                                                return {
                                                    "@@iterator": function() {
                                                        return {
                                                            next: function() {
                                                                return {
                                                                    done: !1,
                                                                    value: t
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            ie.retryWhen = function(t) {
                                                return new Wr(Vr(this), t)
                                            };
                                            var Hr = function(t) {
                                                function e(t) {
                                                    return {
                                                        isDisposed: !1,
                                                        dispose: function() {
                                                            this.isDisposed || (this.isDisposed = !0, t.isDisposed = !0)
                                                        }
                                                    }
                                                }

                                                function r(e, r) {
                                                    this.source = e, this._notifier = r, t.call(this)
                                                }
                                                return ft(r, t), r.prototype.subscribeCore = function(t) {
                                                    var r = new yn,
                                                        n = new yn,
                                                        i = this._notifier(r).subscribe(n),
                                                        o = this.source["@@iterator"](),
                                                        s = {
                                                            isDisposed: !1
                                                        },
                                                        a = new It,
                                                        u = Bt.scheduleRecursive(null, (function(e, i) {
                                                            if (!s.isDisposed) {
                                                                var u = o.next();
                                                                if (u.done) t.onCompleted();
                                                                else {
                                                                    var c = u.value;
                                                                    E(c) && (c = Se(c));
                                                                    var h = new St,
                                                                        f = new St;
                                                                    a.setDisposable(new Tt(f, h)), h.setDisposable(c.subscribe((function(e) {
                                                                        t.onNext(e)
                                                                    }), (function(e) {
                                                                        t.onError(e)
                                                                    }), (function() {
                                                                        f.setDisposable(n.subscribe(i, (function(e) {
                                                                            t.onError(e)
                                                                        }), (function() {
                                                                            t.onCompleted()
                                                                        }))), r.onNext(null), h.dispose()
                                                                    })))
                                                                }
                                                            }
                                                        }));
                                                    return new Ct([i, a, u, e(s)])
                                                }, r
                                            }(he);
                                            ie.repeatWhen = function(t) {
                                                return new Hr(Vr(this), t)
                                            };
                                            var Gr = function(t) {
                                                    function e(e, r, n, i) {
                                                        this.source = e, this.accumulator = r, this.hasSeed = n, this.seed = i, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new Yr(t, this))
                                                    }, e
                                                }(he),
                                                Yr = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._p = r, this._fn = r.accumulator, this._hs = r.hasSeed, this._s = r.seed, this._ha = !1, this._a = null, this._hv = !1, this._i = 0, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        if (!this._hv && (this._hv = !0), this._ha ? this._a = C(this._fn)(this._a, t, this._i, this._p) : (this._a = this._hs ? C(this._fn)(this._s, t, this._i, this._p) : t, this._ha = !0), this._a === T) return this._o.onError(this._a.e);
                                                        this._o.onNext(this._a), this._i++
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        !this._hv && this._hs && this._o.onNext(this._s), this._o.onCompleted()
                                                    }, e
                                                }(oe);
                                            ie.scan = function() {
                                                var t, e = !1,
                                                    r = arguments[0];
                                                return 2 === arguments.length && (e = !0, t = arguments[1]), new Gr(this, r, e, t)
                                            };
                                            var Jr = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._c = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new $r(t, this._c))
                                                    }, e
                                                }(he),
                                                $r = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._c = r, this._q = [], t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        this._q.push(t), this._q.length > this._c && this._o.onNext(this._q.shift())
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(oe);
                                            ie.skipLast = function(t) {
                                                if (t < 0) throw new U;
                                                return new Jr(this, t)
                                            }, ie.startWith = function() {
                                                var t, e = 0;
                                                arguments.length && Nt(arguments[0]) ? (t = arguments[0], e = 1) : t = Ut;
                                                for (var r = [], n = e, i = arguments.length; n < i; n++) r.push(arguments[n]);
                                                return ar.apply(null, [Ue(r, t), this])
                                            };
                                            var Xr = function(t) {
                                                function e(e, r) {
                                                    this._o = e, this._c = r, this._q = [], t.call(this)
                                                }
                                                return ft(e, t), e.prototype.next = function(t) {
                                                    this._q.push(t), this._q.length > this._c && this._q.shift()
                                                }, e.prototype.error = function(t) {
                                                    this._o.onError(t)
                                                }, e.prototype.completed = function() {
                                                    for (; this._q.length > 0;) this._o.onNext(this._q.shift());
                                                    this._o.onCompleted()
                                                }, e
                                            }(oe);
                                            ie.takeLast = function(t) {
                                                if (t < 0) throw new U;
                                                var e = this;
                                                return new dn((function(r) {
                                                    return e.subscribe(new Xr(r, t))
                                                }), e)
                                            };
                                            var Qr = function(t) {
                                                function e(e, r) {
                                                    this._o = e, this._c = r, this._q = [], t.call(this)
                                                }
                                                return ft(e, t), e.prototype.next = function(t) {
                                                    this._q.push(t), this._q.length > this._c && this._q.shift()
                                                }, e.prototype.error = function(t) {
                                                    this._o.onError(t)
                                                }, e.prototype.completed = function() {
                                                    this._o.onNext(this._q), this._o.onCompleted()
                                                }, e
                                            }(oe);
                                            ie.takeLastBuffer = function(t) {
                                                if (t < 0) throw new U;
                                                var e = this;
                                                return new dn((function(r) {
                                                    return e.subscribe(new Qr(r, t))
                                                }), e)
                                            }, ie.windowWithCount = ie.windowCount = function(t, e) {
                                                var r = this;
                                                if (+t || (t = 0), 1 / 0 === Math.abs(t) && (t = 0), t <= 0) throw new U;
                                                if (null == e && (e = t), +e || (e = 0), 1 / 0 === Math.abs(e) && (e = 0), e <= 0) throw new U;
                                                return new dn((function(n) {
                                                    var i = new St,
                                                        o = new kt(i),
                                                        s = 0,
                                                        a = [];

                                                    function u() {
                                                        var t = new yn;
                                                        a.push(t), n.onNext(pt(t, o))
                                                    }
                                                    return u(), i.setDisposable(r.subscribe((function(r) {
                                                        for (var n = 0, i = a.length; n < i; n++) a[n].onNext(r);
                                                        var o = s - t + 1;
                                                        o >= 0 && o % e == 0 && a.shift().onCompleted(), ++s % e == 0 && u()
                                                    }), (function(t) {
                                                        for (; a.length > 0;) a.shift().onError(t);
                                                        n.onError(t)
                                                    }), (function() {
                                                        for (; a.length > 0;) a.shift().onCompleted();
                                                        n.onCompleted()
                                                    }))), o
                                                }), r)
                                            }, ie.flatMapConcat = ie.concatMap = function(t, e, r) {
                                                return new fe(this, t, e, r).merge(1)
                                            }, ie.concatMapObserver = ie.selectConcatObserver = function(t, e, r, n) {
                                                var i = this,
                                                    o = W(t, n, 2),
                                                    s = W(e, n, 1),
                                                    a = W(r, n, 0);
                                                return new dn((function(t) {
                                                    var e = 0;
                                                    return i.subscribe((function(r) {
                                                        var n;
                                                        try {
                                                            n = o(r, e++)
                                                        } catch (e) {
                                                            return void t.onError(e)
                                                        }
                                                        E(n) && (n = Se(n)), t.onNext(n)
                                                    }), (function(e) {
                                                        var r;
                                                        try {
                                                            r = s(e)
                                                        } catch (e) {
                                                            return void t.onError(e)
                                                        }
                                                        E(r) && (r = Se(r)), t.onNext(r), t.onCompleted()
                                                    }), (function() {
                                                        var e;
                                                        try {
                                                            e = a()
                                                        } catch (e) {
                                                            return void t.onError(e)
                                                        }
                                                        E(e) && (e = Se(e)), t.onNext(e), t.onCompleted()
                                                    }))
                                                }), this).concatAll()
                                            };
                                            var Zr = function(t) {
                                                function e(e, r) {
                                                    this._o = e, this._d = r, this._f = !1, t.call(this)
                                                }
                                                return ft(e, t), e.prototype.next = function(t) {
                                                    this._f = !0, this._o.onNext(t)
                                                }, e.prototype.error = function(t) {
                                                    this._o.onError(t)
                                                }, e.prototype.completed = function() {
                                                    !this._f && this._o.onNext(this._d), this._o.onCompleted()
                                                }, e
                                            }(oe);

                                            function tn(t) {
                                                this.comparer = t, this.set = []
                                            }
                                            ie.defaultIfEmpty = function(t) {
                                                var e = this;
                                                return t === n && (t = null), new dn((function(r) {
                                                    return e.subscribe(new Zr(r, t))
                                                }), e)
                                            }, tn.prototype.push = function(t) {
                                                var e = -1 === function(t, e, r) {
                                                    for (var n = 0, i = t.length; n < i; n++)
                                                        if (r(t[n], e)) return n;
                                                    return -1
                                                }(this.set, t, this.comparer);
                                                return e && this.set.push(t), e
                                            };
                                            var en = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._keyFn = r, this._cmpFn = n, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new rn(t, this._keyFn, this._cmpFn))
                                                    }, e
                                                }(he),
                                                rn = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._keyFn = r, this._h = new tn(n), t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        var e = t;
                                                        if (S(this._keyFn) && (e = C(this._keyFn)(t)) === T) return this._o.onError(e.e);
                                                        this._h.push(e) && this._o.onNext(t)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(oe);
                                            ie.distinct = function(t, e) {
                                                return e || (e = g), new en(this, t, e)
                                            };
                                            var nn = function(t) {
                                                function e(e, r, n) {
                                                    this.source = e, this.selector = W(r, n, 3), t.call(this)
                                                }

                                                function r(t, e, r) {
                                                    this.o = t, this.selector = e, this.source = r, this.i = 0, oe.call(this)
                                                }
                                                return ft(e, t), e.prototype.internalMap = function(t, r) {
                                                    return new e(this.source, function(t, e) {
                                                        return function(r, n, i) {
                                                            return t.call(this, e.selector(r, n, i), n, i)
                                                        }
                                                    }(t, this), r)
                                                }, e.prototype.subscribeCore = function(t) {
                                                    return this.source.subscribe(new r(t, this.selector, this))
                                                }, ft(r, oe), r.prototype.next = function(t) {
                                                    var e = C(this.selector)(t, this.i++, this.source);
                                                    if (e === T) return this.o.onError(e.e);
                                                    this.o.onNext(e)
                                                }, r.prototype.error = function(t) {
                                                    this.o.onError(t)
                                                }, r.prototype.completed = function() {
                                                    this.o.onCompleted()
                                                }, e
                                            }(he);

                                            function on(t, e) {
                                                return function(r) {
                                                    for (var i = r, o = 0; o < e; o++) {
                                                        var s = i[t[o]];
                                                        if (void 0 === s) return n;
                                                        i = s
                                                    }
                                                    return i
                                                }
                                            }
                                            ie.map = ie.select = function(t, e) {
                                                var r = "function" == typeof t ? t : function() {
                                                    return t
                                                };
                                                return this instanceof nn ? this.internalMap(r, e) : new nn(this, r, e)
                                            }, ie.pluck = function() {
                                                var t = arguments.length,
                                                    e = new Array(t);
                                                if (0 === t) throw new Error("List of properties cannot be empty.");
                                                for (var r = 0; r < t; r++) e[r] = arguments[r];
                                                return this.map(on(e, t))
                                            }, ie.flatMapObserver = ie.selectManyObserver = function(t, e, r, n) {
                                                var i = this;
                                                return new dn((function(o) {
                                                    var s = 0;
                                                    return i.subscribe((function(e) {
                                                        var r;
                                                        try {
                                                            r = t.call(n, e, s++)
                                                        } catch (t) {
                                                            return void o.onError(t)
                                                        }
                                                        E(r) && (r = Se(r)), o.onNext(r)
                                                    }), (function(t) {
                                                        var r;
                                                        try {
                                                            r = e.call(n, t)
                                                        } catch (t) {
                                                            return void o.onError(t)
                                                        }
                                                        E(r) && (r = Se(r)), o.onNext(r), o.onCompleted()
                                                    }), (function() {
                                                        var t;
                                                        try {
                                                            t = r.call(n)
                                                        } catch (t) {
                                                            return void o.onError(t)
                                                        }
                                                        E(t) && (t = Se(t)), o.onNext(t), o.onCompleted()
                                                    }))
                                                }), i).mergeAll()
                                            }, ie.flatMap = ie.selectMany = ie.mergeMap = function(t, e, r) {
                                                return new fe(this, t, e, r).mergeAll()
                                            }, ie.flatMapLatest = ie.switchMap = function(t, e, r) {
                                                return new fe(this, t, e, r).switchLatest()
                                            };
                                            var sn = function(t) {
                                                function e(e, r) {
                                                    this.source = e, this._count = r, t.call(this)
                                                }

                                                function r(t, e) {
                                                    this._o = t, this._r = e, oe.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this.source.subscribe(new r(t, this._count))
                                                }, ft(r, oe), r.prototype.next = function(t) {
                                                    this._r <= 0 ? this._o.onNext(t) : this._r--
                                                }, r.prototype.error = function(t) {
                                                    this._o.onError(t)
                                                }, r.prototype.completed = function() {
                                                    this._o.onCompleted()
                                                }, e
                                            }(he);
                                            ie.skip = function(t) {
                                                if (t < 0) throw new U;
                                                return new sn(this, t)
                                            };
                                            var an = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._fn = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new un(t, this))
                                                    }, e
                                                }(he),
                                                un = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._p = r, this._i = 0, this._r = !1, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        if (!this._r) {
                                                            var e = C(this._p._fn)(t, this._i++, this._p);
                                                            if (e === T) return this._o.onError(e.e);
                                                            this._r = !e
                                                        }
                                                        this._r && this._o.onNext(t)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(oe);
                                            ie.skipWhile = function(t, e) {
                                                var r = W(t, e, 3);
                                                return new an(this, r)
                                            };
                                            var cn = function(t) {
                                                function e(e, r) {
                                                    this.source = e, this._count = r, t.call(this)
                                                }

                                                function r(t, e) {
                                                    this._o = t, this._c = e, this._r = e, oe.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this.source.subscribe(new r(t, this._count))
                                                }, ft(r, oe), r.prototype.next = function(t) {
                                                    this._r-- > 0 && (this._o.onNext(t), this._r <= 0 && this._o.onCompleted())
                                                }, r.prototype.error = function(t) {
                                                    this._o.onError(t)
                                                }, r.prototype.completed = function() {
                                                    this._o.onCompleted()
                                                }, e
                                            }(he);
                                            ie.take = function(t, e) {
                                                if (t < 0) throw new U;
                                                return 0 === t ? xe(e) : new cn(this, t)
                                            };
                                            var hn = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._fn = r, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new fn(t, this))
                                                    }, e
                                                }(he),
                                                fn = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._p = r, this._i = 0, this._r = !0, t.call(this)
                                                    }
                                                    return ft(e, t), e.prototype.next = function(t) {
                                                        if (this._r && (this._r = C(this._p._fn)(t, this._i++, this._p), this._r === T)) return this._o.onError(this._r.e);
                                                        this._r ? this._o.onNext(t) : this._o.onCompleted()
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(oe);
                                            ie.takeWhile = function(t, e) {
                                                var r = W(t, e, 3);
                                                return new hn(this, r)
                                            };
                                            var ln = function(t) {
                                                function e(e, r, n) {
                                                    this.source = e, this.predicate = W(r, n, 3), t.call(this)
                                                }

                                                function r(t, e, r) {
                                                    this.o = t, this.predicate = e, this.source = r, this.i = 0, oe.call(this)
                                                }
                                                return ft(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this.source.subscribe(new r(t, this.predicate, this))
                                                }, e.prototype.internalFilter = function(t, r) {
                                                    return new e(this.source, function(t, e) {
                                                        return function(r, n, i) {
                                                            return e.predicate(r, n, i) && t.call(this, r, n, i)
                                                        }
                                                    }(t, this), r)
                                                }, ft(r, oe), r.prototype.next = function(t) {
                                                    var e = C(this.predicate)(t, this.i++, this.source);
                                                    if (e === T) return this.o.onError(e.e);
                                                    e && this.o.onNext(t)
                                                }, r.prototype.error = function(t) {
                                                    this.o.onError(t)
                                                }, r.prototype.completed = function() {
                                                    this.o.onCompleted()
                                                }, e
                                            }(he);
                                            ie.filter = ie.where = function(t, e) {
                                                return this instanceof ln ? this.internalFilter(t, e) : new ln(this, t, e)
                                            };
                                            var pn = function(t) {
                                                function e(e, r) {
                                                    this._o = e, this._xform = r, t.call(this)
                                                }
                                                return ft(e, t), e.prototype.next = function(t) {
                                                    var e = C(this._xform["@@transducer/step"]).call(this._xform, this._o, t);
                                                    e === T && this._o.onError(e.e)
                                                }, e.prototype.error = function(t) {
                                                    this._o.onError(t)
                                                }, e.prototype.completed = function() {
                                                    this._xform["@@transducer/result"](this._o)
                                                }, e
                                            }(oe);
                                            ie.transduce = function(t) {
                                                var e = this;
                                                return new dn((function(r) {
                                                    var n = t(function(t) {
                                                        return {
                                                            "@@transducer/init": function() {
                                                                return t
                                                            },
                                                            "@@transducer/step": function(t, e) {
                                                                return t.onNext(e)
                                                            },
                                                            "@@transducer/result": function(t) {
                                                                return t.onCompleted()
                                                            }
                                                        }
                                                    }(r));
                                                    return e.subscribe(new pn(r, n))
                                                }), e)
                                            };
                                            var dn = b.AnonymousObservable = function(t) {
                                                    function e(t, e) {
                                                        var r, n = e[0],
                                                            i = e[1],
                                                            o = C(i.__subscribe).call(i, n);
                                                        o !== T || n.fail(T.e) || k(T.e), n.setDisposable((r = o) && S(r.dispose) ? r : S(r) ? vt(r) : gt)
                                                    }

                                                    function r(e, r) {
                                                        this.source = r, this.__subscribe = e, t.call(this)
                                                    }
                                                    return ft(r, t), r.prototype._subscribe = function(t) {
                                                        var r = new bn(t),
                                                            n = [r, this];
                                                        return Bt.scheduleRequired() ? Bt.schedule(n, e) : e(0, n), r
                                                    }, r
                                                }(ce),
                                                bn = function(t) {
                                                    function e(e) {
                                                        t.call(this), this.observer = e, this.m = new St
                                                    }
                                                    ft(e, t);
                                                    var r = e.prototype;
                                                    return r.next = function(t) {
                                                        var e = C(this.observer.onNext).call(this.observer, t);
                                                        e === T && (this.dispose(), k(e.e))
                                                    }, r.error = function(t) {
                                                        var e = C(this.observer.onError).call(this.observer, t);
                                                        this.dispose(), e === T && k(e.e)
                                                    }, r.completed = function() {
                                                        var t = C(this.observer.onCompleted).call(this.observer);
                                                        this.dispose(), t === T && k(t.e)
                                                    }, r.setDisposable = function(t) {
                                                        this.m.setDisposable(t)
                                                    }, r.getDisposable = function() {
                                                        return this.m.getDisposable()
                                                    }, r.dispose = function() {
                                                        t.prototype.dispose.call(this), this.m.dispose()
                                                    }, e
                                                }(oe),
                                                _n = function(t, e) {
                                                    this._s = t, this._o = e
                                                };
                                            _n.prototype.dispose = function() {
                                                if (!this._s.isDisposed && null !== this._o) {
                                                    var t = this._s.observers.indexOf(this._o);
                                                    this._s.observers.splice(t, 1), this._o = null
                                                }
                                            };
                                            var yn = b.Subject = function(t) {
                                                    function e() {
                                                        t.call(this), this.isDisposed = !1, this.isStopped = !1, this.observers = [], this.hasError = !1
                                                    }
                                                    return ft(e, t), lt(e.prototype, re.prototype, {
                                                        _subscribe: function(t) {
                                                            return wt(this), this.isStopped ? this.hasError ? (t.onError(this.error), gt) : (t.onCompleted(), gt) : (this.observers.push(t), new _n(this, t))
                                                        },
                                                        hasObservers: function() {
                                                            return wt(this), this.observers.length > 0
                                                        },
                                                        onCompleted: function() {
                                                            if (wt(this), !this.isStopped) {
                                                                this.isStopped = !0;
                                                                for (var t = 0, e = I(this.observers), r = e.length; t < r; t++) e[t].onCompleted();
                                                                this.observers.length = 0
                                                            }
                                                        },
                                                        onError: function(t) {
                                                            if (wt(this), !this.isStopped) {
                                                                this.isStopped = !0, this.error = t, this.hasError = !0;
                                                                for (var e = 0, r = I(this.observers), n = r.length; e < n; e++) r[e].onError(t);
                                                                this.observers.length = 0
                                                            }
                                                        },
                                                        onNext: function(t) {
                                                            if (wt(this), !this.isStopped)
                                                                for (var e = 0, r = I(this.observers), n = r.length; e < n; e++) r[e].onNext(t)
                                                        },
                                                        dispose: function() {
                                                            this.isDisposed = !0, this.observers = null
                                                        }
                                                    }), e.create = function(t, e) {
                                                        return new vn(t, e)
                                                    }, e
                                                }(ce),
                                                vn = (b.AsyncSubject = function(t) {
                                                    function e() {
                                                        t.call(this), this.isDisposed = !1, this.isStopped = !1, this.hasValue = !1, this.observers = [], this.hasError = !1
                                                    }
                                                    return ft(e, t), lt(e.prototype, re.prototype, {
                                                        _subscribe: function(t) {
                                                            return wt(this), this.isStopped ? (this.hasError ? t.onError(this.error) : this.hasValue ? (t.onNext(this.value), t.onCompleted()) : t.onCompleted(), gt) : (this.observers.push(t), new _n(this, t))
                                                        },
                                                        hasObservers: function() {
                                                            return wt(this), this.observers.length > 0
                                                        },
                                                        onCompleted: function() {
                                                            var t;
                                                            if (wt(this), !this.isStopped) {
                                                                this.isStopped = !0;
                                                                var e = I(this.observers),
                                                                    r = e.length;
                                                                if (this.hasValue)
                                                                    for (t = 0; t < r; t++) {
                                                                        var n = e[t];
                                                                        n.onNext(this.value), n.onCompleted()
                                                                    } else
                                                                        for (t = 0; t < r; t++) e[t].onCompleted();
                                                                this.observers.length = 0
                                                            }
                                                        },
                                                        onError: function(t) {
                                                            if (wt(this), !this.isStopped) {
                                                                this.isStopped = !0, this.hasError = !0, this.error = t;
                                                                for (var e = 0, r = I(this.observers), n = r.length; e < n; e++) r[e].onError(t);
                                                                this.observers.length = 0
                                                            }
                                                        },
                                                        onNext: function(t) {
                                                            wt(this), this.isStopped || (this.value = t, this.hasValue = !0)
                                                        },
                                                        dispose: function() {
                                                            this.isDisposed = !0, this.observers = null, this.error = null, this.value = null
                                                        }
                                                    }), e
                                                }(ce), b.AnonymousSubject = function(t) {
                                                    function e(e, r) {
                                                        this.observer = e, this.observable = r, t.call(this)
                                                    }
                                                    return ft(e, t), lt(e.prototype, re.prototype, {
                                                        _subscribe: function(t) {
                                                            return this.observable.subscribe(t)
                                                        },
                                                        onCompleted: function() {
                                                            this.observer.onCompleted()
                                                        },
                                                        onError: function(t) {
                                                            this.observer.onError(t)
                                                        },
                                                        onNext: function(t) {
                                                            this.observer.onNext(t)
                                                        }
                                                    }), e
                                                }(ce));
                                            "function" == typeof n && "object" == typeof n.amd && n.amd ? (d.Rx = b, n((function() {
                                                return b
                                            }))) : a && u ? l ? (u.exports = b).Rx = b : a.Rx = b : d.Rx = b;
                                            var gn = N()
                                        }).call(e)
                                    })),
                                    o = (n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.Observable,
                                                o = i.prototype,
                                                s = r.BinaryDisposable,
                                                a = r.AnonymousObservable,
                                                u = r.internals.AbstractObserver,
                                                c = r.Disposable.empty,
                                                h = r.helpers,
                                                f = h.defaultComparer,
                                                l = h.identity,
                                                p = h.defaultSubComparer,
                                                d = h.isFunction,
                                                b = h.isPromise,
                                                _ = h.isArrayLike,
                                                y = h.isIterable,
                                                v = r.internals.inherits,
                                                g = i.fromPromise,
                                                m = i.from,
                                                w = r.internals.bindCallback,
                                                E = r.EmptyError,
                                                S = r.ObservableBase,
                                                I = r.ArgumentOutOfRangeError,
                                                T = {
                                                    e: {}
                                                },
                                                C = r.internals.tryCatch = function(t) {
                                                    if (!d(t)) throw new TypeError("fn must be a function");
                                                    return e = t,
                                                        function() {
                                                            try {
                                                                return e.apply(this, arguments)
                                                            } catch (t) {
                                                                return T.e = t, T
                                                            }
                                                        };
                                                    var e
                                                },
                                                k = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._k = r, this._c = n, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new x(t, this._k, this._c))
                                                    }, e
                                                }(S),
                                                x = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._k = r, this._c = n, this._v = null, this._hv = !1, this._l = [], t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        var e = C(this._k)(t);
                                                        if (e === T) return this._o.onError(e.e);
                                                        var r = 0;
                                                        if (this._hv) {
                                                            if ((r = C(this._c)(e, this._v)) === T) return this._o.onError(r.e)
                                                        } else this._hv = !0, this._v = e;
                                                        r > 0 && (this._v = e, this._l = []), r >= 0 && this._l.push(t)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(this._l), this._o.onCompleted()
                                                    }, e
                                                }(u);

                                            function A(t) {
                                                if (0 === t.length) throw new E;
                                                return t[0]
                                            }
                                            var O = function(t) {
                                                    function e(e, r, n, i) {
                                                        this.source = e, this.accumulator = r, this.hasSeed = n, this.seed = i, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new D(t, this))
                                                    }, e
                                                }(S),
                                                D = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._p = r, this._fn = r.accumulator, this._hs = r.hasSeed, this._s = r.seed, this._ha = !1, this._a = null, this._hv = !1, this._i = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        if (!this._hv && (this._hv = !0), this._ha ? this._a = C(this._fn)(this._a, t, this._i, this._p) : (this._a = this._hs ? C(this._fn)(this._s, t, this._i, this._p) : t, this._ha = !0), this._a === T) return this._o.onError(this._a.e);
                                                        this._i++
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._hv && this._o.onNext(this._a), !this._hv && this._hs && this._o.onNext(this._s), !this._hv && !this._hs && this._o.onError(new E), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.reduce = function() {
                                                var t, e = !1,
                                                    r = arguments[0];
                                                return 2 === arguments.length && (e = !0, t = arguments[1]), new O(this, r, e, t)
                                            };
                                            var R = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._fn = r, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new N(t, this._fn, this.source))
                                                    }, e
                                                }(S),
                                                N = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._fn = r, this._s = n, this._i = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        var e = C(this._fn)(t, this._i++, this._s);
                                                        if (e === T) return this._o.onError(e.e);
                                                        Boolean(e) && (this._o.onNext(!0), this._o.onCompleted())
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(!1), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.some = function(t, e) {
                                                var r = w(t, e, 3);
                                                return new R(this, r)
                                            };
                                            var M = function(t) {
                                                    function e(e) {
                                                        this.source = e, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new F(t))
                                                    }, e
                                                }(S),
                                                F = function(t) {
                                                    function e(e) {
                                                        this._o = e, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function() {
                                                        this._o.onNext(!1), this._o.onCompleted()
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(!0), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.isEmpty = function() {
                                                return new M(this)
                                            };
                                            var P = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._fn = r, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new U(t, this._fn, this.source))
                                                    }, e
                                                }(S),
                                                U = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._fn = r, this._s = n, this._i = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        var e = C(this._fn)(t, this._i++, this._s);
                                                        if (e === T) return this._o.onError(e.e);
                                                        Boolean(e) || (this._o.onNext(!1), this._o.onCompleted())
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(!0), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.every = function(t, e) {
                                                var r = w(t, e, 3);
                                                return new P(this, r)
                                            };
                                            var L = function(t) {
                                                    function e(e, r, n) {
                                                        var i = +n || 0;
                                                        1 / 0 === Math.abs(i) && (i = 0), this.source = e, this._elem = r, this._n = i, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this._n < 0 ? (t.onNext(!1), t.onCompleted(), c) : this.source.subscribe(new B(t, this._elem, this._n))
                                                    }, e
                                                }(S),
                                                B = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._elem = r, this._n = n, this._i = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        var e, r;
                                                        this._i++ >= this._n && (r = this._elem, 0 === (e = t) && 0 === r || e === r || isNaN(e) && isNaN(r)) && (this._o.onNext(!0), this._o.onCompleted())
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(!1), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.includes = function(t, e) {
                                                return new L(this, t, e)
                                            };
                                            var j = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._fn = r, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new q(t, this._fn, this.source))
                                                    }, e
                                                }(S),
                                                q = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._fn = r, this._s = n, this._i = 0, this._c = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        if (this._fn) {
                                                            var e = C(this._fn)(t, this._i++, this._s);
                                                            if (e === T) return this._o.onError(e.e);
                                                            Boolean(e) && this._c++
                                                        } else this._c++
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(this._c), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.count = function(t, e) {
                                                var r = w(t, e, 3);
                                                return new j(this, r)
                                            };
                                            var z = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._e = r, this._n = n, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this._n < 0 ? (t.onNext(-1), t.onCompleted(), c) : this.source.subscribe(new K(t, this._e, this._n))
                                                    }, e
                                                }(S),
                                                K = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._e = r, this._n = n, this._i = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        this._i >= this._n && t === this._e && (this._o.onNext(this._i), this._o.onCompleted()), this._i++
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(-1), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.indexOf = function(t, e) {
                                                var r = +e || 0;
                                                return 1 / 0 === Math.abs(r) && (r = 0), new z(this, t, r)
                                            };
                                            var V = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._fn = r, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new W(t, this._fn, this.source))
                                                    }, e
                                                }(S),
                                                W = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._fn = r, this._s = n, this._i = 0, this._c = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        if (this._fn) {
                                                            var e = C(this._fn)(t, this._i++, this._s);
                                                            if (e === T) return this._o.onError(e.e);
                                                            this._c += e
                                                        } else this._c += t
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(this._c), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.sum = function(t, e) {
                                                var r = w(t, e, 3);
                                                return new V(this, r)
                                            }, o.minBy = function(t, e) {
                                                return e || (e = p), new k(this, t, (function(t, r) {
                                                    return -1 * e(t, r)
                                                }))
                                            }, o.min = function(t) {
                                                return this.minBy(l, t).map(A)
                                            }, o.maxBy = function(t, e) {
                                                return e || (e = p), new k(this, t, e)
                                            }, o.max = function(t) {
                                                return this.maxBy(l, t).map(A)
                                            };
                                            var H = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._fn = r, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new G(t, this._fn, this.source))
                                                    }, e
                                                }(S),
                                                G = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._fn = r, this._s = n, this._c = 0, this._t = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        if (this._fn) {
                                                            var e = C(this._fn)(t, this._c++, this._s);
                                                            if (e === T) return this._o.onError(e.e);
                                                            this._t += e
                                                        } else this._c++, this._t += t
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        if (0 === this._c) return this._o.onError(new E);
                                                        this._o.onNext(this._t / this._c), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.average = function(t, e) {
                                                var r;
                                                return d(t) && (r = w(t, e, 3)), new H(this, r)
                                            }, o.sequenceEqual = function(t, e) {
                                                var r = this;
                                                return e || (e = f), new a((function(n) {
                                                    var i = !1,
                                                        o = !1,
                                                        a = [],
                                                        u = [],
                                                        c = r.subscribe((function(t) {
                                                            if (u.length > 0) {
                                                                var r = u.shift(),
                                                                    i = C(e)(r, t);
                                                                if (i === T) return n.onError(i.e);
                                                                i || (n.onNext(!1), n.onCompleted())
                                                            } else o ? (n.onNext(!1), n.onCompleted()) : a.push(t)
                                                        }), (function(t) {
                                                            n.onError(t)
                                                        }), (function() {
                                                            i = !0, 0 === a.length && (u.length > 0 ? (n.onNext(!1), n.onCompleted()) : o && (n.onNext(!0), n.onCompleted()))
                                                        }));
                                                    (_(t) || y(t)) && (t = m(t)), b(t) && (t = g(t));
                                                    var h = t.subscribe((function(t) {
                                                        if (a.length > 0) {
                                                            var r = a.shift(),
                                                                o = C(e)(r, t);
                                                            if (o === T) return n.onError(o.e);
                                                            o || (n.onNext(!1), n.onCompleted())
                                                        } else i ? (n.onNext(!1), n.onCompleted()) : u.push(t)
                                                    }), (function(t) {
                                                        n.onError(t)
                                                    }), (function() {
                                                        o = !0, 0 === u.length && (a.length > 0 ? (n.onNext(!1), n.onCompleted()) : i && (n.onNext(!0), n.onCompleted()))
                                                    }));
                                                    return new s(c, h)
                                                }), r)
                                            };
                                            var Y = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._i = r, this._d = n, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new J(t, this._i, this._d))
                                                    }, e
                                                }(S),
                                                J = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._i = r, this._d = n, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        0 == this._i-- && (this._o.onNext(t), this._o.onCompleted())
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._d === n ? this._o.onError(new I) : (this._o.onNext(this._d), this._o.onCompleted())
                                                    }, e
                                                }(u);
                                            o.elementAt = function(t, e) {
                                                if (t < 0) throw new I;
                                                return new Y(this, t, e)
                                            };
                                            var $ = function(t) {
                                                function e(e, r, n) {
                                                    this._o = e, this._obj = r, this._s = n, this._i = 0, this._hv = !1, this._v = null, t.call(this)
                                                }
                                                return v(e, t), e.prototype.next = function(t) {
                                                    var e = !1;
                                                    if (this._obj.predicate) {
                                                        var r = C(this._obj.predicate)(t, this._i++, this._s);
                                                        if (r === T) return this._o.onError(r.e);
                                                        Boolean(r) && (e = !0)
                                                    } else this._obj.predicate || (e = !0);
                                                    if (e) {
                                                        if (this._hv) return this._o.onError(new Error("Sequence contains more than one matching element"));
                                                        this._hv = !0, this._v = t
                                                    }
                                                }, e.prototype.error = function(t) {
                                                    this._o.onError(t)
                                                }, e.prototype.completed = function() {
                                                    this._hv ? (this._o.onNext(this._v), this._o.onCompleted()) : this._obj.defaultValue === n ? this._o.onError(new E) : (this._o.onNext(this._obj.defaultValue), this._o.onCompleted())
                                                }, e
                                            }(u);
                                            o.single = function(t, e) {
                                                var r = {},
                                                    n = this;
                                                if (d((r = "object" == typeof arguments[0] ? arguments[0] : {
                                                        predicate: arguments[0],
                                                        thisArg: arguments[1],
                                                        defaultValue: arguments[2]
                                                    }).predicate)) {
                                                    var i = r.predicate;
                                                    r.predicate = w(i, r.thisArg, 3)
                                                }
                                                return new a((function(t) {
                                                    return n.subscribe(new $(t, r, n))
                                                }), n)
                                            };
                                            var X = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._obj = r, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new Q(t, this._obj, this.source))
                                                    }, e
                                                }(S),
                                                Q = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._obj = r, this._s = n, this._i = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        if (this._obj.predicate) {
                                                            var e = C(this._obj.predicate)(t, this._i++, this._s);
                                                            if (e === T) return this._o.onError(e.e);
                                                            Boolean(e) && (this._o.onNext(t), this._o.onCompleted())
                                                        } else this._obj.predicate || (this._o.onNext(t), this._o.onCompleted())
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._obj.defaultValue === n ? this._o.onError(new E) : (this._o.onNext(this._obj.defaultValue), this._o.onCompleted())
                                                    }, e
                                                }(u);
                                            o.first = function() {
                                                var t = {};
                                                if (d((t = "object" == typeof arguments[0] ? arguments[0] : {
                                                        predicate: arguments[0],
                                                        thisArg: arguments[1],
                                                        defaultValue: arguments[2]
                                                    }).predicate)) {
                                                    var e = t.predicate;
                                                    t.predicate = w(e, t.thisArg, 3)
                                                }
                                                return new X(this, t)
                                            };
                                            var Z = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._obj = r, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new tt(t, this._obj, this.source))
                                                    }, e
                                                }(S),
                                                tt = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._obj = r, this._s = n, this._i = 0, this._hv = !1, this._v = null, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        var e = !1;
                                                        if (this._obj.predicate) {
                                                            var r = C(this._obj.predicate)(t, this._i++, this._s);
                                                            if (r === T) return this._o.onError(r.e);
                                                            Boolean(r) && (e = !0)
                                                        } else this._obj.predicate || (e = !0);
                                                        e && (this._hv = !0, this._v = t)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._hv ? (this._o.onNext(this._v), this._o.onCompleted()) : this._obj.defaultValue === n ? this._o.onError(new E) : (this._o.onNext(this._obj.defaultValue), this._o.onCompleted())
                                                    }, e
                                                }(u);
                                            o.last = function() {
                                                var t = {};
                                                if (d((t = "object" == typeof arguments[0] ? arguments[0] : {
                                                        predicate: arguments[0],
                                                        thisArg: arguments[1],
                                                        defaultValue: arguments[2]
                                                    }).predicate)) {
                                                    var e = t.predicate;
                                                    t.predicate = w(e, t.thisArg, 3)
                                                }
                                                return new Z(this, t)
                                            };
                                            var et = function(t) {
                                                function e(e, r, n, i) {
                                                    this._o = e, this._s = r, this._cb = n, this._y = i, this._i = 0, t.call(this)
                                                }
                                                return v(e, t), e.prototype.next = function(t) {
                                                    var e = C(this._cb)(t, this._i, this._s);
                                                    if (e === T) return this._o.onError(e.e);
                                                    e ? (this._o.onNext(this._y ? this._i : t), this._o.onCompleted()) : this._i++
                                                }, e.prototype.error = function(t) {
                                                    this._o.onError(t)
                                                }, e.prototype.completed = function() {
                                                    this._y && this._o.onNext(-1), this._o.onCompleted()
                                                }, e
                                            }(u);

                                            function rt(t, e, r, n) {
                                                var i = w(e, r, 3);
                                                return new a((function(e) {
                                                    return t.subscribe(new et(e, t, i, n))
                                                }), t)
                                            }
                                            o.find = function(t, e) {
                                                return rt(this, t, e, !1)
                                            }, o.findIndex = function(t, e) {
                                                return rt(this, t, e, !0)
                                            };
                                            var nt = function(t) {
                                                    function e(e) {
                                                        this.source = e, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new it(t))
                                                    }, e
                                                }(S),
                                                it = function(e) {
                                                    function r(r) {
                                                        this._o = r, this._s = new t.Set, e.call(this)
                                                    }
                                                    return v(r, e), r.prototype.next = function(t) {
                                                        this._s.add(t)
                                                    }, r.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, r.prototype.completed = function() {
                                                        this._o.onNext(this._s), this._o.onCompleted()
                                                    }, r
                                                }(u);
                                            o.toSet = function() {
                                                if (void 0 === t.Set) throw new TypeError;
                                                return new nt(this)
                                            };
                                            var ot = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._k = r, this._e = n, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new st(t, this._k, this._e))
                                                    }, e
                                                }(S),
                                                st = function(e) {
                                                    function r(r, n, i) {
                                                        this._o = r, this._k = n, this._e = i, this._m = new t.Map, e.call(this)
                                                    }
                                                    return v(r, e), r.prototype.next = function(t) {
                                                        var e = C(this._k)(t);
                                                        if (e === T) return this._o.onError(e.e);
                                                        var r = t;
                                                        if (this._e && (r = C(this._e)(t)) === T) return this._o.onError(r.e);
                                                        this._m.set(e, r)
                                                    }, r.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, r.prototype.completed = function() {
                                                        this._o.onNext(this._m), this._o.onCompleted()
                                                    }, r
                                                }(u);
                                            o.toMap = function(e, r) {
                                                if (void 0 === t.Map) throw new TypeError;
                                                return new ot(this, e, r)
                                            };
                                            var at = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._b = r, this._e = n, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new ut(t, this._b, this._e))
                                                    }, e
                                                }(S),
                                                ut = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._b = r, this._e = n, this._i = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        this._i >= this._b && (this._e === this._i ? this._o.onCompleted() : this._o.onNext(t)), this._i++
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            o.slice = function(t, e) {
                                                var n = t || 0;
                                                if (n < 0) throw new r.ArgumentOutOfRangeError;
                                                if ("number" == typeof e && e < n) throw new r.ArgumentOutOfRangeError;
                                                return new at(this, n, e)
                                            };
                                            var ct = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._e = r, this._n = n, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this._n < 0 ? (t.onNext(-1), t.onCompleted(), c) : this.source.subscribe(new ht(t, this._e, this._n))
                                                    }, e
                                                }(S),
                                                ht = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._e = r, this._n = n, this._v = 0, this._hv = !1, this._i = 0, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        this._i >= this._n && t === this._e && (this._hv = !0, this._v = this._i), this._i++
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onNext(this._hv ? this._v : -1), this._o.onCompleted()
                                                    }, e
                                                }(u);
                                            return o.lastIndexOf = function(t, e) {
                                                var r = +e || 0;
                                                return 1 / 0 === Math.abs(r) && (r = 0), new ct(this, t, r)
                                            }, r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.Observable,
                                                o = i.fromPromise,
                                                s = i.throwError,
                                                a = r.AnonymousObservable,
                                                u = r.ObservableBase,
                                                c = r.AsyncSubject,
                                                h = r.CompositeDisposable,
                                                f = r.Scheduler.default,
                                                l = r.internals.inherits,
                                                p = r.Scheduler.isScheduler,
                                                d = r.helpers.isPromise,
                                                b = r.helpers.isFunction,
                                                _ = r.helpers.isIterable,
                                                y = r.helpers.isArrayLike,
                                                v = {
                                                    e: {}
                                                },
                                                g = r.internals.tryCatch = function(t) {
                                                    if (!b(t)) throw new TypeError("fn must be a function");
                                                    return e = t,
                                                        function() {
                                                            try {
                                                                return e.apply(this, arguments)
                                                            } catch (t) {
                                                                return v.e = t, v
                                                            }
                                                        };
                                                    var e
                                                };
                                            i.wrap = function(t) {
                                                function e() {
                                                    return i.spawn.call(this, t.apply(this, arguments))
                                                }
                                                return e.__generatorFunction__ = t, e
                                            };
                                            var m = i.spawn = function() {
                                                for (var t = arguments[0], e = this, r = [], n = 1, o = arguments.length; n < o; n++) r.push(arguments[n]);
                                                return new a((function(n) {
                                                    var o = new h;
                                                    if (b(t) && (t = t.apply(e, r)), !t || !b(t.next)) return n.onNext(t), n.onCompleted();

                                                    function s(e) {
                                                        var r = g(t.next).call(t, e);
                                                        if (r === v) return n.onError(r.e);
                                                        u(r)
                                                    }

                                                    function a(e) {
                                                        var r = g(t.next).call(t, e);
                                                        if (r === v) return n.onError(r.e);
                                                        u(r)
                                                    }

                                                    function u(t) {
                                                        if (t.done) return n.onNext(t.value), void n.onCompleted();
                                                        var r = w.call(e, t.value),
                                                            u = null,
                                                            c = !1;
                                                        i.isObservable(r) ? o.add(r.subscribe((function(t) {
                                                            c = !0, u = t
                                                        }), a, (function() {
                                                            c && s(u)
                                                        }))) : a(new TypeError("type not supported"))
                                                    }
                                                    return s(), o
                                                }))
                                            };

                                            function w(t) {
                                                return t ? i.isObservable(t) ? t : d(t) ? i.fromPromise(t) : function(t) {
                                                    var e = t.constructor;
                                                    return !!e && ("GeneratorFunction" === e.name || "GeneratorFunction" === e.displayName || T(e.prototype))
                                                }(t) || T(t) ? m.call(this, t) : b(t) ? I.call(this, t) : y(t) || _(t) ? E.call(this, t) : C(t) ? S.call(this, t) : t : t
                                            }

                                            function E(t) {
                                                return i.from(t).concatMap((function(t) {
                                                    return i.isObservable(t) || C(t) ? w.call(null, t) : r.Observable.just(t)
                                                })).toArray()
                                            }

                                            function S(t) {
                                                for (var e = new t.constructor, r = Object.keys(t), o = [], s = 0, a = r.length; s < a; s++) {
                                                    var u = r[s],
                                                        c = w.call(this, t[u]);
                                                    c && i.isObservable(c) ? h(c, u) : e[u] = t[u]
                                                }
                                                return i.forkJoin.apply(i, o).map((function() {
                                                    return e
                                                }));

                                                function h(t, r) {
                                                    e[r] = n, o.push(t.map((function(t) {
                                                        e[r] = t
                                                    })))
                                                }
                                            }

                                            function I(t) {
                                                var e = this;
                                                return new a((function(r) {
                                                    t.call(e, (function() {
                                                        var t = arguments[0],
                                                            e = arguments[1];
                                                        if (t) return r.onError(t);
                                                        if (arguments.length > 2) {
                                                            for (var n = [], i = 1, o = arguments.length; i < o; i++) n.push(arguments[i]);
                                                            e = n
                                                        }
                                                        r.onNext(e), r.onCompleted()
                                                    }))
                                                }))
                                            }

                                            function T(t) {
                                                return b(t.next) && b(t.throw)
                                            }

                                            function C(t) {
                                                return Object == t.constructor
                                            }
                                            i.start = function(t, e, r) {
                                                return k(t, e, r)()
                                            };
                                            var k = i.toAsync = function(t, e, r) {
                                                return p(r) || (r = f),
                                                    function() {
                                                        var n = arguments,
                                                            i = new c;
                                                        return r.schedule(null, (function() {
                                                            var r;
                                                            try {
                                                                r = t.apply(e, n)
                                                            } catch (t) {
                                                                return void i.onError(t)
                                                            }
                                                            i.onNext(r), i.onCompleted()
                                                        })), i.asObservable()
                                                    }
                                            };

                                            function x(t, e, r, n) {
                                                var i = new c;
                                                return n.push(function(t, e, r) {
                                                    return function() {
                                                        for (var n = arguments.length, i = new Array(n), o = 0; o < n; o++) i[o] = arguments[o];
                                                        if (b(r)) {
                                                            if ((i = g(r).apply(e, i)) === v) return t.onError(i.e);
                                                            t.onNext(i)
                                                        } else t.onNext(i.length <= 1 ? i[0] : i);
                                                        t.onCompleted()
                                                    }
                                                }(i, e, r)), t.apply(e, n), i.asObservable()
                                            }

                                            function A(t, e, r, n) {
                                                var i = new c;
                                                return n.push(function(t, e, r) {
                                                    return function() {
                                                        var n = arguments[0];
                                                        if (n) return t.onError(n);
                                                        for (var i = arguments.length, o = [], s = 1; s < i; s++) o[s - 1] = arguments[s];
                                                        if (b(r)) {
                                                            if ((o = g(r).apply(e, o)) === v) return t.onError(o.e);
                                                            t.onNext(o)
                                                        } else t.onNext(o.length <= 1 ? o[0] : o);
                                                        t.onCompleted()
                                                    }
                                                }(i, e, r)), t.apply(e, n), i.asObservable()
                                            }

                                            function O(t, e, r) {
                                                this._e = t, this._n = e, this._fn = r, this._e.addEventListener(this._n, this._fn, !1), this.isDisposed = !1
                                            }
                                            i.fromCallback = function(t, e, r) {
                                                return function() {
                                                    void 0 === e && (e = this);
                                                    for (var n = arguments.length, i = new Array(n), o = 0; o < n; o++) i[o] = arguments[o];
                                                    return x(t, e, r, i)
                                                }
                                            }, i.fromNodeCallback = function(t, e, r) {
                                                return function() {
                                                    void 0 === e && (e = this);
                                                    for (var n = arguments.length, i = new Array(n), o = 0; o < n; o++) i[o] = arguments[o];
                                                    return A(t, e, r, i)
                                                }
                                            }, O.prototype.dispose = function() {
                                                this.isDisposed || (this._e.removeEventListener(this._n, this._fn, !1), this.isDisposed = !0)
                                            }, r.config.useNativeEvents = !1;
                                            var D = function(e) {
                                                function r(t, r, n) {
                                                    this._el = t, this._n = r, this._fn = n, e.call(this)
                                                }
                                                return l(r, e), r.prototype.subscribeCore = function(e) {
                                                    return function e(r, n, i) {
                                                        var o = new h,
                                                            s = Object.prototype.toString.call(r);
                                                        if (function(e) {
                                                                return t.StaticNodeList ? e instanceof t.StaticNodeList || e instanceof t.NodeList : "[object NodeList]" === Object.prototype.toString.call(e)
                                                            }(r) || "[object HTMLCollection]" === s)
                                                            for (var a = 0, u = r.length; a < u; a++) o.add(e(r.item(a), n, i));
                                                        else r && o.add(new O(r, n, i));
                                                        return o
                                                    }(this._el, this._n, function(t, e) {
                                                        return function() {
                                                            var r = arguments[0];
                                                            if (b(e) && (r = g(e).apply(null, arguments)) === v) return t.onError(r.e);
                                                            t.onNext(r)
                                                        }
                                                    }(e, this._fn))
                                                }, r
                                            }(u);
                                            i.fromEvent = function(t, e, n) {
                                                return t.addListener ? N((function(r) {
                                                    t.addListener(e, r)
                                                }), (function(r) {
                                                    t.removeListener(e, r)
                                                }), n) : r.config.useNativeEvents || "function" != typeof t.on || "function" != typeof t.off ? new D(t, e, n).publish().refCount() : N((function(r) {
                                                    t.on(e, r)
                                                }), (function(r) {
                                                    t.off(e, r)
                                                }), n)
                                            };
                                            var R = function(t) {
                                                    function e(e, r, n) {
                                                        this._add = e, this._del = r, this._fn = n, t.call(this)
                                                    }

                                                    function r(t, e, r) {
                                                        this._del = t, this._fn = e, this._ret = r, this.isDisposed = !1
                                                    }
                                                    return l(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = function(t, e) {
                                                                return function() {
                                                                    var r = arguments[0];
                                                                    if (b(e) && (r = g(e).apply(null, arguments)) === v) return t.onError(r.e);
                                                                    t.onNext(r)
                                                                }
                                                            }(t, this._fn),
                                                            n = this._add(e);
                                                        return new r(this._del, e, n)
                                                    }, r.prototype.dispose = function() {
                                                        this.isDisposed || (b(this._del) && this._del(this._fn, this._ret), this.isDisposed = !0)
                                                    }, e
                                                }(u),
                                                N = i.fromEventPattern = function(t, e, r) {
                                                    return new R(t, e, r).publish().refCount()
                                                };
                                            return i.startAsync = function(t) {
                                                var e = g(t)();
                                                return e === v ? s(e.e) : o(e)
                                            }, r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.Observable,
                                                o = i.prototype,
                                                s = r.AnonymousObservable,
                                                a = r.internals.AbstractObserver,
                                                u = r.BinaryDisposable,
                                                c = r.NAryDisposable,
                                                h = r.Notification,
                                                f = r.Subject,
                                                l = r.Observer,
                                                p = r.Disposable.empty,
                                                d = r.Disposable.create,
                                                b = r.internals.inherits,
                                                _ = r.internals.addProperties,
                                                y = r.Scheduler.default,
                                                v = r.Scheduler.currentThread,
                                                g = r.helpers.identity,
                                                m = r.Scheduler.isScheduler,
                                                w = r.helpers.isFunction,
                                                E = {
                                                    e: {}
                                                },
                                                S = r.internals.tryCatch = function(t) {
                                                    if (!w(t)) throw new TypeError("fn must be a function");
                                                    return e = t,
                                                        function() {
                                                            try {
                                                                return e.apply(this, arguments)
                                                            } catch (t) {
                                                                return E.e = t, E
                                                            }
                                                        };
                                                    var e
                                                };
                                            r.Pauser = function(t) {
                                                function e() {
                                                    t.call(this)
                                                }
                                                return b(e, t), e.prototype.pause = function() {
                                                    this.onNext(!1)
                                                }, e.prototype.resume = function() {
                                                    this.onNext(!0)
                                                }, e
                                            }(f);
                                            var I = function(t) {
                                                function e(e, r) {
                                                    this.source = e, this.controller = new f, this.paused = !0, this.pauser = r && r.subscribe ? this.controller.merge(r) : this.controller, t.call(this)
                                                }
                                                return b(e, t), e.prototype._subscribe = function(t) {
                                                    var e = this.source.publish(),
                                                        r = e.subscribe(t),
                                                        n = p,
                                                        i = this.pauser.startWith(!this.paused).distinctUntilChanged().subscribe((function(t) {
                                                            t ? n = e.connect() : (n.dispose(), n = p)
                                                        }));
                                                    return new c([r, n, i])
                                                }, e.prototype.pause = function() {
                                                    this.paused = !0, this.controller.onNext(!1)
                                                }, e.prototype.resume = function() {
                                                    this.paused = !1, this.controller.onNext(!0)
                                                }, e
                                            }(i);
                                            o.pausable = function(t) {
                                                return new I(this, t)
                                            };
                                            var T = function(t) {
                                                function e(e, r) {
                                                    this.source = e, this.controller = new f, this.paused = !0, this.pauser = r && r.subscribe ? this.controller.merge(r) : this.controller, t.call(this)
                                                }
                                                return b(e, t), e.prototype._subscribe = function(t) {
                                                    var e, r, i, o, a = [];

                                                    function c() {
                                                        for (; a.length > 0;) t.onNext(a.shift())
                                                    }
                                                    return (r = this.source, i = this.pauser.startWith(!this.paused).distinctUntilChanged(), o = function(t, e) {
                                                        return {
                                                            data: t,
                                                            shouldFire: e
                                                        }
                                                    }, new s((function(t) {
                                                        var e, n = [!1, !1],
                                                            s = !1,
                                                            a = !1,
                                                            c = new Array(2);

                                                        function h(r, i) {
                                                            if (c[i] = r, n[i] = !0, s || (s = n.every(g))) {
                                                                if (e) return t.onError(e);
                                                                var u = S(o).apply(null, c);
                                                                if (u === E) return t.onError(u.e);
                                                                t.onNext(u)
                                                            }
                                                            a && c[1] && t.onCompleted()
                                                        }
                                                        return new u(r.subscribe((function(t) {
                                                            h(t, 0)
                                                        }), (function(r) {
                                                            c[1] ? t.onError(r) : e = r
                                                        }), (function() {
                                                            a = !0, c[1] && t.onCompleted()
                                                        })), i.subscribe((function(t) {
                                                            h(t, 1)
                                                        }), (function(e) {
                                                            t.onError(e)
                                                        }), (function() {
                                                            a = !0, h(!0, 1)
                                                        })))
                                                    }), r)).subscribe((function(r) {
                                                        e !== n && r.shouldFire !== e ? (e = r.shouldFire, r.shouldFire && c()) : (e = r.shouldFire, r.shouldFire ? t.onNext(r.data) : a.push(r.data))
                                                    }), (function(e) {
                                                        c(), t.onError(e)
                                                    }), (function() {
                                                        c(), t.onCompleted()
                                                    }))
                                                }, e.prototype.pause = function() {
                                                    this.paused = !0, this.controller.onNext(!1)
                                                }, e.prototype.resume = function() {
                                                    this.paused = !1, this.controller.onNext(!0)
                                                }, e
                                            }(i);
                                            o.pausableBuffered = function(t) {
                                                return new T(this, t)
                                            };
                                            var C = function(t) {
                                                    function e(e, r, n) {
                                                        t.call(this), this.subject = new k(r, n), this.source = e.multicast(this.subject).refCount()
                                                    }
                                                    return b(e, t), e.prototype._subscribe = function(t) {
                                                        return this.source.subscribe(t)
                                                    }, e.prototype.request = function(t) {
                                                        return this.subject.request(null == t ? -1 : t)
                                                    }, e
                                                }(i),
                                                k = function(t) {
                                                    function e(e, r) {
                                                        null == e && (e = !0), t.call(this), this.subject = new f, this.enableQueue = e, this.queue = e ? [] : null, this.requestedCount = 0, this.requestedDisposable = null, this.error = null, this.hasFailed = !1, this.hasCompleted = !1, this.scheduler = r || v
                                                    }
                                                    return b(e, t), _(e.prototype, l, {
                                                        _subscribe: function(t) {
                                                            return this.subject.subscribe(t)
                                                        },
                                                        onCompleted: function() {
                                                            this.hasCompleted = !0, this.enableQueue && 0 !== this.queue.length ? this.queue.push(h.createOnCompleted()) : (this.subject.onCompleted(), this.disposeCurrentRequest())
                                                        },
                                                        onError: function(t) {
                                                            this.hasFailed = !0, this.error = t, this.enableQueue && 0 !== this.queue.length ? this.queue.push(h.createOnError(t)) : (this.subject.onError(t), this.disposeCurrentRequest())
                                                        },
                                                        onNext: function(t) {
                                                            this.requestedCount <= 0 ? this.enableQueue && this.queue.push(h.createOnNext(t)) : (0 == this.requestedCount-- && this.disposeCurrentRequest(), this.subject.onNext(t))
                                                        },
                                                        _processRequest: function(t) {
                                                            if (this.enableQueue)
                                                                for (; this.queue.length > 0 && (t > 0 || "N" !== this.queue[0].kind);) {
                                                                    var e = this.queue.shift();
                                                                    e.accept(this.subject), "N" === e.kind ? t-- : (this.disposeCurrentRequest(), this.queue = [])
                                                                }
                                                            return t
                                                        },
                                                        request: function(t) {
                                                            this.disposeCurrentRequest();
                                                            var e = this;
                                                            return this.requestedDisposable = this.scheduler.schedule(t, (function(t, r) {
                                                                var n = e._processRequest(r);
                                                                if (!e.hasCompleted && !e.hasFailed && n > 0) return e.requestedCount = n, d((function() {
                                                                    e.requestedCount = 0
                                                                }))
                                                            })), this.requestedDisposable
                                                        },
                                                        disposeCurrentRequest: function() {
                                                            this.requestedDisposable && (this.requestedDisposable.dispose(), this.requestedDisposable = null)
                                                        }
                                                    }), e
                                                }(i);
                                            o.controlled = function(t, e) {
                                                return t && m(t) && (e = t, t = !0), null == t && (t = !0), new C(this, t, e)
                                            };
                                            var x = function(t) {
                                                function e(e) {
                                                    t.call(this), this.source = e
                                                }

                                                function r(t, e) {
                                                    return e.source.request(1)
                                                }
                                                b(e, t), e.prototype._subscribe = function(t) {
                                                    return this.subscription = this.source.subscribe(new n(t, this, this.subscription)), new u(this.subscription, y.schedule(this, r))
                                                };
                                                var n = function(t) {
                                                    function e(e, r, n) {
                                                        t.call(this), this.observer = e, this.observable = r, this.cancel = n, this.scheduleDisposable = null
                                                    }

                                                    function r(t, e) {
                                                        return e.observable.source.request(1)
                                                    }
                                                    return b(e, t), e.prototype.completed = function() {
                                                        this.observer.onCompleted(), this.dispose()
                                                    }, e.prototype.error = function(t) {
                                                        this.observer.onError(t), this.dispose()
                                                    }, e.prototype.next = function(t) {
                                                        this.observer.onNext(t), this.scheduleDisposable = y.schedule(this, r)
                                                    }, e.dispose = function() {
                                                        this.observer = null, this.cancel && (this.cancel.dispose(), this.cancel = null), this.scheduleDisposable && (this.scheduleDisposable.dispose(), this.scheduleDisposable = null), t.prototype.dispose.call(this)
                                                    }, e
                                                }(a);
                                                return e
                                            }(i);
                                            C.prototype.stopAndWait = function() {
                                                return new x(this)
                                            };
                                            var A = function(t) {
                                                function e(e, r) {
                                                    t.call(this), this.source = e, this.windowSize = r
                                                }

                                                function r(t, e) {
                                                    return e.source.request(e.windowSize)
                                                }
                                                b(e, t), e.prototype._subscribe = function(t) {
                                                    return this.subscription = this.source.subscribe(new n(t, this, this.subscription)), new u(this.subscription, y.schedule(this, r))
                                                };
                                                var n = function(t) {
                                                    function e(e, r, n) {
                                                        this.observer = e, this.observable = r, this.cancel = n, this.received = 0, this.scheduleDisposable = null, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        return e.observable.source.request(e.observable.windowSize)
                                                    }
                                                    return b(e, t), e.prototype.completed = function() {
                                                        this.observer.onCompleted(), this.dispose()
                                                    }, e.prototype.error = function(t) {
                                                        this.observer.onError(t), this.dispose()
                                                    }, e.prototype.next = function(t) {
                                                        this.observer.onNext(t), this.received = ++this.received % this.observable.windowSize, 0 === this.received && (this.scheduleDisposable = y.schedule(this, r))
                                                    }, e.prototype.dispose = function() {
                                                        this.observer = null, this.cancel && (this.cancel.dispose(), this.cancel = null), this.scheduleDisposable && (this.scheduleDisposable.dispose(), this.scheduleDisposable = null), t.prototype.dispose.call(this)
                                                    }, e
                                                }(a);
                                                return e
                                            }(i);
                                            return C.prototype.windowed = function(t) {
                                                return new A(this, t)
                                            }, o.pipe = function(t) {
                                                var e = this.pausableBuffered();

                                                function r() {
                                                    e.resume()
                                                }
                                                return t.addListener("drain", r), e.subscribe((function(r) {
                                                    !t.write(r) && e.pause()
                                                }), (function(e) {
                                                    t.emit("error", e)
                                                }), (function() {
                                                    !t._isStdio && t.end(), t.removeListener("drain", r)
                                                })), e.resume(), t
                                            }, r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.Observable,
                                                o = i.prototype,
                                                s = r.AnonymousObservable,
                                                a = r.ObservableBase,
                                                u = r.Subject,
                                                c = r.AsyncSubject,
                                                h = r.Observer,
                                                f = r.internals.ScheduledObserver,
                                                l = r.Disposable.create,
                                                p = r.Disposable.empty,
                                                d = r.BinaryDisposable,
                                                b = r.Scheduler.currentThread,
                                                _ = r.helpers.isFunction,
                                                y = r.internals.inherits,
                                                v = r.internals.addProperties,
                                                g = r.Disposable.checkDisposed;

                                            function m(t) {
                                                for (var e = t.length, r = new Array(e), n = 0; n < e; n++) r[n] = t[n];
                                                return r
                                            }
                                            var w = function(t) {
                                                function e(e, r, n) {
                                                    this.source = e, this._fn1 = r, this._fn2 = n, t.call(this)
                                                }
                                                return y(e, t), e.prototype.subscribeCore = function(t) {
                                                    var e = this.source.multicast(this._fn1());
                                                    return new d(this._fn2(e).subscribe(t), e.connect())
                                                }, e
                                            }(a);
                                            o.multicast = function(t, e) {
                                                return _(t) ? new w(this, t, e) : new C(this, t)
                                            }, o.publish = function(t) {
                                                return t && _(t) ? this.multicast((function() {
                                                    return new u
                                                }), t) : this.multicast(new u)
                                            }, o.share = function() {
                                                return this.publish().refCount()
                                            }, o.publishLast = function(t) {
                                                return t && _(t) ? this.multicast((function() {
                                                    return new c
                                                }), t) : this.multicast(new c)
                                            }, o.publishValue = function(t, e) {
                                                return 2 === arguments.length ? this.multicast((function() {
                                                    return new S(e)
                                                }), t) : this.multicast(new S(t))
                                            }, o.shareValue = function(t) {
                                                return this.publishValue(t).refCount()
                                            }, o.replay = function(t, e, r, n) {
                                                return t && _(t) ? this.multicast((function() {
                                                    return new I(e, r, n)
                                                }), t) : this.multicast(new I(e, r, n))
                                            }, o.shareReplay = function(t, e, r) {
                                                return this.replay(null, t, e, r).refCount()
                                            };
                                            var E = function(t, e) {
                                                this._s = t, this._o = e
                                            };
                                            E.prototype.dispose = function() {
                                                if (!this._s.isDisposed && null !== this._o) {
                                                    var t = this._s.observers.indexOf(this._o);
                                                    this._s.observers.splice(t, 1), this._o = null
                                                }
                                            };
                                            var S = r.BehaviorSubject = function(t) {
                                                    function e(e) {
                                                        t.call(this), this.value = e, this.observers = [], this.isDisposed = !1, this.isStopped = !1, this.hasError = !1
                                                    }
                                                    return y(e, t), v(e.prototype, h.prototype, {
                                                        _subscribe: function(t) {
                                                            return g(this), this.isStopped ? (this.hasError ? t.onError(this.error) : t.onCompleted(), p) : (this.observers.push(t), t.onNext(this.value), new E(this, t))
                                                        },
                                                        getValue: function() {
                                                            return g(this), this.hasError && thrower(this.error), this.value
                                                        },
                                                        hasObservers: function() {
                                                            return g(this), this.observers.length > 0
                                                        },
                                                        onCompleted: function() {
                                                            if (g(this), !this.isStopped) {
                                                                this.isStopped = !0;
                                                                for (var t = 0, e = m(this.observers), r = e.length; t < r; t++) e[t].onCompleted();
                                                                this.observers.length = 0
                                                            }
                                                        },
                                                        onError: function(t) {
                                                            if (g(this), !this.isStopped) {
                                                                this.isStopped = !0, this.hasError = !0, this.error = t;
                                                                for (var e = 0, r = m(this.observers), n = r.length; e < n; e++) r[e].onError(t);
                                                                this.observers.length = 0
                                                            }
                                                        },
                                                        onNext: function(t) {
                                                            if (g(this), !this.isStopped) {
                                                                this.value = t;
                                                                for (var e = 0, r = m(this.observers), n = r.length; e < n; e++) r[e].onNext(t)
                                                            }
                                                        },
                                                        dispose: function() {
                                                            this.isDisposed = !0, this.observers = null, this.value = null, this.error = null
                                                        }
                                                    }), e
                                                }(i),
                                                I = r.ReplaySubject = function(t) {
                                                    var e = Math.pow(2, 53) - 1;

                                                    function r(r, n, i) {
                                                        this.bufferSize = null == r ? e : r, this.windowSize = null == n ? e : n, this.scheduler = i || b, this.q = [], this.observers = [], this.isStopped = !1, this.isDisposed = !1, this.hasError = !1, this.error = null, t.call(this)
                                                    }
                                                    return y(r, t), v(r.prototype, h.prototype, {
                                                        _subscribe: function(t) {
                                                            g(this);
                                                            var e, r, n = new f(this.scheduler, t),
                                                                i = (e = this, r = n, l((function() {
                                                                    r.dispose(), !e.isDisposed && e.observers.splice(e.observers.indexOf(r), 1)
                                                                })));
                                                            this._trim(this.scheduler.now()), this.observers.push(n);
                                                            for (var o = 0, s = this.q.length; o < s; o++) n.onNext(this.q[o].value);
                                                            return this.hasError ? n.onError(this.error) : this.isStopped && n.onCompleted(), n.ensureActive(), i
                                                        },
                                                        hasObservers: function() {
                                                            return g(this), this.observers.length > 0
                                                        },
                                                        _trim: function(t) {
                                                            for (; this.q.length > this.bufferSize;) this.q.shift();
                                                            for (; this.q.length > 0 && t - this.q[0].interval > this.windowSize;) this.q.shift()
                                                        },
                                                        onNext: function(t) {
                                                            if (g(this), !this.isStopped) {
                                                                var e = this.scheduler.now();
                                                                this.q.push({
                                                                    interval: e,
                                                                    value: t
                                                                }), this._trim(e);
                                                                for (var r = 0, n = m(this.observers), i = n.length; r < i; r++) {
                                                                    var o = n[r];
                                                                    o.onNext(t), o.ensureActive()
                                                                }
                                                            }
                                                        },
                                                        onError: function(t) {
                                                            if (g(this), !this.isStopped) {
                                                                this.isStopped = !0, this.error = t, this.hasError = !0;
                                                                var e = this.scheduler.now();
                                                                this._trim(e);
                                                                for (var r = 0, n = m(this.observers), i = n.length; r < i; r++) {
                                                                    var o = n[r];
                                                                    o.onError(t), o.ensureActive()
                                                                }
                                                                this.observers.length = 0
                                                            }
                                                        },
                                                        onCompleted: function() {
                                                            if (g(this), !this.isStopped) {
                                                                this.isStopped = !0;
                                                                var t = this.scheduler.now();
                                                                this._trim(t);
                                                                for (var e = 0, r = m(this.observers), n = r.length; e < n; e++) {
                                                                    var i = r[e];
                                                                    i.onCompleted(), i.ensureActive()
                                                                }
                                                                this.observers.length = 0
                                                            }
                                                        },
                                                        dispose: function() {
                                                            this.isDisposed = !0, this.observers = null
                                                        }
                                                    }), r
                                                }(i),
                                                T = function(t) {
                                                    function e(e) {
                                                        this.source = e, this._count = 0, this._connectableSubscription = null, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        this._p = t, this._s = e, this.isDisposed = !1
                                                    }
                                                    return y(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = this.source.subscribe(t);
                                                        return 1 == ++this._count && (this._connectableSubscription = this.source.connect()), new r(this, e)
                                                    }, r.prototype.dispose = function() {
                                                        this.isDisposed || (this.isDisposed = !0, this._s.dispose(), 0 == --this._p._count && this._p._connectableSubscription.dispose())
                                                    }, e
                                                }(a),
                                                C = r.ConnectableObservable = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._connection = null, this._source = e.asObservable(), this._subject = r, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        this._p = t, this._s = e
                                                    }
                                                    return y(e, t), r.prototype.dispose = function() {
                                                        this._s && (this._s.dispose(), this._s = null, this._p._connection = null)
                                                    }, e.prototype.connect = function() {
                                                        if (!this._connection) {
                                                            if (this._subject.isStopped) return p;
                                                            var t = this._source.subscribe(this._subject);
                                                            this._connection = new r(this, t)
                                                        }
                                                        return this._connection
                                                    }, e.prototype._subscribe = function(t) {
                                                        return this._subject.subscribe(t)
                                                    }, e.prototype.refCount = function() {
                                                        return new T(this)
                                                    }, e
                                                }(i);
                                            return o.singleInstance = function() {
                                                var t, e = this,
                                                    r = !1;
                                                return new s((function(n) {
                                                    return (r || (r = !0, t = e.finally((function() {
                                                        r = !1
                                                    })).publish().refCount()), t).subscribe(n)
                                                }))
                                            }, r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.Observable,
                                                o = r.ObservableBase,
                                                s = r.internals.AbstractObserver,
                                                a = r.CompositeDisposable,
                                                u = r.BinaryDisposable,
                                                c = r.RefCountDisposable,
                                                h = r.SingleAssignmentDisposable,
                                                f = r.SerialDisposable,
                                                l = r.Subject,
                                                p = i.prototype,
                                                d = i.empty,
                                                b = i.never,
                                                _ = r.AnonymousObservable,
                                                y = r.internals.addRef,
                                                v = r.internals.inherits,
                                                g = r.internals.bindCallback,
                                                m = r.helpers.noop,
                                                w = r.helpers.isPromise,
                                                E = r.helpers.isFunction,
                                                S = i.fromPromise,
                                                I = {
                                                    e: {}
                                                },
                                                T = r.internals.tryCatch = function(t) {
                                                    if (!E(t)) throw new TypeError("fn must be a function");
                                                    return e = t,
                                                        function() {
                                                            try {
                                                                return e.apply(this, arguments)
                                                            } catch (t) {
                                                                return I.e = t, I
                                                            }
                                                        };
                                                    var e
                                                },
                                                C = t.Map || function() {
                                                    function t() {
                                                        this.size = 0, this._values = [], this._keys = []
                                                    }
                                                    return t.prototype.delete = function(t) {
                                                        var e = this._keys.indexOf(t);
                                                        return -1 !== e && (this._values.splice(e, 1), this._keys.splice(e, 1), this.size--, !0)
                                                    }, t.prototype.get = function(t) {
                                                        var e = this._keys.indexOf(t);
                                                        return -1 === e ? n : this._values[e]
                                                    }, t.prototype.set = function(t, e) {
                                                        var r = this._keys.indexOf(t);
                                                        return -1 === r ? (this._keys.push(t), this._values.push(e), this.size++) : this._values[r] = e, this
                                                    }, t.prototype.forEach = function(t, e) {
                                                        for (var r = 0; r < this.size; r++) t.call(e, this._values[r], this._keys[r])
                                                    }, t
                                                }();

                                            function k(t) {
                                                return t.toArray()
                                            }

                                            function x(t, e) {
                                                return t.groupJoin(this, e, d, (function(t, e) {
                                                    return e
                                                }))
                                            }

                                            function A(t) {
                                                var e = this;
                                                return new _((function(r) {
                                                    var n = new l,
                                                        i = new a,
                                                        o = new c(i);
                                                    return r.onNext(y(n, o)), i.add(e.subscribe((function(t) {
                                                        n.onNext(t)
                                                    }), (function(t) {
                                                        n.onError(t), r.onError(t)
                                                    }), (function() {
                                                        n.onCompleted(), r.onCompleted()
                                                    }))), w(t) && (t = S(t)), i.add(t.subscribe((function(t) {
                                                        n.onCompleted(), n = new l, r.onNext(y(n, o))
                                                    }), (function(t) {
                                                        n.onError(t), r.onError(t)
                                                    }), (function() {
                                                        n.onCompleted(), r.onCompleted()
                                                    }))), o
                                                }), e)
                                            }

                                            function O(t) {
                                                var e = this;
                                                return new _((function(r) {
                                                    var n = new f,
                                                        i = new a(n),
                                                        o = new c(i),
                                                        s = new l;
                                                    return r.onNext(y(s, o)), i.add(e.subscribe((function(t) {
                                                            s.onNext(t)
                                                        }), (function(t) {
                                                            s.onError(t), r.onError(t)
                                                        }), (function() {
                                                            s.onCompleted(), r.onCompleted()
                                                        }))),
                                                        function e() {
                                                            var i;
                                                            try {
                                                                i = t()
                                                            } catch (t) {
                                                                return void r.onError(t)
                                                            }
                                                            w(i) && (i = S(i));
                                                            var a = new h;
                                                            n.setDisposable(a), a.setDisposable(i.take(1).subscribe(m, (function(t) {
                                                                s.onError(t), r.onError(t)
                                                            }), (function() {
                                                                s.onCompleted(), s = new l, r.onNext(y(s, o)), e()
                                                            })))
                                                        }(), o
                                                }), e)
                                            }
                                            p.join = function(t, e, r, n) {
                                                var i = this;
                                                return new _((function(o) {
                                                    var s = new a,
                                                        u = !1,
                                                        c = !1,
                                                        f = 0,
                                                        l = 0,
                                                        p = new C,
                                                        d = new C,
                                                        b = function(t) {
                                                            o.onError(t)
                                                        };
                                                    return s.add(i.subscribe((function(t) {
                                                        var r = f++,
                                                            i = new h;
                                                        p.set(r, t), s.add(i);
                                                        var a = T(e)(t);
                                                        if (a === I) return o.onError(a.e);
                                                        i.setDisposable(a.take(1).subscribe(m, b, (function() {
                                                            p.delete(r) && 0 === p.size && u && o.onCompleted(), s.remove(i)
                                                        }))), d.forEach((function(e) {
                                                            var r = T(n)(t, e);
                                                            if (r === I) return o.onError(r.e);
                                                            o.onNext(r)
                                                        }))
                                                    }), b, (function() {
                                                        u = !0, (c || 0 === p.size) && o.onCompleted()
                                                    }))), s.add(t.subscribe((function(t) {
                                                        var e = l++,
                                                            i = new h;
                                                        d.set(e, t), s.add(i);
                                                        var a = T(r)(t);
                                                        if (a === I) return o.onError(a.e);
                                                        i.setDisposable(a.take(1).subscribe(m, b, (function() {
                                                            d.delete(e) && 0 === d.size && c && o.onCompleted(), s.remove(i)
                                                        }))), p.forEach((function(e) {
                                                            var r = T(n)(e, t);
                                                            if (r === I) return o.onError(r.e);
                                                            o.onNext(r)
                                                        }))
                                                    }), b, (function() {
                                                        c = !0, (u || 0 === d.size) && o.onCompleted()
                                                    }))), s
                                                }), i)
                                            }, p.groupJoin = function(t, e, r, n) {
                                                var i = this;
                                                return new _((function(o) {
                                                    var s = new a,
                                                        u = new c(s),
                                                        f = new C,
                                                        p = new C,
                                                        d = 0,
                                                        b = 0,
                                                        _ = function(t) {
                                                            return function(e) {
                                                                e.onError(t)
                                                            }
                                                        };

                                                    function _(t) {}
                                                    return s.add(i.subscribe((function(t) {
                                                        var r = new l,
                                                            i = d++;
                                                        f.set(i, r);
                                                        var a = T(n)(t, y(r, u));
                                                        if (a === I) return f.forEach(_(a.e)), o.onError(a.e);
                                                        o.onNext(a), p.forEach((function(t) {
                                                            r.onNext(t)
                                                        }));
                                                        var c = new h;
                                                        s.add(c);
                                                        var b = T(e)(t);
                                                        if (b === I) return f.forEach(_(b.e)), o.onError(b.e);
                                                        c.setDisposable(b.take(1).subscribe(m, (function(t) {
                                                            f.forEach(_(t)), o.onError(t)
                                                        }), (function() {
                                                            f.delete(i) && r.onCompleted(), s.remove(c)
                                                        })))
                                                    }), (function(t) {
                                                        f.forEach(_(t)), o.onError(t)
                                                    }), (function() {
                                                        o.onCompleted()
                                                    }))), s.add(t.subscribe((function(t) {
                                                        var e = b++;
                                                        p.set(e, t);
                                                        var n = new h;
                                                        s.add(n);
                                                        var i = T(r)(t);
                                                        if (i === I) return f.forEach(_(i.e)), o.onError(i.e);
                                                        n.setDisposable(i.take(1).subscribe(m, (function(t) {
                                                            f.forEach(_(t)), o.onError(t)
                                                        }), (function() {
                                                            p.delete(e), s.remove(n)
                                                        }))), f.forEach((function(e) {
                                                            e.onNext(t)
                                                        }))
                                                    }), (function(t) {
                                                        f.forEach(_(t)), o.onError(t)
                                                    }))), u
                                                }), i)
                                            }, p.buffer = function() {
                                                return this.window.apply(this, arguments).flatMap(k)
                                            }, p.window = function(t, e) {
                                                return 1 === arguments.length && "function" != typeof arguments[0] ? A.call(this, t) : "function" == typeof t ? O.call(this, t) : x.call(this, t, e)
                                            };
                                            var D = function(t) {
                                                    function e(e) {
                                                        this.source = e, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new R(t))
                                                    }, e
                                                }(o),
                                                R = function(t) {
                                                    function e(e) {
                                                        this._o = e, this._p = null, this._hp = !1, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.next = function(t) {
                                                        this._hp ? this._o.onNext([this._p, t]) : this._hp = !0, this._p = t
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(s);
                                            p.pairwise = function() {
                                                return new D(this)
                                            }, p.partition = function(t, e) {
                                                var r = g(t, e, 3);
                                                return [this.filter(t, e), this.filter((function(t, e, n) {
                                                    return !r(t, e, n)
                                                }))]
                                            }, p.groupBy = function(t, e) {
                                                return this.groupByUntil(t, e, b)
                                            }, p.groupByUntil = function(t, e, r) {
                                                var i = this;
                                                return new _((function(o) {
                                                    var s = new C,
                                                        u = new a,
                                                        f = new c(u),
                                                        p = function(t) {
                                                            return function(e) {
                                                                e.onError(t)
                                                            }
                                                        };
                                                    return u.add(i.subscribe((function(i) {
                                                        var a = T(t)(i);
                                                        if (a === I) return s.forEach(p(a.e)), o.onError(a.e);
                                                        var c = !1,
                                                            d = s.get(a);
                                                        if (d === n && (d = new l, s.set(a, d), c = !0), c) {
                                                            var b = new M(a, d, f),
                                                                _ = new M(a, d),
                                                                y = T(r)(_);
                                                            if (y === I) return s.forEach(p(y.e)), o.onError(y.e);
                                                            o.onNext(b);
                                                            var v = new h;
                                                            u.add(v), v.setDisposable(y.take(1).subscribe(m, (function(t) {
                                                                s.forEach(p(t)), o.onError(t)
                                                            }), (function() {
                                                                s.delete(a) && d.onCompleted(), u.remove(v)
                                                            })))
                                                        }
                                                        var g = i;
                                                        if (E(e) && (g = T(e)(i)) === I) return s.forEach(p(g.e)), o.onError(g.e);
                                                        d.onNext(g)
                                                    }), (function(t) {
                                                        s.forEach(p(t)), o.onError(t)
                                                    }), (function() {
                                                        s.forEach((function(t) {
                                                            t.onCompleted()
                                                        })), o.onCompleted()
                                                    }))), f
                                                }), i)
                                            };
                                            var N = function(t) {
                                                    function e(e, r) {
                                                        this._m = e, this._u = r, t.call(this)
                                                    }
                                                    return v(e, t), e.prototype.subscribeCore = function(t) {
                                                        return new u(this._m.getDisposable(), this._u.subscribe(t))
                                                    }, e
                                                }(o),
                                                M = function(t) {
                                                    function e(e, r, n) {
                                                        t.call(this), this.key = e, this.underlyingObservable = n ? new N(n, r) : r
                                                    }
                                                    return v(e, t), e.prototype._subscribe = function(t) {
                                                        return this.underlyingObservable.subscribe(t)
                                                    }, e
                                                }(i);
                                            return r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.Observable,
                                                o = i.prototype,
                                                s = r.ObservableBase,
                                                a = r.internals.AbstractObserver,
                                                u = r.FlatMapObservable,
                                                c = i.concat,
                                                h = i.defer,
                                                f = i.empty,
                                                l = r.Disposable.empty,
                                                p = r.CompositeDisposable,
                                                d = r.SerialDisposable,
                                                b = r.SingleAssignmentDisposable,
                                                _ = r.internals.Enumerable,
                                                y = _.of,
                                                v = r.Scheduler.currentThread,
                                                g = r.AsyncSubject,
                                                m = r.Observer,
                                                w = r.internals.inherits,
                                                E = r.internals.addProperties,
                                                S = r.helpers,
                                                I = S.noop,
                                                T = S.isPromise,
                                                C = S.isFunction,
                                                k = r.Scheduler.isScheduler,
                                                x = i.fromPromise,
                                                A = {
                                                    e: {}
                                                },
                                                O = r.internals.tryCatch = function(t) {
                                                    if (!C(t)) throw new TypeError("fn must be a function");
                                                    return e = t,
                                                        function() {
                                                            try {
                                                                return e.apply(this, arguments)
                                                            } catch (t) {
                                                                return A.e = t, A
                                                            }
                                                        };
                                                    var e
                                                },
                                                D = "function" == typeof Symbol && Symbol.iterator || "_es6shim_iterator_";
                                            t.Set && "function" == typeof(new t.Set)["@@iterator"] && (D = "@@iterator"), r.doneEnumerator = {
                                                done: !0,
                                                value: n
                                            }, r.helpers.isIterable = function(t) {
                                                return t && t[D] !== n
                                            }, r.helpers.isArrayLike = function(t) {
                                                return t && t.length !== n
                                            }, r.helpers.iterator = D;
                                            var R = function(t) {
                                                function e(t, e) {
                                                    this.c = t, this.s = e
                                                }
                                                return w(e, t), e.prototype[D] = function() {
                                                    var t = this;
                                                    return {
                                                        next: function() {
                                                            return t.c() ? {
                                                                done: !1,
                                                                value: t.s
                                                            } : {
                                                                done: !0,
                                                                value: void 0
                                                            }
                                                        }
                                                    }
                                                }, e
                                            }(_);
                                            o.letBind = o.let = function(t) {
                                                return t(this)
                                            }, i.if = function(t, e, r) {
                                                return h((function() {
                                                    return r || (r = f()), T(e) && (e = x(e)), T(r) && (r = x(r)), "function" == typeof r.now && (r = f(r)), t() ? e : r
                                                }))
                                            }, i.for = i.forIn = function(t, e, r) {
                                                return y(t, e, r).concat()
                                            };
                                            var N = i.while = i.whileDo = function(t, e) {
                                                return T(e) && (e = x(e)),
                                                    function(t, e) {
                                                        return new R(t, e)
                                                    }(t, e).concat()
                                            };
                                            o.doWhile = function(t) {
                                                return c([this, N(t, this)])
                                            }, i.case = function(t, e, r) {
                                                return h((function() {
                                                    T(r) && (r = x(r)), r || (r = f()), k(r) && (r = f(r));
                                                    var n = e[t()];
                                                    return T(n) && (n = x(n)), n || r
                                                }))
                                            };
                                            var M = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._fn = r, this._scheduler = n, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        var r, n = t[0],
                                                            i = t[1];
                                                        if (n.q.length > 0) {
                                                            r = n.q.shift();
                                                            var o = new b;
                                                            n.d.add(o), o.setDisposable(r.subscribe(new F(n, i, o))), e([n, i])
                                                        } else n.isAcquired = !1
                                                    }
                                                    return w(e, t), e.prototype._ensureActive = function(t) {
                                                        var e = !1;
                                                        t.q.length > 0 && (e = !t.isAcquired, t.isAcquired = !0), e && t.m.setDisposable(this._scheduler.scheduleRecursive([t, this], r))
                                                    }, e.prototype.subscribeCore = function(t) {
                                                        var e = new d,
                                                            r = new p(e),
                                                            n = {
                                                                q: [],
                                                                m: e,
                                                                d: r,
                                                                activeCount: 0,
                                                                isAcquired: !1,
                                                                o: t
                                                            };
                                                        return n.q.push(this.source), n.activeCount++, this._ensureActive(n), r
                                                    }, e
                                                }(s),
                                                F = function(t) {
                                                    function e(e, r, n) {
                                                        this._s = e, this._p = r, this._m1 = n, t.call(this)
                                                    }
                                                    return w(e, t), e.prototype.next = function(t) {
                                                        this._s.o.onNext(t);
                                                        var e = O(this._p._fn)(t);
                                                        if (e === A) return this._s.o.onError(e.e);
                                                        this._s.q.push(e), this._s.activeCount++, this._p._ensureActive(this._s)
                                                    }, e.prototype.error = function(t) {
                                                        this._s.o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._s.d.remove(this._m1), this._s.activeCount--, 0 === this._s.activeCount && this._s.o.onCompleted()
                                                    }, e
                                                }(a);

                                            function P() {
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                return e
                                            }
                                            o.expand = function(t, e) {
                                                return k(e) || (e = v), new M(this, t, e)
                                            };
                                            var U = function(t) {
                                                    function e(e, r) {
                                                        this._sources = e, this._cb = r, t.call(this)
                                                    }
                                                    return w(e, t), e.prototype.subscribeCore = function(t) {
                                                        if (0 === this._sources.length) return t.onCompleted(), l;
                                                        for (var e = this._sources.length, r = {
                                                                finished: !1,
                                                                hasResults: new Array(e),
                                                                hasCompleted: new Array(e),
                                                                results: new Array(e)
                                                            }, n = new p, i = 0, o = this._sources.length; i < o; i++) {
                                                            var s = this._sources[i];
                                                            T(s) && (s = x(s)), n.add(s.subscribe(new L(t, r, i, this._cb, n)))
                                                        }
                                                        return n
                                                    }, e
                                                }(s),
                                                L = function(t) {
                                                    function e(e, r, n, i, o) {
                                                        this._o = e, this._s = r, this._i = n, this._cb = i, this._subs = o, t.call(this)
                                                    }
                                                    return w(e, t), e.prototype.next = function(t) {
                                                        this._s.finished || (this._s.hasResults[this._i] = !0, this._s.results[this._i] = t)
                                                    }, e.prototype.error = function(t) {
                                                        this._s.finished = !0, this._o.onError(t), this._subs.dispose()
                                                    }, e.prototype.completed = function() {
                                                        if (!this._s.finished) {
                                                            if (!this._s.hasResults[this._i]) return this._o.onCompleted();
                                                            this._s.hasCompleted[this._i] = !0;
                                                            for (var t = 0; t < this._s.results.length; t++)
                                                                if (!this._s.hasCompleted[t]) return;
                                                            this._s.finished = !0;
                                                            var e = O(this._cb).apply(null, this._s.results);
                                                            if (e === A) return this._o.onError(e.e);
                                                            this._o.onNext(e), this._o.onCompleted()
                                                        }
                                                    }, e
                                                }(a);
                                            i.forkJoin = function() {
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                var n = C(e[t - 1]) ? e.pop() : P;
                                                return Array.isArray(e[0]) && (e = e[0]), new U(e, n)
                                            }, o.forkJoin = function() {
                                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                                return Array.isArray(e[0]) ? e[0].unshift(this) : e.unshift(this), i.forkJoin.apply(null, e)
                                            }, o.manySelect = o.extend = function(t, e) {
                                                k(e) || (e = r.Scheduler.immediate);
                                                var n = this;
                                                return h((function() {
                                                    var r;
                                                    return n.map((function(t) {
                                                        var e = new B(t);
                                                        return r && r.onNext(t), r = e, e
                                                    })).tap(I, (function(t) {
                                                        r && r.onError(t)
                                                    }), (function() {
                                                        r && r.onCompleted()
                                                    })).observeOn(e).map(t)
                                                }), n)
                                            };
                                            var B = function(t) {
                                                    function e(e) {
                                                        t.call(this), this.head = e, this.tail = new g
                                                    }
                                                    return w(e, t), E(e.prototype, m, {
                                                        _subscribe: function(t) {
                                                            var e = new p;
                                                            return e.add(v.schedule(this, (function(r, n) {
                                                                t.onNext(n.head), e.add(n.tail.mergeAll().subscribe(t))
                                                            }))), e
                                                        },
                                                        onCompleted: function() {
                                                            this.onNext(i.empty())
                                                        },
                                                        onError: function(t) {
                                                            this.onNext(i.throw(t))
                                                        },
                                                        onNext: function(t) {
                                                            this.tail.onNext(t), this.tail.onCompleted()
                                                        }
                                                    }), e
                                                }(i),
                                                j = function(t) {
                                                    function e(e) {
                                                        this.source = e, t.call(this)
                                                    }
                                                    return w(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new b,
                                                            r = new p,
                                                            n = {
                                                                hasCurrent: !1,
                                                                isStopped: !1,
                                                                o: t,
                                                                g: r
                                                            };
                                                        return r.add(e), e.setDisposable(this.source.subscribe(new q(n))), r
                                                    }, e
                                                }(s),
                                                q = function(t) {
                                                    function e(e) {
                                                        this._s = e, t.call(this)
                                                    }

                                                    function r(e, r) {
                                                        this._s = e, this._i = r, t.call(this)
                                                    }
                                                    return w(e, t), e.prototype.next = function(t) {
                                                        if (!this._s.hasCurrent) {
                                                            this._s.hasCurrent = !0, T(t) && (t = x(t));
                                                            var e = new b;
                                                            this._s.g.add(e), e.setDisposable(t.subscribe(new r(this._s, e)))
                                                        }
                                                    }, e.prototype.error = function(t) {
                                                        this._s.o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._s.isStopped = !0, !this._s.hasCurrent && 1 === this._s.g.length && this._s.o.onCompleted()
                                                    }, w(r, t), r.prototype.next = function(t) {
                                                        this._s.o.onNext(t)
                                                    }, r.prototype.error = function(t) {
                                                        this._s.o.onError(t)
                                                    }, r.prototype.completed = function() {
                                                        this._s.g.remove(this._i), this._s.hasCurrent = !1, this._s.isStopped && 1 === this._s.g.length && this._s.o.onCompleted()
                                                    }, e
                                                }(a);
                                            return o.switchFirst = function() {
                                                return new j(this)
                                            }, o.flatMapFirst = o.exhaustMap = function(t, e, r) {
                                                return new u(this, t, e, r).switchFirst()
                                            }, o.flatMapWithMaxConcurrent = o.flatMapMaxConcurrent = function(t, e, r, n) {
                                                return new u(this, e, r, n).merge(t)
                                            }, r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.Observable,
                                                o = i.prototype,
                                                s = r.AnonymousObservable,
                                                a = i.throwError,
                                                u = r.Observer.create,
                                                c = r.SingleAssignmentDisposable,
                                                h = r.CompositeDisposable,
                                                f = r.internals.AbstractObserver,
                                                l = r.helpers.noop,
                                                p = r.internals.inherits,
                                                d = r.helpers.isFunction,
                                                b = {
                                                    e: {}
                                                },
                                                _ = r.internals.tryCatch = function(t) {
                                                    if (!d(t)) throw new TypeError("fn must be a function");
                                                    return e = t,
                                                        function() {
                                                            try {
                                                                return e.apply(this, arguments)
                                                            } catch (t) {
                                                                return b.e = t, b
                                                            }
                                                        };
                                                    var e
                                                },
                                                y = t.Map || function() {
                                                    function t() {
                                                        this.size = 0, this._values = [], this._keys = []
                                                    }
                                                    return t.prototype.delete = function(t) {
                                                        var e = this._keys.indexOf(t);
                                                        return -1 !== e && (this._values.splice(e, 1), this._keys.splice(e, 1), this.size--, !0)
                                                    }, t.prototype.get = function(t) {
                                                        var e = this._keys.indexOf(t);
                                                        return -1 === e ? n : this._values[e]
                                                    }, t.prototype.set = function(t, e) {
                                                        var r = this._keys.indexOf(t);
                                                        return -1 === r ? (this._keys.push(t), this._values.push(e), this.size++) : this._values[r] = e, this
                                                    }, t.prototype.forEach = function(t, e) {
                                                        for (var r = 0; r < this.size; r++) t.call(e, this._values[r], this._keys[r])
                                                    }, t
                                                }();

                                            function v(t) {
                                                this.patterns = t
                                            }

                                            function g(t, e) {
                                                this.expression = t, this.selector = e
                                            }

                                            function m(t, e, r) {
                                                var n = t.get(e);
                                                if (!n) {
                                                    var i = new E(e, r);
                                                    return t.set(e, i), i
                                                }
                                                return n
                                            }

                                            function w(t, e, r) {
                                                this.joinObserverArray = t, this.onNext = e, this.onCompleted = r, this.joinObservers = new y;
                                                for (var n = 0, i = this.joinObserverArray.length; n < i; n++) {
                                                    var o = this.joinObserverArray[n];
                                                    this.joinObservers.set(o, o)
                                                }
                                            }
                                            v.prototype.and = function(t) {
                                                return new v(this.patterns.concat(t))
                                            }, v.prototype.thenDo = function(t) {
                                                return new g(this, t)
                                            }, g.prototype.activate = function(t, e, r) {
                                                for (var n, i = [], o = (n = e, function(t) {
                                                        n.onError(t)
                                                    }), s = 0, a = this.expression.patterns.length; s < a; s++) i.push(m(t, this.expression.patterns[s], o));
                                                var u = new w(i, function(t, e) {
                                                    return function() {
                                                        var r = _(t.selector).apply(t, arguments);
                                                        if (r === b) return e.onError(r.e);
                                                        e.onNext(r)
                                                    }
                                                }(this, e), (function() {
                                                    for (var t = 0, e = i.length; t < e; t++) i[t].removeActivePlan(u);
                                                    r(u)
                                                }));
                                                for (s = 0, a = i.length; s < a; s++) i[s].addActivePlan(u);
                                                return u
                                            }, w.prototype.dequeue = function() {
                                                this.joinObservers.forEach((function(t) {
                                                    t.queue.shift()
                                                }))
                                            }, w.prototype.match = function() {
                                                var t, e, r = !0;
                                                for (t = 0, e = this.joinObserverArray.length; t < e; t++)
                                                    if (0 === this.joinObserverArray[t].queue.length) {
                                                        r = !1;
                                                        break
                                                    } if (r) {
                                                    var n = [],
                                                        i = !1;
                                                    for (t = 0, e = this.joinObserverArray.length; t < e; t++) n.push(this.joinObserverArray[t].queue[0]), "C" === this.joinObserverArray[t].queue[0].kind && (i = !0);
                                                    if (i) this.onCompleted();
                                                    else {
                                                        this.dequeue();
                                                        var o = [];
                                                        for (t = 0, e = n.length; t < n.length; t++) o.push(n[t].value);
                                                        this.onNext.apply(this, o)
                                                    }
                                                }
                                            };
                                            var E = function(t) {
                                                function e(e, r) {
                                                    t.call(this), this.source = e, this.onError = r, this.queue = [], this.activePlans = [], this.subscription = new c, this.isDisposed = !1
                                                }
                                                p(e, t);
                                                var r = e.prototype;
                                                return r.next = function(t) {
                                                    if (!this.isDisposed) {
                                                        if ("E" === t.kind) return this.onError(t.error);
                                                        this.queue.push(t);
                                                        for (var e = this.activePlans.slice(0), r = 0, n = e.length; r < n; r++) e[r].match()
                                                    }
                                                }, r.error = l, r.completed = l, r.addActivePlan = function(t) {
                                                    this.activePlans.push(t)
                                                }, r.subscribe = function() {
                                                    this.subscription.setDisposable(this.source.materialize().subscribe(this))
                                                }, r.removeActivePlan = function(t) {
                                                    this.activePlans.splice(this.activePlans.indexOf(t), 1), 0 === this.activePlans.length && this.dispose()
                                                }, r.dispose = function() {
                                                    t.prototype.dispose.call(this), this.isDisposed || (this.isDisposed = !0, this.subscription.dispose())
                                                }, e
                                            }(f);
                                            return o.and = function(t) {
                                                return new v([this, t])
                                            }, o.thenDo = function(t) {
                                                return new v([this]).thenDo(t)
                                            }, i.when = function() {
                                                var t, e = arguments.length;
                                                if (Array.isArray(arguments[0])) t = arguments[0];
                                                else {
                                                    t = new Array(e);
                                                    for (var r = 0; r < e; r++) t[r] = arguments[r]
                                                }
                                                return new s((function(e) {
                                                    var r = [],
                                                        n = new y,
                                                        i = u((function(t) {
                                                            e.onNext(t)
                                                        }), (function(t) {
                                                            n.forEach((function(e) {
                                                                e.onError(t)
                                                            })), e.onError(t)
                                                        }), (function(t) {
                                                            e.onCompleted()
                                                        }));
                                                    try {
                                                        for (var o = 0, s = t.length; o < s; o++) r.push(t[o].activate(n, i, (function(t) {
                                                            var n = r.indexOf(t);
                                                            r.splice(n, 1), 0 === r.length && e.onCompleted()
                                                        })))
                                                    } catch (t) {
                                                        return a(t).subscribe(e)
                                                    }
                                                    var c = new h;
                                                    return n.forEach((function(t) {
                                                        t.subscribe(), c.add(t)
                                                    })), c
                                                }))
                                            }, r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.Observable,
                                                o = i.prototype,
                                                s = r.AnonymousObservable,
                                                a = i.never,
                                                u = r.internals.isEqual,
                                                c = r.helpers.defaultSubComparer;
                                            return o.jortSort = function() {
                                                return this.jortSortUntil(a())
                                            }, o.jortSortUntil = function(t) {
                                                var e = this;
                                                return new s((function(r) {
                                                    var n = [];
                                                    return e.takeUntil(t).subscribe(n.push.bind(n), r.onError.bind(r), (function() {
                                                        var t = n.slice(0).sort(c);
                                                        r.onNext(u(n, t)), r.onCompleted()
                                                    }))
                                                }), e)
                                            }, r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.internals.ScheduledItem,
                                                o = r.internals.SchedulePeriodicRecursive,
                                                s = r.internals.PriorityQueue,
                                                a = r.internals.inherits,
                                                u = r.helpers.defaultSubComparer,
                                                c = r.helpers.notImplemented;
                                            return r.VirtualTimeScheduler = function(t) {
                                                function e(e, r) {
                                                    this.clock = e, this.comparer = r, this.isEnabled = !1, this.queue = new s(1024), t.call(this)
                                                }
                                                a(e, t);
                                                var r = e.prototype;
                                                return r.now = function() {
                                                    return this.toAbsoluteTime(this.clock)
                                                }, r.schedule = function(t, e) {
                                                    return this.scheduleAbsolute(t, this.clock, e)
                                                }, r.scheduleFuture = function(t, e, r) {
                                                    var n = e instanceof Date ? this.toRelativeTime(e - this.now()) : this.toRelativeTime(e);
                                                    return this.scheduleRelative(t, n, r)
                                                }, r.add = c, r.toAbsoluteTime = c, r.toRelativeTime = c, r.schedulePeriodic = function(t, e, r) {
                                                    return new o(this, t, e, r).start()
                                                }, r.scheduleRelative = function(t, e, r) {
                                                    var n = this.add(this.clock, e);
                                                    return this.scheduleAbsolute(t, n, r)
                                                }, r.start = function() {
                                                    if (!this.isEnabled) {
                                                        this.isEnabled = !0;
                                                        do {
                                                            var t = this.getNext();
                                                            null !== t ? (this.comparer(t.dueTime, this.clock) > 0 && (this.clock = t.dueTime), t.invoke()) : this.isEnabled = !1
                                                        } while (this.isEnabled)
                                                    }
                                                }, r.stop = function() {
                                                    this.isEnabled = !1
                                                }, r.advanceTo = function(t) {
                                                    var e = this.comparer(this.clock, t);
                                                    if (this.comparer(this.clock, t) > 0) throw new ArgumentOutOfRangeError;
                                                    if (0 !== e && !this.isEnabled) {
                                                        this.isEnabled = !0;
                                                        do {
                                                            var r = this.getNext();
                                                            null !== r && this.comparer(r.dueTime, t) <= 0 ? (this.comparer(r.dueTime, this.clock) > 0 && (this.clock = r.dueTime), r.invoke()) : this.isEnabled = !1
                                                        } while (this.isEnabled);
                                                        this.clock = t
                                                    }
                                                }, r.advanceBy = function(t) {
                                                    var e = this.add(this.clock, t),
                                                        r = this.comparer(this.clock, e);
                                                    if (r > 0) throw new ArgumentOutOfRangeError;
                                                    0 !== r && this.advanceTo(e)
                                                }, r.sleep = function(t) {
                                                    var e = this.add(this.clock, t);
                                                    if (this.comparer(this.clock, e) >= 0) throw new ArgumentOutOfRangeError;
                                                    this.clock = e
                                                }, r.getNext = function() {
                                                    for (; this.queue.length > 0;) {
                                                        var t = this.queue.peek();
                                                        if (!t.isCancelled()) return t;
                                                        this.queue.dequeue()
                                                    }
                                                    return null
                                                }, r.scheduleAbsolute = function(t, e, r) {
                                                    var n = this,
                                                        o = new i(this, t, (function(t, e) {
                                                            return n.queue.remove(o), r(t, e)
                                                        }), e, this.comparer);
                                                    return this.queue.enqueue(o), o.disposable
                                                }, e
                                            }(r.Scheduler), r.HistoricalScheduler = function(t) {
                                                function e(e, r) {
                                                    t.call(this, null == e ? 0 : e, r || u)
                                                }
                                                a(e, t);
                                                var r = e.prototype;
                                                return r.add = function(t, e) {
                                                    return t + e
                                                }, r.toAbsoluteTime = function(t) {
                                                    return new Date(t).getTime()
                                                }, r.toRelativeTime = function(t) {
                                                    return t
                                                }, e
                                            }(r.VirtualTimeScheduler), r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.Observer,
                                                o = r.Observable,
                                                s = r.Notification,
                                                a = r.VirtualTimeScheduler,
                                                u = r.Disposable,
                                                c = u.empty,
                                                h = u.create,
                                                f = r.CompositeDisposable,
                                                l = r.internals.inherits,
                                                p = r.internals.isEqual;

                                            function d(t) {
                                                this.predicate = t
                                            }

                                            function b(t) {
                                                this.predicate = t
                                            }
                                            d.prototype.equals = function(t) {
                                                return t === this || null != t && "N" === t.kind && this.predicate(t.value)
                                            }, b.prototype.equals = function(t) {
                                                return t === this || null != t && "E" === t.kind && this.predicate(t.error)
                                            };
                                            var _ = r.ReactiveTest = {
                                                    created: 100,
                                                    subscribed: 200,
                                                    disposed: 1e3,
                                                    onNext: function(t, e) {
                                                        return new y(t, "function" == typeof e ? new d(e) : s.createOnNext(e))
                                                    },
                                                    onError: function(t, e) {
                                                        return new y(t, "function" == typeof e ? new b(e) : s.createOnError(e))
                                                    },
                                                    onCompleted: function(t) {
                                                        return new y(t, s.createOnCompleted())
                                                    },
                                                    subscribe: function(t, e) {
                                                        return new v(t, e)
                                                    }
                                                },
                                                y = r.Recorded = function(t, e, r) {
                                                    this.time = t, this.value = e, this.comparer = r || p
                                                };
                                            y.prototype.equals = function(t) {
                                                return this.time === t.time && this.comparer(this.value, t.value)
                                            }, y.prototype.toString = function() {
                                                return this.value.toString() + "@" + this.time
                                            };
                                            var v = r.Subscription = function(t, e) {
                                                this.subscribe = t, this.unsubscribe = e || Number.MAX_VALUE
                                            };
                                            v.prototype.equals = function(t) {
                                                return this.subscribe === t.subscribe && this.unsubscribe === t.unsubscribe
                                            }, v.prototype.toString = function() {
                                                return "(" + this.subscribe + ", " + (this.unsubscribe === Number.MAX_VALUE ? "Infinite" : this.unsubscribe) + ")"
                                            }, (r.MockDisposable = function(t) {
                                                this.scheduler = t, this.disposes = [], this.disposes.push(this.scheduler.clock)
                                            }).prototype.dispose = function() {
                                                this.disposes.push(this.scheduler.clock)
                                            };
                                            var g = function(t) {
                                                function e(e) {
                                                    t.call(this), this.scheduler = e, this.messages = []
                                                }
                                                l(e, t);
                                                var r = e.prototype;
                                                return r.onNext = function(t) {
                                                    this.messages.push(new y(this.scheduler.clock, s.createOnNext(t)))
                                                }, r.onError = function(t) {
                                                    this.messages.push(new y(this.scheduler.clock, s.createOnError(t)))
                                                }, r.onCompleted = function() {
                                                    this.messages.push(new y(this.scheduler.clock, s.createOnCompleted()))
                                                }, e
                                            }(i);

                                            function m(t, e) {
                                                var r = this;
                                                this.scheduler = t, this.messages = e, this.subscriptions = [], this.observers = [];
                                                for (var n = 0, i = this.messages.length; n < i; n++) {
                                                    var o = this.messages[n];
                                                    ! function(e) {
                                                        t.scheduleAbsolute(null, o.time, (function() {
                                                            for (var t = r.observers.slice(0), n = 0, i = t.length; n < i; n++) e.accept(t[n]);
                                                            return c
                                                        }))
                                                    }(o.value)
                                                }
                                            }
                                            m.prototype.then = function(t, e) {
                                                var i = this;
                                                this.subscriptions.push(new v(this.scheduler.clock));
                                                var o, s = this.subscriptions.length - 1,
                                                    a = r.Observer.create((function(e) {
                                                        var u = t(e);
                                                        if (u && "function" == typeof u.then) o = u;
                                                        else {
                                                            var c = i.scheduler.clock;
                                                            o = new m(i.scheduler, [r.ReactiveTest.onNext(c, n), r.ReactiveTest.onCompleted(c)])
                                                        }
                                                        var h = i.observers.indexOf(a);
                                                        i.observers.splice(h, 1), i.subscriptions[s] = new v(i.subscriptions[s].subscribe, i.scheduler.clock)
                                                    }), (function(t) {
                                                        e(t);
                                                        var r = i.observers.indexOf(a);
                                                        i.observers.splice(r, 1), i.subscriptions[s] = new v(i.subscriptions[s].subscribe, i.scheduler.clock)
                                                    }));
                                                return this.observers.push(a), o || new m(this.scheduler, this.messages)
                                            };
                                            var w = function(t) {
                                                    function e(e, r) {
                                                        t.call(this);
                                                        var n, i = this;
                                                        this.scheduler = e, this.messages = r, this.subscriptions = [], this.observers = [];
                                                        for (var o = 0, s = this.messages.length; o < s; o++) ! function(t) {
                                                            e.scheduleAbsolute(null, n.time, (function() {
                                                                for (var e = i.observers.slice(0), r = 0, n = e.length; r < n; r++) t.accept(e[r]);
                                                                return c
                                                            }))
                                                        }((n = this.messages[o]).value)
                                                    }
                                                    return l(e, t), e.prototype._subscribe = function(t) {
                                                        var e = this;
                                                        this.observers.push(t), this.subscriptions.push(new v(this.scheduler.clock));
                                                        var r = this.subscriptions.length - 1;
                                                        return h((function() {
                                                            var n = e.observers.indexOf(t);
                                                            e.observers.splice(n, 1), e.subscriptions[r] = new v(e.subscriptions[r].subscribe, e.scheduler.clock)
                                                        }))
                                                    }, e
                                                }(o),
                                                E = function(t) {
                                                    function e(e, r) {
                                                        t.call(this), this.scheduler = e, this.messages = r, this.subscriptions = []
                                                    }
                                                    return l(e, t), e.prototype._subscribe = function(t) {
                                                        var e, r = this;
                                                        this.subscriptions.push(new v(this.scheduler.clock));
                                                        for (var n = this.subscriptions.length - 1, i = new f, o = 0, s = this.messages.length; o < s; o++) ! function(n) {
                                                            i.add(r.scheduler.scheduleRelative(null, e.time, (function() {
                                                                return n.accept(t), c
                                                            })))
                                                        }((e = this.messages[o]).value);
                                                        return h((function() {
                                                            r.subscriptions[n] = new v(r.subscriptions[n].subscribe, r.scheduler.clock), i.dispose()
                                                        }))
                                                    }, e
                                                }(o);
                                            return r.TestScheduler = function(t) {
                                                function e(t, e) {
                                                    return t > e ? 1 : t < e ? -1 : 0
                                                }

                                                function n() {
                                                    t.call(this, 0, e)
                                                }
                                                return l(n, t), n.prototype.scheduleAbsolute = function(e, r, n) {
                                                    return r <= this.clock && (r = this.clock + 1), t.prototype.scheduleAbsolute.call(this, e, r, n)
                                                }, n.prototype.add = function(t, e) {
                                                    return t + e
                                                }, n.prototype.toAbsoluteTime = function(t) {
                                                    return new Date(t).getTime()
                                                }, n.prototype.toRelativeTime = function(t) {
                                                    return t
                                                }, n.prototype.startScheduler = function(t, e) {
                                                    e || (e = {}), null == e.created && (e.created = _.created), null == e.subscribed && (e.subscribed = _.subscribed), null == e.disposed && (e.disposed = _.disposed);
                                                    var r, n, i = this.createObserver();
                                                    return this.scheduleAbsolute(null, e.created, (function() {
                                                        return r = t(), c
                                                    })), this.scheduleAbsolute(null, e.subscribed, (function() {
                                                        return n = r.subscribe(i), c
                                                    })), this.scheduleAbsolute(null, e.disposed, (function() {
                                                        return n.dispose(), c
                                                    })), this.start(), i
                                                }, n.prototype.createHotObservable = function() {
                                                    var t, e = arguments.length;
                                                    if (Array.isArray(arguments[0])) t = arguments[0];
                                                    else {
                                                        t = new Array(e);
                                                        for (var r = 0; r < e; r++) t[r] = arguments[r]
                                                    }
                                                    return new w(this, t)
                                                }, n.prototype.createColdObservable = function() {
                                                    var t, e = arguments.length;
                                                    if (Array.isArray(arguments[0])) t = arguments[0];
                                                    else {
                                                        t = new Array(e);
                                                        for (var r = 0; r < e; r++) t[r] = arguments[r]
                                                    }
                                                    return new E(this, t)
                                                }, n.prototype.createResolvedPromise = function(t, e) {
                                                    return new m(this, [r.ReactiveTest.onNext(t, e), r.ReactiveTest.onCompleted(t)])
                                                }, n.prototype.createRejectedPromise = function(t, e) {
                                                    return new m(this, [r.ReactiveTest.onError(t, e)])
                                                }, n.prototype.createObserver = function() {
                                                    return new g(this)
                                                }, n
                                            }(a), r
                                        }))
                                    })), n((function(t, r) {
                                        (function(n) {
                                            var o = {
                                                function: !0,
                                                object: !0
                                            };

                                            function s(t) {
                                                return t && t.Object === Object ? t : null
                                            }
                                            var a = o.object && r && !r.nodeType ? r : null,
                                                u = s(a && (o.object && t && !t.nodeType ? t : null) && "object" == typeof e && e),
                                                c = s(o[typeof self] && self),
                                                h = s(o[typeof window] && window),
                                                f = s(o[typeof this] && this),
                                                l = u || h !== (f && f.window) && h || c || f || Function("return this")();
                                            t && t.exports === a ? t.exports = n(l, t.exports, i) : l.Rx = n(l, {}, l.Rx)
                                        }).call(e, (function(t, e, r, n) {
                                            var i = r.internals.inherits,
                                                o = r.internals.AbstractObserver,
                                                s = r.Observable,
                                                a = s.prototype,
                                                u = r.AnonymousObservable,
                                                c = r.ObservableBase,
                                                h = s.defer,
                                                f = s.never,
                                                l = s.throw,
                                                p = r.Scheduler.default,
                                                d = r.SingleAssignmentDisposable,
                                                b = r.SerialDisposable,
                                                _ = r.CompositeDisposable,
                                                y = r.BinaryDisposable,
                                                v = r.RefCountDisposable,
                                                g = r.Subject,
                                                m = r.internals.addRef,
                                                w = r.Scheduler.normalize,
                                                E = r.helpers,
                                                S = E.isPromise,
                                                I = E.isFunction,
                                                T = r.Scheduler.isScheduler,
                                                C = s.fromPromise,
                                                k = {
                                                    e: {}
                                                },
                                                x = r.internals.tryCatch = function(t) {
                                                    if (!I(t)) throw new TypeError("fn must be a function");
                                                    return e = t,
                                                        function() {
                                                            try {
                                                                return e.apply(this, arguments)
                                                            } catch (t) {
                                                                return k.e = t, k
                                                            }
                                                        };
                                                    var e
                                                },
                                                A = function(t) {
                                                    function e(e, r) {
                                                        this._dt = e, this._s = r, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        e.onNext(0), e.onCompleted()
                                                    }
                                                    return i(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this._s.scheduleFuture(t, this._dt, r)
                                                    }, e
                                                }(c);

                                            function O(t, e, r) {
                                                return new u((function(n) {
                                                    var i = t,
                                                        o = w(e);
                                                    return r.scheduleRecursiveFuture(0, i, (function(t, e) {
                                                        if (o > 0) {
                                                            var s = r.now();
                                                            (i = new Date(i.getTime() + o)).getTime() <= s && (i = new Date(s + o))
                                                        }
                                                        n.onNext(t), e(t + 1, new Date(i))
                                                    }))
                                                }))
                                            }

                                            function D(t, e, r) {
                                                return t === e ? new u((function(t) {
                                                    return r.schedulePeriodic(0, e, (function(e) {
                                                        return t.onNext(e), e + 1
                                                    }))
                                                })) : h((function() {
                                                    return O(new Date(r.now() + t), e, r)
                                                }))
                                            }
                                            var R = s.interval = function(t, e) {
                                                return D(t, t, T(e) ? e : p)
                                            };

                                            function N(t, e, r) {
                                                return new u((function(n) {
                                                    var i, o = !1,
                                                        s = new b,
                                                        a = null,
                                                        u = [],
                                                        c = !1;
                                                    return i = t.materialize().timestamp(r).subscribe((function(t) {
                                                        var i, h;
                                                        "E" === t.value.kind ? ((u = []).push(t), a = t.value.error, h = !c) : (u.push({
                                                            value: t.value,
                                                            timestamp: t.timestamp + e
                                                        }), h = !o, o = !0), h && (null !== a ? n.onError(a) : (i = new d, s.setDisposable(i), i.setDisposable(r.scheduleRecursiveFuture(null, e, (function(t, e) {
                                                            var i, s, h, f;
                                                            if (null === a) {
                                                                c = !0;
                                                                do {
                                                                    h = null, u.length > 0 && u[0].timestamp - r.now() <= 0 && (h = u.shift().value), null !== h && h.accept(n)
                                                                } while (null !== h);
                                                                f = !1, s = 0, u.length > 0 ? (f = !0, s = Math.max(0, u[0].timestamp - r.now())) : o = !1, c = !1, null !== (i = a) ? n.onError(i) : f && e(null, s)
                                                            }
                                                        })))))
                                                    })), new y(i, s)
                                                }), t)
                                            }

                                            function M(t, e, r) {
                                                return h((function() {
                                                    return N(t, e - r.now(), r)
                                                }))
                                            }

                                            function F(t, e, r) {
                                                var n, i;
                                                return I(e) ? i = e : (n = e, i = r), new u((function(e) {
                                                    var r = new _,
                                                        o = !1,
                                                        s = new b;

                                                    function a() {
                                                        s.setDisposable(t.subscribe((function(t) {
                                                            var n = x(i)(t);
                                                            if (n === k) return e.onError(n.e);
                                                            var o = new d;
                                                            r.add(o), o.setDisposable(n.subscribe((function() {
                                                                e.onNext(t), r.remove(o), u()
                                                            }), (function(t) {
                                                                e.onError(t)
                                                            }), (function() {
                                                                e.onNext(t), r.remove(o), u()
                                                            })))
                                                        }), (function(t) {
                                                            e.onError(t)
                                                        }), (function() {
                                                            o = !0, s.dispose(), u()
                                                        })))
                                                    }

                                                    function u() {
                                                        o && 0 === r.length && e.onCompleted()
                                                    }
                                                    return n ? s.setDisposable(n.subscribe(a, (function(t) {
                                                        e.onError(t)
                                                    }), a)) : a(), new y(s, r)
                                                }), t)
                                            }
                                            s.timer = function(t, e, r) {
                                                var i;
                                                return T(r) || (r = p), null != e && "number" == typeof e ? i = e : T(e) && (r = e), (t instanceof Date || "number" == typeof t) && i === n ? function(t, e) {
                                                    return new A(t, e)
                                                }(t, r) : t instanceof Date && i !== n ? O(t, e, r) : D(t, i, r)
                                            }, a.delay = function() {
                                                var t = arguments[0];
                                                if ("number" == typeof t || t instanceof Date) {
                                                    var e = t,
                                                        r = arguments[1];
                                                    return T(r) || (r = p), e instanceof Date ? M(this, e, r) : N(this, e, r)
                                                }
                                                if (s.isObservable(t) || I(t)) return F(this, t, arguments[1]);
                                                throw new Error("Invalid arguments")
                                            };
                                            var P = function(t) {
                                                    function e(e, r, n) {
                                                        T(n) || (n = p), this.source = e, this._dt = r, this._s = n, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = new b;
                                                        return new y(this.source.subscribe(new U(t, this._dt, this._s, e)), e)
                                                    }, e
                                                }(c),
                                                U = function(t) {
                                                    function e(e, r, n, i) {
                                                        this._o = e, this._d = r, this._scheduler = n, this._c = i, this._v = null, this._hv = !1, this._id = 0, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.next = function(t) {
                                                        this._hv = !0, this._v = t;
                                                        var e = ++this._id,
                                                            r = new d;
                                                        this._c.setDisposable(r), r.setDisposable(this._scheduler.scheduleFuture(this, this._d, (function(r, n) {
                                                            n._hv && n._id === e && n._o.onNext(t), n._hv = !1
                                                        })))
                                                    }, e.prototype.error = function(t) {
                                                        this._c.dispose(), this._o.onError(t), this._hv = !1, this._id++
                                                    }, e.prototype.completed = function() {
                                                        this._c.dispose(), this._hv && this._o.onNext(this._v), this._o.onCompleted(), this._hv = !1, this._id++
                                                    }, e
                                                }(o);

                                            function L(t, e) {
                                                return new u((function(r) {
                                                    var n, i = !1,
                                                        o = new b,
                                                        s = 0,
                                                        a = t.subscribe((function(t) {
                                                            var a = x(e)(t);
                                                            if (a === k) return r.onError(a.e);
                                                            S(a) && (a = C(a)), i = !0, n = t;
                                                            var u = ++s,
                                                                c = new d;
                                                            o.setDisposable(c), c.setDisposable(a.subscribe((function() {
                                                                i && s === u && r.onNext(n), i = !1, c.dispose()
                                                            }), (function(t) {
                                                                r.onError(t)
                                                            }), (function() {
                                                                i && s === u && r.onNext(n), i = !1, c.dispose()
                                                            })))
                                                        }), (function(t) {
                                                            o.dispose(), r.onError(t), i = !1, s++
                                                        }), (function() {
                                                            o.dispose(), i && r.onNext(n), r.onCompleted(), i = !1, s++
                                                        }));
                                                    return new y(a, o)
                                                }), t)
                                            }

                                            function B(t) {
                                                return t.toArray()
                                            }

                                            function B(t) {
                                                return t.toArray()
                                            }
                                            a.debounce = function() {
                                                if (I(arguments[0])) return L(this, arguments[0]);
                                                if ("number" == typeof arguments[0]) return new P(this, arguments[0], arguments[1]);
                                                throw new Error("Invalid arguments")
                                            }, a.windowWithTime = a.windowTime = function(t, e, r) {
                                                var n, i = this;
                                                return null == e && (n = t), T(r) || (r = p), "number" == typeof e ? n = e : T(e) && (n = t, r = e), new u((function(e) {
                                                    var o, s, a = n,
                                                        u = t,
                                                        c = [],
                                                        h = new b,
                                                        f = 0;
                                                    return o = new _(h), s = new v(o), c.push(new g), e.onNext(m(c[0], s)),
                                                        function t() {
                                                            var i = new d,
                                                                o = !1,
                                                                l = !1;
                                                            h.setDisposable(i), u === a ? (o = !0, l = !0) : u < a ? o = !0 : l = !0;
                                                            var p = o ? u : a,
                                                                b = p - f;
                                                            f = p, o && (u += n), l && (a += n), i.setDisposable(r.scheduleFuture(null, b, (function() {
                                                                if (l) {
                                                                    var r = new g;
                                                                    c.push(r), e.onNext(m(r, s))
                                                                }
                                                                o && c.shift().onCompleted(), t()
                                                            })))
                                                        }(), o.add(i.subscribe((function(t) {
                                                            for (var e = 0, r = c.length; e < r; e++) c[e].onNext(t)
                                                        }), (function(t) {
                                                            for (var r = 0, n = c.length; r < n; r++) c[r].onError(t);
                                                            e.onError(t)
                                                        }), (function() {
                                                            for (var t = 0, r = c.length; t < r; t++) c[t].onCompleted();
                                                            e.onCompleted()
                                                        }))), s
                                                }), i)
                                            }, a.windowWithTimeOrCount = a.windowTimeOrCount = function(t, e, r) {
                                                var n = this;
                                                return T(r) || (r = p), new u((function(i) {
                                                    var o = new b,
                                                        s = new _(o),
                                                        a = new v(s),
                                                        u = 0,
                                                        c = 0,
                                                        h = new g;

                                                    function f(e) {
                                                        var n = new d;
                                                        o.setDisposable(n), n.setDisposable(r.scheduleFuture(null, t, (function() {
                                                            if (e === c) {
                                                                u = 0;
                                                                var t = ++c;
                                                                h.onCompleted(), h = new g, i.onNext(m(h, a)), f(t)
                                                            }
                                                        })))
                                                    }
                                                    return i.onNext(m(h, a)), f(0), s.add(n.subscribe((function(t) {
                                                        var r = 0,
                                                            n = !1;
                                                        h.onNext(t), ++u === e && (n = !0, u = 0, r = ++c, h.onCompleted(), h = new g, i.onNext(m(h, a))), n && f(r)
                                                    }), (function(t) {
                                                        h.onError(t), i.onError(t)
                                                    }), (function() {
                                                        h.onCompleted(), i.onCompleted()
                                                    }))), a
                                                }), n)
                                            }, a.bufferWithTime = a.bufferTime = function(t, e, r) {
                                                return this.windowWithTime(t, e, r).flatMap(B)
                                            }, a.bufferWithTimeOrCount = a.bufferTimeOrCount = function(t, e, r) {
                                                return this.windowWithTimeOrCount(t, e, r).flatMap(B)
                                            };
                                            var j = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._s = r, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new q(t, this._s))
                                                    }, e
                                                }(c),
                                                q = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._s = r, this._l = r.now(), t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.next = function(t) {
                                                        var e = this._s.now(),
                                                            r = e - this._l;
                                                        this._l = e, this._o.onNext({
                                                            value: t,
                                                            interval: r
                                                        })
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(o);
                                            a.timeInterval = function(t) {
                                                return T(t) || (t = p), new j(this, t)
                                            };
                                            var z = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._s = r, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new K(t, this._s))
                                                    }, e
                                                }(c),
                                                K = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._s = r, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.next = function(t) {
                                                        this._o.onNext({
                                                            value: t,
                                                            timestamp: this._s.now()
                                                        })
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(o);
                                            a.timestamp = function(t) {
                                                return T(t) || (t = p), new z(this, t)
                                            };
                                            var V = function(t) {
                                                    function e(e, r) {
                                                        this.source = e, this._sampler = r, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.subscribeCore = function(t) {
                                                        var e = {
                                                            o: t,
                                                            atEnd: !1,
                                                            value: null,
                                                            hasValue: !1,
                                                            sourceSubscription: new d
                                                        };
                                                        return e.sourceSubscription.setDisposable(this.source.subscribe(new H(e))), new y(e.sourceSubscription, this._sampler.subscribe(new W(e)))
                                                    }, e
                                                }(c),
                                                W = function(t) {
                                                    function e(e) {
                                                        this._s = e, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype._handleMessage = function() {
                                                        this._s.hasValue && (this._s.hasValue = !1, this._s.o.onNext(this._s.value)), this._s.atEnd && this._s.o.onCompleted()
                                                    }, e.prototype.next = function() {
                                                        this._handleMessage()
                                                    }, e.prototype.error = function(t) {
                                                        this._s.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._handleMessage()
                                                    }, e
                                                }(o),
                                                H = function(t) {
                                                    function e(e) {
                                                        this._s = e, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.next = function(t) {
                                                        this._s.hasValue = !0, this._s.value = t
                                                    }, e.prototype.error = function(t) {
                                                        this._s.o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._s.atEnd = !0, this._s.sourceSubscription.dispose()
                                                    }, e
                                                }(o);
                                            a.sample = function(t, e) {
                                                return T(e) || (e = p), new V(this, "number" == typeof t ? R(t, e) : t)
                                            };
                                            var G = r.TimeoutError = function(t) {
                                                this.message = t || "Timeout has occurred", this.name = "TimeoutError", Error.call(this)
                                            };

                                            function Y(t, e, r, n) {
                                                return I(e) && (n = r, r = e, e = f()), s.isObservable(n) || (n = l(new G)), new u((function(i) {
                                                    var o = new b,
                                                        s = new b,
                                                        a = new d;
                                                    o.setDisposable(a);
                                                    var u = 0,
                                                        c = !1;

                                                    function h(t) {
                                                        var e = u,
                                                            r = new d;

                                                        function a() {
                                                            return c = e === u
                                                        }
                                                        s.setDisposable(r), r.setDisposable(t.subscribe((function() {
                                                            a() && o.setDisposable(n.subscribe(i)), r.dispose()
                                                        }), (function(t) {
                                                            a() && i.onError(t)
                                                        }), (function() {
                                                            a() && o.setDisposable(n.subscribe(i))
                                                        })))
                                                    }

                                                    function f() {
                                                        var t = !c;
                                                        return t && u++, t
                                                    }
                                                    return h(e), a.setDisposable(t.subscribe((function(t) {
                                                        if (f()) {
                                                            i.onNext(t);
                                                            var e = x(r)(t);
                                                            if (e === k) return i.onError(e.e);
                                                            h(S(e) ? C(e) : e)
                                                        }
                                                    }), (function(t) {
                                                        f() && i.onError(t)
                                                    }), (function() {
                                                        f() && i.onCompleted()
                                                    }))), new y(o, s)
                                                }), t)
                                            }

                                            function J(t, e, r, n) {
                                                return T(r) && (n = r, r = l(new G)), r instanceof Error && (r = l(r)), T(n) || (n = p), s.isObservable(r) || (r = l(new G)), new u((function(i) {
                                                    var o = 0,
                                                        s = new d,
                                                        a = new b,
                                                        u = !1,
                                                        c = new b;

                                                    function h() {
                                                        var t = o;
                                                        c.setDisposable(n.scheduleFuture(null, e, (function() {
                                                            (u = o === t) && (S(r) && (r = C(r)), a.setDisposable(r.subscribe(i)))
                                                        })))
                                                    }
                                                    return a.setDisposable(s), h(), s.setDisposable(t.subscribe((function(t) {
                                                        u || (o++, i.onNext(t), h())
                                                    }), (function(t) {
                                                        u || (o++, i.onError(t))
                                                    }), (function() {
                                                        u || (o++, i.onCompleted())
                                                    }))), new y(a, c)
                                                }), t)
                                            }
                                            G.prototype = Object.create(Error.prototype), a.timeout = function() {
                                                var t = arguments[0];
                                                if (t instanceof Date || "number" == typeof t) return J(this, t, arguments[1], arguments[2]);
                                                if (s.isObservable(t) || I(t)) return Y(this, t, arguments[1], arguments[2]);
                                                throw new Error("Invalid arguments")
                                            };
                                            var $ = function(t) {
                                                function e(e, r, n, i, o, s) {
                                                    this._state = e, this._cndFn = r, this._itrFn = n, this._resFn = i, this._timeFn = o, this._s = s, t.call(this)
                                                }

                                                function r(t, e) {
                                                    if (t.hasResult && t.o.onNext(t.result), t.first) t.first = !1;
                                                    else if (t.newState = x(t.self._itrFn)(t.newState), t.newState === k) return t.o.onError(t.newState.e);
                                                    if (t.hasResult = x(t.self._cndFn)(t.newState), t.hasResult === k) return t.o.onError(t.hasResult.e);
                                                    if (t.hasResult) {
                                                        if (t.result = x(t.self._resFn)(t.newState), t.result === k) return t.o.onError(t.result.e);
                                                        var r = x(t.self._timeFn)(t.newState);
                                                        if (r === k) return t.o.onError(r.e);
                                                        e(t, r)
                                                    } else t.o.onCompleted()
                                                }
                                                return i(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this._s.scheduleRecursiveFuture({
                                                        o: t,
                                                        self: this,
                                                        newState: this._state,
                                                        first: !0,
                                                        hasResult: !1
                                                    }, new Date(this._s.now()), r)
                                                }, e
                                            }(c);
                                            s.generateWithAbsoluteTime = function(t, e, r, n, i, o) {
                                                return T(o) || (o = p), new $(t, e, r, n, i, o)
                                            };
                                            var X = function(t) {
                                                function e(e, r, n, i, o, s) {
                                                    this._state = e, this._cndFn = r, this._itrFn = n, this._resFn = i, this._timeFn = o, this._s = s, t.call(this)
                                                }

                                                function r(t, e) {
                                                    if (t.hasResult && t.o.onNext(t.result), t.first) t.first = !1;
                                                    else if (t.newState = x(t.self._itrFn)(t.newState), t.newState === k) return t.o.onError(t.newState.e);
                                                    if (t.hasResult = x(t.self._cndFn)(t.newState), t.hasResult === k) return t.o.onError(t.hasResult.e);
                                                    if (t.hasResult) {
                                                        if (t.result = x(t.self._resFn)(t.newState), t.result === k) return t.o.onError(t.result.e);
                                                        var r = x(t.self._timeFn)(t.newState);
                                                        if (r === k) return t.o.onError(r.e);
                                                        e(t, r)
                                                    } else t.o.onCompleted()
                                                }
                                                return i(e, t), e.prototype.subscribeCore = function(t) {
                                                    return this._s.scheduleRecursiveFuture({
                                                        o: t,
                                                        self: this,
                                                        newState: this._state,
                                                        first: !0,
                                                        hasResult: !1
                                                    }, 0, r)
                                                }, e
                                            }(c);
                                            s.generateWithRelativeTime = function(t, e, r, n, i, o) {
                                                return T(o) || (o = p), new X(t, e, r, n, i, o)
                                            };
                                            var Q = function(t) {
                                                function e(e, r, n) {
                                                    this.source = e, this._dt = r, this._s = n, t.call(this)
                                                }

                                                function r(t, e) {
                                                    e[2].setDisposable(e[0].subscribe(e[1]))
                                                }
                                                return i(e, t), e.prototype.subscribeCore = function(t) {
                                                    var e = new b;
                                                    return e.setDisposable(this._s.scheduleFuture([this.source, t, e], this._dt, r)), e
                                                }, e
                                            }(c);
                                            a.delaySubscription = function(t, e) {
                                                return T(e) || (e = p), new Q(this, t, e)
                                            };
                                            var Z = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._d = r, this._s = n, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new tt(t, this))
                                                    }, e
                                                }(c),
                                                tt = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._s = r._s, this._d = r._d, this._q = [], t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.next = function(t) {
                                                        var e = this._s.now();
                                                        for (this._q.push({
                                                                interval: e,
                                                                value: t
                                                            }); this._q.length > 0 && e - this._q[0].interval >= this._d;) this._o.onNext(this._q.shift().value)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        for (var t = this._s.now(); this._q.length > 0 && t - this._q[0].interval >= this._d;) this._o.onNext(this._q.shift().value);
                                                        this._o.onCompleted()
                                                    }, e
                                                }(o);
                                            a.skipLastWithTime = function(t, e) {
                                                return T(e) || (e = p), new Z(this, t, e)
                                            };
                                            var et = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._d = r, this._s = n, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this.source.subscribe(new rt(t, this._d, this._s))
                                                    }, e
                                                }(c),
                                                rt = function(t) {
                                                    function e(e, r, n) {
                                                        this._o = e, this._d = r, this._s = n, this._q = [], t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.next = function(t) {
                                                        var e = this._s.now();
                                                        for (this._q.push({
                                                                interval: e,
                                                                value: t
                                                            }); this._q.length > 0 && e - this._q[0].interval >= this._d;) this._q.shift()
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        for (var t = this._s.now(); this._q.length > 0;) {
                                                            var e = this._q.shift();
                                                            t - e.interval <= this._d && this._o.onNext(e.value)
                                                        }
                                                        this._o.onCompleted()
                                                    }, e
                                                }(o);
                                            a.takeLastWithTime = function(t, e) {
                                                return T(e) || (e = p), new et(this, t, e)
                                            }, a.takeLastBufferWithTime = function(t, e) {
                                                var r = this;
                                                return T(e) || (e = p), new u((function(n) {
                                                    var i = [];
                                                    return r.subscribe((function(r) {
                                                        var n = e.now();
                                                        for (i.push({
                                                                interval: n,
                                                                value: r
                                                            }); i.length > 0 && n - i[0].interval >= t;) i.shift()
                                                    }), (function(t) {
                                                        n.onError(t)
                                                    }), (function() {
                                                        for (var r = e.now(), o = []; i.length > 0;) {
                                                            var s = i.shift();
                                                            r - s.interval <= t && o.push(s.value)
                                                        }
                                                        n.onNext(o), n.onCompleted()
                                                    }))
                                                }), r)
                                            };
                                            var nt = function(t) {
                                                function e(e, r, n) {
                                                    this.source = e, this._d = r, this._s = n, t.call(this)
                                                }

                                                function r(t, e) {
                                                    e.onCompleted()
                                                }
                                                return i(e, t), e.prototype.subscribeCore = function(t) {
                                                    return new y(this._s.scheduleFuture(t, this._d, r), this.source.subscribe(t))
                                                }, e
                                            }(c);
                                            a.takeWithTime = function(t, e) {
                                                return T(e) || (e = p), new nt(this, t, e)
                                            };
                                            var it = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._d = r, this._s = n, this._open = !1, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        e._open = !0
                                                    }
                                                    return i(e, t), e.prototype.subscribeCore = function(t) {
                                                        return new y(this._s.scheduleFuture(this, this._d, r), this.source.subscribe(new ot(t, this)))
                                                    }, e
                                                }(c),
                                                ot = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._p = r, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.next = function(t) {
                                                        this._p._open && this._o.onNext(t)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(o);
                                            a.skipWithTime = function(t, e) {
                                                return T(e) || (e = p), new it(this, t, e)
                                            };
                                            var st = function(t) {
                                                    function e(e, r, n) {
                                                        this.source = e, this._st = r, this._s = n, t.call(this)
                                                    }

                                                    function r(t, e) {
                                                        e._open = !0
                                                    }
                                                    return i(e, t), e.prototype.subscribeCore = function(t) {
                                                        return this._open = !1, new y(this._s.scheduleFuture(this, this._st, r), this.source.subscribe(new at(t, this)))
                                                    }, e
                                                }(c),
                                                at = function(t) {
                                                    function e(e, r) {
                                                        this._o = e, this._p = r, t.call(this)
                                                    }
                                                    return i(e, t), e.prototype.next = function(t) {
                                                        this._p._open && this._o.onNext(t)
                                                    }, e.prototype.error = function(t) {
                                                        this._o.onError(t)
                                                    }, e.prototype.completed = function() {
                                                        this._o.onCompleted()
                                                    }, e
                                                }(o);
                                            return a.skipUntilWithTime = function(t, e) {
                                                return T(e) || (e = p), new st(this, t, e)
                                            }, a.takeUntilWithTime = function(t, e) {
                                                T(e) || (e = p);
                                                var r = this;
                                                return new u((function(n) {
                                                    return new y(e.scheduleFuture(n, t, (function(t, e) {
                                                        e.onCompleted()
                                                    })), r.subscribe(n))
                                                }), r)
                                            }, a.throttle = function(t, e) {
                                                T(e) || (e = p);
                                                var r = +t || 0;
                                                if (r <= 0) throw new RangeError("windowDuration cannot be less or equal zero.");
                                                var n = this;
                                                return new u((function(t) {
                                                    var i = 0;
                                                    return n.subscribe((function(n) {
                                                        var o = e.now();
                                                        (0 === i || o - i >= r) && (i = o, t.onNext(n))
                                                    }), (function(e) {
                                                        t.onError(e)
                                                    }), (function() {
                                                        t.onCompleted()
                                                    }))
                                                }), n)
                                            }, r
                                        }))
                                    })), i),
                                    s = n((function(t, e) {
                                        t.exports = function() {
                                            var t = Array.prototype.slice;

                                            function e(t, e) {
                                                e && (t.prototype = Object.create(e.prototype)), t.prototype.constructor = t
                                            }

                                            function r(t) {
                                                return s(t) ? t : z(t)
                                            }

                                            function n(t) {
                                                return a(t) ? t : K(t)
                                            }

                                            function i(t) {
                                                return u(t) ? t : V(t)
                                            }

                                            function o(t) {
                                                return s(t) && !c(t) ? t : W(t)
                                            }

                                            function s(t) {
                                                return !(!t || !t[f])
                                            }

                                            function a(t) {
                                                return !(!t || !t[l])
                                            }

                                            function u(t) {
                                                return !(!t || !t[p])
                                            }

                                            function c(t) {
                                                return a(t) || u(t)
                                            }

                                            function h(t) {
                                                return !(!t || !t[d])
                                            }
                                            e(n, r), e(i, r), e(o, r), r.isIterable = s, r.isKeyed = a, r.isIndexed = u, r.isAssociative = c, r.isOrdered = h, r.Keyed = n, r.Indexed = i, r.Set = o;
                                            var f = "@@__IMMUTABLE_ITERABLE__@@",
                                                l = "@@__IMMUTABLE_KEYED__@@",
                                                p = "@@__IMMUTABLE_INDEXED__@@",
                                                d = "@@__IMMUTABLE_ORDERED__@@",
                                                b = {},
                                                _ = {
                                                    value: !1
                                                },
                                                y = {
                                                    value: !1
                                                };

                                            function v(t) {
                                                return t.value = !1, t
                                            }

                                            function g(t) {
                                                t && (t.value = !0)
                                            }

                                            function m() {}

                                            function w(t, e) {
                                                e = e || 0;
                                                for (var r = Math.max(0, t.length - e), n = new Array(r), i = 0; i < r; i++) n[i] = t[i + e];
                                                return n
                                            }

                                            function E(t) {
                                                return void 0 === t.size && (t.size = t.__iterate(I)), t.size
                                            }

                                            function S(t, e) {
                                                if ("number" != typeof e) {
                                                    var r = e >>> 0;
                                                    if ("" + r !== e || 4294967295 === r) return NaN;
                                                    e = r
                                                }
                                                return e < 0 ? E(t) + e : e
                                            }

                                            function I() {
                                                return !0
                                            }

                                            function T(t, e, r) {
                                                return (0 === t || void 0 !== r && t <= -r) && (void 0 === e || void 0 !== r && e >= r)
                                            }

                                            function C(t, e) {
                                                return x(t, e, 0)
                                            }

                                            function k(t, e) {
                                                return x(t, e, e)
                                            }

                                            function x(t, e, r) {
                                                return void 0 === t ? r : t < 0 ? Math.max(0, e + t) : void 0 === e ? t : Math.min(e, t)
                                            }
                                            var A, O, D, R = "function" == typeof Symbol && Symbol.iterator,
                                                N = R || "@@iterator";

                                            function M(t) {
                                                this.next = t
                                            }

                                            function F(t, e, r, n) {
                                                var i = 0 === t ? e : 1 === t ? r : [e, r];
                                                return n ? n.value = i : n = {
                                                    value: i,
                                                    done: !1
                                                }, n
                                            }

                                            function P() {
                                                return {
                                                    value: void 0,
                                                    done: !0
                                                }
                                            }

                                            function U(t) {
                                                return !!j(t)
                                            }

                                            function L(t) {
                                                return t && "function" == typeof t.next
                                            }

                                            function B(t) {
                                                var e = j(t);
                                                return e && e.call(t)
                                            }

                                            function j(t) {
                                                var e = t && (R && t[R] || t["@@iterator"]);
                                                if ("function" == typeof e) return e
                                            }

                                            function q(t) {
                                                return t && "number" == typeof t.length
                                            }

                                            function z(t) {
                                                return null == t ? X() : s(t) ? t.toSeq() : function(t) {
                                                    var e = tt(t) || "object" == typeof t && new G(t);
                                                    if (!e) throw new TypeError("Expected Array or iterable object of values, or keyed object: " + t);
                                                    return e
                                                }(t)
                                            }

                                            function K(t) {
                                                return null == t ? X().toKeyedSeq() : s(t) ? a(t) ? t.toSeq() : t.fromEntrySeq() : Q(t)
                                            }

                                            function V(t) {
                                                return null == t ? X() : s(t) ? a(t) ? t.entrySeq() : t.toIndexedSeq() : Z(t)
                                            }

                                            function W(t) {
                                                return (null == t ? X() : s(t) ? a(t) ? t.entrySeq() : t : Z(t)).toSetSeq()
                                            }

                                            function H(t) {
                                                this._array = t, this.size = t.length
                                            }

                                            function G(t) {
                                                var e = Object.keys(t);
                                                this._object = t, this._keys = e, this.size = e.length
                                            }

                                            function Y(t) {
                                                this._iterable = t, this.size = t.length || t.size
                                            }

                                            function J(t) {
                                                this._iterator = t, this._iteratorCache = []
                                            }

                                            function $(t) {
                                                return !(!t || !t["@@__IMMUTABLE_SEQ__@@"])
                                            }

                                            function X() {
                                                return A || (A = new H([]))
                                            }

                                            function Q(t) {
                                                var e = Array.isArray(t) ? new H(t).fromEntrySeq() : L(t) ? new J(t).fromEntrySeq() : U(t) ? new Y(t).fromEntrySeq() : "object" == typeof t ? new G(t) : void 0;
                                                if (!e) throw new TypeError("Expected Array or iterable object of [k, v] entries, or keyed object: " + t);
                                                return e
                                            }

                                            function Z(t) {
                                                var e = tt(t);
                                                if (!e) throw new TypeError("Expected Array or iterable object of values: " + t);
                                                return e
                                            }

                                            function tt(t) {
                                                return q(t) ? new H(t) : L(t) ? new J(t) : U(t) ? new Y(t) : void 0
                                            }

                                            function et(t, e, r, n) {
                                                var i = t._cache;
                                                if (i) {
                                                    for (var o = i.length - 1, s = 0; s <= o; s++) {
                                                        var a = i[r ? o - s : s];
                                                        if (!1 === e(a[1], n ? a[0] : s, t)) return s + 1
                                                    }
                                                    return s
                                                }
                                                return t.__iterateUncached(e, r)
                                            }

                                            function rt(t, e, r, n) {
                                                var i = t._cache;
                                                if (i) {
                                                    var o = i.length - 1,
                                                        s = 0;
                                                    return new M((function() {
                                                        var t = i[r ? o - s : s];
                                                        return s++ > o ? {
                                                            value: void 0,
                                                            done: !0
                                                        } : F(e, n ? t[0] : s - 1, t[1])
                                                    }))
                                                }
                                                return t.__iteratorUncached(e, r)
                                            }

                                            function nt(t, e) {
                                                return e ? function t(e, r, n, i) {
                                                    return Array.isArray(r) ? e.call(i, n, V(r).map((function(n, i) {
                                                        return t(e, n, i, r)
                                                    }))) : ot(r) ? e.call(i, n, K(r).map((function(n, i) {
                                                        return t(e, n, i, r)
                                                    }))) : r
                                                }(e, t, "", {
                                                    "": t
                                                }) : it(t)
                                            }

                                            function it(t) {
                                                return Array.isArray(t) ? V(t).map(it).toList() : ot(t) ? K(t).map(it).toMap() : t
                                            }

                                            function ot(t) {
                                                return t && (t.constructor === Object || void 0 === t.constructor)
                                            }

                                            function st(t, e) {
                                                if (t === e || t != t && e != e) return !0;
                                                if (!t || !e) return !1;
                                                if ("function" == typeof t.valueOf && "function" == typeof e.valueOf) {
                                                    if ((t = t.valueOf()) === (e = e.valueOf()) || t != t && e != e) return !0;
                                                    if (!t || !e) return !1
                                                }
                                                return !("function" != typeof t.equals || "function" != typeof e.equals || !t.equals(e))
                                            }

                                            function at(t, e) {
                                                if (t === e) return !0;
                                                if (!s(e) || void 0 !== t.size && void 0 !== e.size && t.size !== e.size || void 0 !== t.__hash && void 0 !== e.__hash && t.__hash !== e.__hash || a(t) !== a(e) || u(t) !== u(e) || h(t) !== h(e)) return !1;
                                                if (0 === t.size && 0 === e.size) return !0;
                                                var r = !c(t);
                                                if (h(t)) {
                                                    var n = t.entries();
                                                    return e.every((function(t, e) {
                                                        var i = n.next().value;
                                                        return i && st(i[1], t) && (r || st(i[0], e))
                                                    })) && n.next().done
                                                }
                                                var i = !1;
                                                if (void 0 === t.size)
                                                    if (void 0 === e.size) "function" == typeof t.cacheResult && t.cacheResult();
                                                    else {
                                                        i = !0;
                                                        var o = t;
                                                        t = e, e = o
                                                    } var f = !0,
                                                    l = e.__iterate((function(e, n) {
                                                        if (r ? !t.has(e) : i ? !st(e, t.get(n, b)) : !st(t.get(n, b), e)) return f = !1, !1
                                                    }));
                                                return f && t.size === l
                                            }

                                            function ut(t, e) {
                                                if (!(this instanceof ut)) return new ut(t, e);
                                                if (this._value = t, this.size = void 0 === e ? 1 / 0 : Math.max(0, e), 0 === this.size) {
                                                    if (O) return O;
                                                    O = this
                                                }
                                            }

                                            function ct(t, e) {
                                                if (!t) throw new Error(e)
                                            }

                                            function ht(t, e, r) {
                                                if (!(this instanceof ht)) return new ht(t, e, r);
                                                if (ct(0 !== r, "Cannot step a Range by 0"), t = t || 0, void 0 === e && (e = 1 / 0), r = void 0 === r ? 1 : Math.abs(r), e < t && (r = -r), this._start = t, this._end = e, this._step = r, this.size = Math.max(0, Math.ceil((e - t) / r - 1) + 1), 0 === this.size) {
                                                    if (D) return D;
                                                    D = this
                                                }
                                            }

                                            function ft() {
                                                throw TypeError("Abstract")
                                            }

                                            function lt() {}

                                            function pt() {}

                                            function dt() {}
                                            M.prototype.toString = function() {
                                                return "[Iterator]"
                                            }, M.KEYS = 0, M.VALUES = 1, M.ENTRIES = 2, M.prototype.inspect = M.prototype.toSource = function() {
                                                return this.toString()
                                            }, M.prototype[N] = function() {
                                                return this
                                            }, e(z, r), z.of = function() {
                                                return z(arguments)
                                            }, z.prototype.toSeq = function() {
                                                return this
                                            }, z.prototype.toString = function() {
                                                return this.__toString("Seq {", "}")
                                            }, z.prototype.cacheResult = function() {
                                                return !this._cache && this.__iterateUncached && (this._cache = this.entrySeq().toArray(), this.size = this._cache.length), this
                                            }, z.prototype.__iterate = function(t, e) {
                                                return et(this, t, e, !0)
                                            }, z.prototype.__iterator = function(t, e) {
                                                return rt(this, t, e, !0)
                                            }, e(K, z), K.prototype.toKeyedSeq = function() {
                                                return this
                                            }, e(V, z), V.of = function() {
                                                return V(arguments)
                                            }, V.prototype.toIndexedSeq = function() {
                                                return this
                                            }, V.prototype.toString = function() {
                                                return this.__toString("Seq [", "]")
                                            }, V.prototype.__iterate = function(t, e) {
                                                return et(this, t, e, !1)
                                            }, V.prototype.__iterator = function(t, e) {
                                                return rt(this, t, e, !1)
                                            }, e(W, z), W.of = function() {
                                                return W(arguments)
                                            }, W.prototype.toSetSeq = function() {
                                                return this
                                            }, z.isSeq = $, z.Keyed = K, z.Set = W, z.Indexed = V, z.prototype["@@__IMMUTABLE_SEQ__@@"] = !0, e(H, V), H.prototype.get = function(t, e) {
                                                return this.has(t) ? this._array[S(this, t)] : e
                                            }, H.prototype.__iterate = function(t, e) {
                                                for (var r = this._array, n = r.length - 1, i = 0; i <= n; i++)
                                                    if (!1 === t(r[e ? n - i : i], i, this)) return i + 1;
                                                return i
                                            }, H.prototype.__iterator = function(t, e) {
                                                var r = this._array,
                                                    n = r.length - 1,
                                                    i = 0;
                                                return new M((function() {
                                                    return i > n ? {
                                                        value: void 0,
                                                        done: !0
                                                    } : F(t, i, r[e ? n - i++ : i++])
                                                }))
                                            }, e(G, K), G.prototype.get = function(t, e) {
                                                return void 0 === e || this.has(t) ? this._object[t] : e
                                            }, G.prototype.has = function(t) {
                                                return this._object.hasOwnProperty(t)
                                            }, G.prototype.__iterate = function(t, e) {
                                                for (var r = this._object, n = this._keys, i = n.length - 1, o = 0; o <= i; o++) {
                                                    var s = n[e ? i - o : o];
                                                    if (!1 === t(r[s], s, this)) return o + 1
                                                }
                                                return o
                                            }, G.prototype.__iterator = function(t, e) {
                                                var r = this._object,
                                                    n = this._keys,
                                                    i = n.length - 1,
                                                    o = 0;
                                                return new M((function() {
                                                    var s = n[e ? i - o : o];
                                                    return o++ > i ? {
                                                        value: void 0,
                                                        done: !0
                                                    } : F(t, s, r[s])
                                                }))
                                            }, G.prototype[d] = !0, e(Y, V), Y.prototype.__iterateUncached = function(t, e) {
                                                if (e) return this.cacheResult().__iterate(t, e);
                                                var r = B(this._iterable),
                                                    n = 0;
                                                if (L(r))
                                                    for (var i; !(i = r.next()).done && !1 !== t(i.value, n++, this););
                                                return n
                                            }, Y.prototype.__iteratorUncached = function(t, e) {
                                                if (e) return this.cacheResult().__iterator(t, e);
                                                var r = B(this._iterable);
                                                if (!L(r)) return new M(P);
                                                var n = 0;
                                                return new M((function() {
                                                    var e = r.next();
                                                    return e.done ? e : F(t, n++, e.value)
                                                }))
                                            }, e(J, V), J.prototype.__iterateUncached = function(t, e) {
                                                if (e) return this.cacheResult().__iterate(t, e);
                                                for (var r, n = this._iterator, i = this._iteratorCache, o = 0; o < i.length;)
                                                    if (!1 === t(i[o], o++, this)) return o;
                                                for (; !(r = n.next()).done;) {
                                                    var s = r.value;
                                                    if (i[o] = s, !1 === t(s, o++, this)) break
                                                }
                                                return o
                                            }, J.prototype.__iteratorUncached = function(t, e) {
                                                if (e) return this.cacheResult().__iterator(t, e);
                                                var r = this._iterator,
                                                    n = this._iteratorCache,
                                                    i = 0;
                                                return new M((function() {
                                                    if (i >= n.length) {
                                                        var e = r.next();
                                                        if (e.done) return e;
                                                        n[i] = e.value
                                                    }
                                                    return F(t, i, n[i++])
                                                }))
                                            }, e(ut, V), ut.prototype.toString = function() {
                                                return 0 === this.size ? "Repeat []" : "Repeat [ " + this._value + " " + this.size + " times ]"
                                            }, ut.prototype.get = function(t, e) {
                                                return this.has(t) ? this._value : e
                                            }, ut.prototype.includes = function(t) {
                                                return st(this._value, t)
                                            }, ut.prototype.slice = function(t, e) {
                                                var r = this.size;
                                                return T(t, e, r) ? this : new ut(this._value, k(e, r) - C(t, r))
                                            }, ut.prototype.reverse = function() {
                                                return this
                                            }, ut.prototype.indexOf = function(t) {
                                                return st(this._value, t) ? 0 : -1
                                            }, ut.prototype.lastIndexOf = function(t) {
                                                return st(this._value, t) ? this.size : -1
                                            }, ut.prototype.__iterate = function(t, e) {
                                                for (var r = 0; r < this.size; r++)
                                                    if (!1 === t(this._value, r, this)) return r + 1;
                                                return r
                                            }, ut.prototype.__iterator = function(t, e) {
                                                var r = this,
                                                    n = 0;
                                                return new M((function() {
                                                    return n < r.size ? F(t, n++, r._value) : {
                                                        value: void 0,
                                                        done: !0
                                                    }
                                                }))
                                            }, ut.prototype.equals = function(t) {
                                                return t instanceof ut ? st(this._value, t._value) : at(t)
                                            }, e(ht, V), ht.prototype.toString = function() {
                                                return 0 === this.size ? "Range []" : "Range [ " + this._start + "..." + this._end + (1 !== this._step ? " by " + this._step : "") + " ]"
                                            }, ht.prototype.get = function(t, e) {
                                                return this.has(t) ? this._start + S(this, t) * this._step : e
                                            }, ht.prototype.includes = function(t) {
                                                var e = (t - this._start) / this._step;
                                                return e >= 0 && e < this.size && e === Math.floor(e)
                                            }, ht.prototype.slice = function(t, e) {
                                                return T(t, e, this.size) ? this : (t = C(t, this.size), (e = k(e, this.size)) <= t ? new ht(0, 0) : new ht(this.get(t, this._end), this.get(e, this._end), this._step))
                                            }, ht.prototype.indexOf = function(t) {
                                                var e = t - this._start;
                                                if (e % this._step == 0) {
                                                    var r = e / this._step;
                                                    if (r >= 0 && r < this.size) return r
                                                }
                                                return -1
                                            }, ht.prototype.lastIndexOf = function(t) {
                                                return this.indexOf(t)
                                            }, ht.prototype.__iterate = function(t, e) {
                                                for (var r = this.size - 1, n = this._step, i = e ? this._start + r * n : this._start, o = 0; o <= r; o++) {
                                                    if (!1 === t(i, o, this)) return o + 1;
                                                    i += e ? -n : n
                                                }
                                                return o
                                            }, ht.prototype.__iterator = function(t, e) {
                                                var r = this.size - 1,
                                                    n = this._step,
                                                    i = e ? this._start + r * n : this._start,
                                                    o = 0;
                                                return new M((function() {
                                                    var s = i;
                                                    return i += e ? -n : n, o > r ? {
                                                        value: void 0,
                                                        done: !0
                                                    } : F(t, o++, s)
                                                }))
                                            }, ht.prototype.equals = function(t) {
                                                return t instanceof ht ? this._start === t._start && this._end === t._end && this._step === t._step : at(this, t)
                                            }, e(ft, r), e(lt, ft), e(pt, ft), e(dt, ft), ft.Keyed = lt, ft.Indexed = pt, ft.Set = dt;
                                            var bt = "function" == typeof Math.imul && -2 === Math.imul(4294967295, 2) ? Math.imul : function(t, e) {
                                                var r = 65535 & (t |= 0),
                                                    n = 65535 & (e |= 0);
                                                return r * n + ((t >>> 16) * n + r * (e >>> 16) << 16 >>> 0) | 0
                                            };

                                            function _t(t) {
                                                return t >>> 1 & 1073741824 | 3221225471 & t
                                            }

                                            function yt(t) {
                                                if (!1 === t || null == t) return 0;
                                                if ("function" == typeof t.valueOf && (!1 === (t = t.valueOf()) || null == t)) return 0;
                                                if (!0 === t) return 1;
                                                var e = typeof t;
                                                if ("number" === e) {
                                                    if (t != t || 1 / 0 === t) return 0;
                                                    var r = 0 | t;
                                                    for (r !== t && (r ^= 4294967295 * t); t > 4294967295;) r ^= t /= 4294967295;
                                                    return _t(r)
                                                }
                                                if ("string" === e) return t.length > Tt ? function(t) {
                                                    var e = xt[t];
                                                    return void 0 === e && (e = vt(t), kt === Ct && (kt = 0, xt = {}), kt++, xt[t] = e), e
                                                }(t) : vt(t);
                                                if ("function" == typeof t.hashCode) return t.hashCode();
                                                if ("object" === e) return function(t) {
                                                    var e;
                                                    if (Et && void 0 !== (e = gt.get(t))) return e;
                                                    if (void 0 !== (e = t[It])) return e;
                                                    if (!wt) {
                                                        if (void 0 !== (e = t.propertyIsEnumerable && t.propertyIsEnumerable[It])) return e;
                                                        if (void 0 !== (e = function(t) {
                                                                if (t && t.nodeType > 0) switch (t.nodeType) {
                                                                    case 1:
                                                                        return t.uniqueID;
                                                                    case 9:
                                                                        return t.documentElement && t.documentElement.uniqueID
                                                                }
                                                            }(t))) return e
                                                    }
                                                    if (e = ++St, 1073741824 & St && (St = 0), Et) gt.set(t, e);
                                                    else {
                                                        if (void 0 !== mt && !1 === mt(t)) throw new Error("Non-extensible objects are not allowed as keys.");
                                                        if (wt) Object.defineProperty(t, It, {
                                                            enumerable: !1,
                                                            configurable: !1,
                                                            writable: !1,
                                                            value: e
                                                        });
                                                        else if (void 0 !== t.propertyIsEnumerable && t.propertyIsEnumerable === t.constructor.prototype.propertyIsEnumerable) t.propertyIsEnumerable = function() {
                                                            return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments)
                                                        }, t.propertyIsEnumerable[It] = e;
                                                        else {
                                                            if (void 0 === t.nodeType) throw new Error("Unable to set a non-enumerable property on object.");
                                                            t[It] = e
                                                        }
                                                    }
                                                    return e
                                                }(t);
                                                if ("function" == typeof t.toString) return vt(t.toString());
                                                throw new Error("Value type " + e + " cannot be hashed.")
                                            }

                                            function vt(t) {
                                                for (var e = 0, r = 0; r < t.length; r++) e = 31 * e + t.charCodeAt(r) | 0;
                                                return _t(e)
                                            }
                                            var gt, mt = Object.isExtensible,
                                                wt = function() {
                                                    try {
                                                        return Object.defineProperty({}, "@", {}), !0
                                                    } catch (t) {
                                                        return !1
                                                    }
                                                }(),
                                                Et = "function" == typeof WeakMap;
                                            Et && (gt = new WeakMap);
                                            var St = 0,
                                                It = "__immutablehash__";
                                            "function" == typeof Symbol && (It = Symbol(It));
                                            var Tt = 16,
                                                Ct = 255,
                                                kt = 0,
                                                xt = {};

                                            function At(t) {
                                                ct(1 / 0 !== t, "Cannot perform this action with an infinite size.")
                                            }

                                            function Ot(t) {
                                                return null == t ? Vt() : Dt(t) && !h(t) ? t : Vt().withMutations((function(e) {
                                                    var r = n(t);
                                                    At(r.size), r.forEach((function(t, r) {
                                                        return e.set(r, t)
                                                    }))
                                                }))
                                            }

                                            function Dt(t) {
                                                return !(!t || !t[Nt])
                                            }
                                            e(Ot, lt), Ot.of = function() {
                                                var e = t.call(arguments, 0);
                                                return Vt().withMutations((function(t) {
                                                    for (var r = 0; r < e.length; r += 2) {
                                                        if (r + 1 >= e.length) throw new Error("Missing value for key: " + e[r]);
                                                        t.set(e[r], e[r + 1])
                                                    }
                                                }))
                                            }, Ot.prototype.toString = function() {
                                                return this.__toString("Map {", "}")
                                            }, Ot.prototype.get = function(t, e) {
                                                return this._root ? this._root.get(0, void 0, t, e) : e
                                            }, Ot.prototype.set = function(t, e) {
                                                return Wt(this, t, e)
                                            }, Ot.prototype.setIn = function(t, e) {
                                                return this.updateIn(t, b, (function() {
                                                    return e
                                                }))
                                            }, Ot.prototype.remove = function(t) {
                                                return Wt(this, t, b)
                                            }, Ot.prototype.deleteIn = function(t) {
                                                return this.updateIn(t, (function() {
                                                    return b
                                                }))
                                            }, Ot.prototype.update = function(t, e, r) {
                                                return 1 === arguments.length ? t(this) : this.updateIn([t], e, r)
                                            }, Ot.prototype.updateIn = function(t, e, r) {
                                                r || (r = e, e = void 0);
                                                var n = function t(e, r, n, i) {
                                                    var o = e === b,
                                                        s = r.next();
                                                    if (s.done) {
                                                        var a = o ? n : e,
                                                            u = i(a);
                                                        return u === a ? e : u
                                                    }
                                                    ct(o || e && e.set, "invalid keyPath");
                                                    var c = s.value,
                                                        h = o ? b : e.get(c, b),
                                                        f = t(h, r, n, i);
                                                    return f === h ? e : f === b ? e.remove(c) : (o ? Vt() : e).set(c, f)
                                                }(this, Je(t), e, r);
                                                return n === b ? void 0 : n
                                            }, Ot.prototype.clear = function() {
                                                return 0 === this.size ? this : this.__ownerID ? (this.size = 0, this._root = null, this.__hash = void 0, this.__altered = !0, this) : Vt()
                                            }, Ot.prototype.merge = function() {
                                                return Jt(this, void 0, arguments)
                                            }, Ot.prototype.mergeWith = function(e) {
                                                var r = t.call(arguments, 1);
                                                return Jt(this, e, r)
                                            }, Ot.prototype.mergeIn = function(e) {
                                                var r = t.call(arguments, 1);
                                                return this.updateIn(e, Vt(), (function(t) {
                                                    return "function" == typeof t.merge ? t.merge.apply(t, r) : r[r.length - 1]
                                                }))
                                            }, Ot.prototype.mergeDeep = function() {
                                                return Jt(this, $t, arguments)
                                            }, Ot.prototype.mergeDeepWith = function(e) {
                                                var r = t.call(arguments, 1);
                                                return Jt(this, Xt(e), r)
                                            }, Ot.prototype.mergeDeepIn = function(e) {
                                                var r = t.call(arguments, 1);
                                                return this.updateIn(e, Vt(), (function(t) {
                                                    return "function" == typeof t.mergeDeep ? t.mergeDeep.apply(t, r) : r[r.length - 1]
                                                }))
                                            }, Ot.prototype.sort = function(t) {
                                                return we(Le(this, t))
                                            }, Ot.prototype.sortBy = function(t, e) {
                                                return we(Le(this, e, t))
                                            }, Ot.prototype.withMutations = function(t) {
                                                var e = this.asMutable();
                                                return t(e), e.wasAltered() ? e.__ensureOwner(this.__ownerID) : this
                                            }, Ot.prototype.asMutable = function() {
                                                return this.__ownerID ? this : this.__ensureOwner(new m)
                                            }, Ot.prototype.asImmutable = function() {
                                                return this.__ensureOwner()
                                            }, Ot.prototype.wasAltered = function() {
                                                return this.__altered
                                            }, Ot.prototype.__iterator = function(t, e) {
                                                return new jt(this, t, e)
                                            }, Ot.prototype.__iterate = function(t, e) {
                                                var r = this,
                                                    n = 0;
                                                return this._root && this._root.iterate((function(e) {
                                                    return n++, t(e[1], e[0], r)
                                                }), e), n
                                            }, Ot.prototype.__ensureOwner = function(t) {
                                                return t === this.__ownerID ? this : t ? Kt(this.size, this._root, t, this.__hash) : (this.__ownerID = t, this.__altered = !1, this)
                                            }, Ot.isMap = Dt;
                                            var Rt, Nt = "@@__IMMUTABLE_MAP__@@",
                                                Mt = Ot.prototype;

                                            function Ft(t, e) {
                                                this.ownerID = t, this.entries = e
                                            }

                                            function Pt(t, e, r) {
                                                this.ownerID = t, this.bitmap = e, this.nodes = r
                                            }

                                            function Ut(t, e, r) {
                                                this.ownerID = t, this.count = e, this.nodes = r
                                            }

                                            function Lt(t, e, r) {
                                                this.ownerID = t, this.keyHash = e, this.entries = r
                                            }

                                            function Bt(t, e, r) {
                                                this.ownerID = t, this.keyHash = e, this.entry = r
                                            }

                                            function jt(t, e, r) {
                                                this._type = e, this._reverse = r, this._stack = t._root && zt(t._root)
                                            }

                                            function qt(t, e) {
                                                return F(t, e[0], e[1])
                                            }

                                            function zt(t, e) {
                                                return {
                                                    node: t,
                                                    index: 0,
                                                    __prev: e
                                                }
                                            }

                                            function Kt(t, e, r, n) {
                                                var i = Object.create(Mt);
                                                return i.size = t, i._root = e, i.__ownerID = r, i.__hash = n, i.__altered = !1, i
                                            }

                                            function Vt() {
                                                return Rt || (Rt = Kt(0))
                                            }

                                            function Wt(t, e, r) {
                                                var n, i;
                                                if (t._root) {
                                                    var o = v(_),
                                                        s = v(y);
                                                    if (n = Ht(t._root, t.__ownerID, 0, void 0, e, r, o, s), !s.value) return t;
                                                    i = t.size + (o.value ? r === b ? -1 : 1 : 0)
                                                } else {
                                                    if (r === b) return t;
                                                    i = 1, n = new Ft(t.__ownerID, [
                                                        [e, r]
                                                    ])
                                                }
                                                return t.__ownerID ? (t.size = i, t._root = n, t.__hash = void 0, t.__altered = !0, t) : n ? Kt(i, n) : Vt()
                                            }

                                            function Ht(t, e, r, n, i, o, s, a) {
                                                return t ? t.update(e, r, n, i, o, s, a) : o === b ? t : (g(a), g(s), new Bt(e, n, [i, o]))
                                            }

                                            function Gt(t) {
                                                return t.constructor === Bt || t.constructor === Lt
                                            }

                                            function Yt(t, e, r, n, i) {
                                                if (t.keyHash === n) return new Lt(e, n, [t.entry, i]);
                                                var o, s = 31 & (0 === r ? t.keyHash : t.keyHash >>> r),
                                                    a = 31 & (0 === r ? n : n >>> r);
                                                return new Pt(e, 1 << s | 1 << a, s === a ? [Yt(t, e, r + 5, n, i)] : (o = new Bt(e, n, i), s < a ? [t, o] : [o, t]))
                                            }

                                            function Jt(t, e, r) {
                                                for (var i = [], o = 0; o < r.length; o++) {
                                                    var a = r[o],
                                                        u = n(a);
                                                    s(a) || (u = u.map((function(t) {
                                                        return nt(t)
                                                    }))), i.push(u)
                                                }
                                                return Qt(t, e, i)
                                            }

                                            function $t(t, e, r) {
                                                return t && t.mergeDeep && s(e) ? t.mergeDeep(e) : st(t, e) ? t : e
                                            }

                                            function Xt(t) {
                                                return function(e, r, n) {
                                                    if (e && e.mergeDeepWith && s(r)) return e.mergeDeepWith(t, r);
                                                    var i = t(e, r, n);
                                                    return st(e, i) ? e : i
                                                }
                                            }

                                            function Qt(t, e, r) {
                                                return 0 === (r = r.filter((function(t) {
                                                    return 0 !== t.size
                                                }))).length ? t : 0 !== t.size || t.__ownerID || 1 !== r.length ? t.withMutations((function(t) {
                                                    for (var n = e ? function(r, n) {
                                                            t.update(n, b, (function(t) {
                                                                return t === b ? r : e(t, r, n)
                                                            }))
                                                        } : function(e, r) {
                                                            t.set(r, e)
                                                        }, i = 0; i < r.length; i++) r[i].forEach(n)
                                                })) : t.constructor(r[0])
                                            }

                                            function Zt(t) {
                                                return t = (t = (858993459 & (t -= t >> 1 & 1431655765)) + (t >> 2 & 858993459)) + (t >> 4) & 252645135, 127 & (t += t >> 8) + (t >> 16)
                                            }

                                            function te(t, e, r, n) {
                                                var i = n ? t : w(t);
                                                return i[e] = r, i
                                            }
                                            Mt[Nt] = !0, Mt.delete = Mt.remove, Mt.removeIn = Mt.deleteIn, Ft.prototype.get = function(t, e, r, n) {
                                                for (var i = this.entries, o = 0, s = i.length; o < s; o++)
                                                    if (st(r, i[o][0])) return i[o][1];
                                                return n
                                            }, Ft.prototype.update = function(t, e, r, n, i, o, s) {
                                                for (var a = i === b, u = this.entries, c = 0, h = u.length; c < h && !st(n, u[c][0]); c++);
                                                var f = c < h;
                                                if (f ? u[c][1] === i : a) return this;
                                                if (g(s), (a || !f) && g(o), !a || 1 !== u.length) {
                                                    if (!f && !a && u.length >= ee) return function(t, e, r, n) {
                                                        t || (t = new m);
                                                        for (var i = new Bt(t, yt(r), [r, n]), o = 0; o < e.length; o++) {
                                                            var s = e[o];
                                                            i = i.update(t, 0, void 0, s[0], s[1])
                                                        }
                                                        return i
                                                    }(t, u, n, i);
                                                    var l = t && t === this.ownerID,
                                                        p = l ? u : w(u);
                                                    return f ? a ? c === h - 1 ? p.pop() : p[c] = p.pop() : p[c] = [n, i] : p.push([n, i]), l ? (this.entries = p, this) : new Ft(t, p)
                                                }
                                            }, Pt.prototype.get = function(t, e, r, n) {
                                                void 0 === e && (e = yt(r));
                                                var i = 1 << (31 & (0 === t ? e : e >>> t)),
                                                    o = this.bitmap;
                                                return 0 == (o & i) ? n : this.nodes[Zt(o & i - 1)].get(t + 5, e, r, n)
                                            }, Pt.prototype.update = function(t, e, r, n, i, o, s) {
                                                void 0 === r && (r = yt(n));
                                                var a = 31 & (0 === e ? r : r >>> e),
                                                    u = 1 << a,
                                                    c = this.bitmap,
                                                    h = 0 != (c & u);
                                                if (!h && i === b) return this;
                                                var f = Zt(c & u - 1),
                                                    l = this.nodes,
                                                    p = h ? l[f] : void 0,
                                                    d = Ht(p, t, e + 5, r, n, i, o, s);
                                                if (d === p) return this;
                                                if (!h && d && l.length >= re) return function(t, e, r, n, i) {
                                                    for (var o = 0, s = new Array(32), a = 0; 0 !== r; a++, r >>>= 1) s[a] = 1 & r ? e[o++] : void 0;
                                                    return s[n] = i, new Ut(t, o + 1, s)
                                                }(t, l, c, a, d);
                                                if (h && !d && 2 === l.length && Gt(l[1 ^ f])) return l[1 ^ f];
                                                if (h && d && 1 === l.length && Gt(d)) return d;
                                                var _ = t && t === this.ownerID,
                                                    y = h ? d ? c : c ^ u : c | u,
                                                    v = h ? d ? te(l, f, d, _) : function(t, e, r) {
                                                        var n = t.length - 1;
                                                        if (r && e === n) return t.pop(), t;
                                                        for (var i = new Array(n), o = 0, s = 0; s < n; s++) s === e && (o = 1), i[s] = t[s + o];
                                                        return i
                                                    }(l, f, _) : function(t, e, r, n) {
                                                        var i = t.length + 1;
                                                        if (n && e + 1 === i) return t[e] = r, t;
                                                        for (var o = new Array(i), s = 0, a = 0; a < i; a++) a === e ? (o[a] = r, s = -1) : o[a] = t[a + s];
                                                        return o
                                                    }(l, f, d, _);
                                                return _ ? (this.bitmap = y, this.nodes = v, this) : new Pt(t, y, v)
                                            }, Ut.prototype.get = function(t, e, r, n) {
                                                void 0 === e && (e = yt(r));
                                                var i = this.nodes[31 & (0 === t ? e : e >>> t)];
                                                return i ? i.get(t + 5, e, r, n) : n
                                            }, Ut.prototype.update = function(t, e, r, n, i, o, s) {
                                                void 0 === r && (r = yt(n));
                                                var a = 31 & (0 === e ? r : r >>> e),
                                                    u = this.nodes,
                                                    c = u[a];
                                                if (i === b && !c) return this;
                                                var h = Ht(c, t, e + 5, r, n, i, o, s);
                                                if (h === c) return this;
                                                var f = this.count;
                                                if (c) {
                                                    if (!h && --f < ne) return function(t, e, r, n) {
                                                        for (var i = 0, o = 0, s = new Array(r), a = 0, u = 1, c = e.length; a < c; a++, u <<= 1) {
                                                            var h = e[a];
                                                            void 0 !== h && a !== n && (i |= u, s[o++] = h)
                                                        }
                                                        return new Pt(t, i, s)
                                                    }(t, u, f, a)
                                                } else f++;
                                                var l = t && t === this.ownerID,
                                                    p = te(u, a, h, l);
                                                return l ? (this.count = f, this.nodes = p, this) : new Ut(t, f, p)
                                            }, Lt.prototype.get = function(t, e, r, n) {
                                                for (var i = this.entries, o = 0, s = i.length; o < s; o++)
                                                    if (st(r, i[o][0])) return i[o][1];
                                                return n
                                            }, Lt.prototype.update = function(t, e, r, n, i, o, s) {
                                                void 0 === r && (r = yt(n));
                                                var a = i === b;
                                                if (r !== this.keyHash) return a ? this : (g(s), g(o), Yt(this, t, e, r, [n, i]));
                                                for (var u = this.entries, c = 0, h = u.length; c < h && !st(n, u[c][0]); c++);
                                                var f = c < h;
                                                if (f ? u[c][1] === i : a) return this;
                                                if (g(s), (a || !f) && g(o), a && 2 === h) return new Bt(t, this.keyHash, u[1 ^ c]);
                                                var l = t && t === this.ownerID,
                                                    p = l ? u : w(u);
                                                return f ? a ? c === h - 1 ? p.pop() : p[c] = p.pop() : p[c] = [n, i] : p.push([n, i]), l ? (this.entries = p, this) : new Lt(t, this.keyHash, p)
                                            }, Bt.prototype.get = function(t, e, r, n) {
                                                return st(r, this.entry[0]) ? this.entry[1] : n
                                            }, Bt.prototype.update = function(t, e, r, n, i, o, s) {
                                                var a = i === b,
                                                    u = st(n, this.entry[0]);
                                                return (u ? i === this.entry[1] : a) ? this : (g(s), a ? void g(o) : u ? t && t === this.ownerID ? (this.entry[1] = i, this) : new Bt(t, this.keyHash, [n, i]) : (g(o), Yt(this, t, e, yt(n), [n, i])))
                                            }, Ft.prototype.iterate = Lt.prototype.iterate = function(t, e) {
                                                for (var r = this.entries, n = 0, i = r.length - 1; n <= i; n++)
                                                    if (!1 === t(r[e ? i - n : n])) return !1
                                            }, Pt.prototype.iterate = Ut.prototype.iterate = function(t, e) {
                                                for (var r = this.nodes, n = 0, i = r.length - 1; n <= i; n++) {
                                                    var o = r[e ? i - n : n];
                                                    if (o && !1 === o.iterate(t, e)) return !1
                                                }
                                            }, Bt.prototype.iterate = function(t, e) {
                                                return t(this.entry)
                                            }, e(jt, M), jt.prototype.next = function() {
                                                for (var t = this._type, e = this._stack; e;) {
                                                    var r, n = e.node,
                                                        i = e.index++;
                                                    if (n.entry) {
                                                        if (0 === i) return qt(t, n.entry)
                                                    } else if (n.entries) {
                                                        if (i <= (r = n.entries.length - 1)) return qt(t, n.entries[this._reverse ? r - i : i])
                                                    } else if (i <= (r = n.nodes.length - 1)) {
                                                        var o = n.nodes[this._reverse ? r - i : i];
                                                        if (o) {
                                                            if (o.entry) return qt(t, o.entry);
                                                            e = this._stack = zt(o, e)
                                                        }
                                                        continue
                                                    }
                                                    e = this._stack = this._stack.__prev
                                                }
                                                return {
                                                    value: void 0,
                                                    done: !0
                                                }
                                            };
                                            var ee = 8,
                                                re = 16,
                                                ne = 8;

                                            function ie(t) {
                                                var e = de();
                                                if (null == t) return e;
                                                if (oe(t)) return t;
                                                var r = i(t),
                                                    n = r.size;
                                                return 0 === n ? e : (At(n), n > 0 && n < 32 ? pe(0, n, 5, null, new ue(r.toArray())) : e.withMutations((function(t) {
                                                    t.setSize(n), r.forEach((function(e, r) {
                                                        return t.set(r, e)
                                                    }))
                                                })))
                                            }

                                            function oe(t) {
                                                return !(!t || !t[se])
                                            }
                                            e(ie, pt), ie.of = function() {
                                                return this(arguments)
                                            }, ie.prototype.toString = function() {
                                                return this.__toString("List [", "]")
                                            }, ie.prototype.get = function(t, e) {
                                                if ((t = S(this, t)) >= 0 && t < this.size) {
                                                    var r = ye(this, t += this._origin);
                                                    return r && r.array[31 & t]
                                                }
                                                return e
                                            }, ie.prototype.set = function(t, e) {
                                                return function(t, e, r) {
                                                    if ((e = S(t, e)) != e) return t;
                                                    if (e >= t.size || e < 0) return t.withMutations((function(t) {
                                                        e < 0 ? ve(t, e).set(0, r) : ve(t, 0, e + 1).set(e, r)
                                                    }));
                                                    e += t._origin;
                                                    var n = t._tail,
                                                        i = t._root,
                                                        o = v(y);
                                                    return e >= me(t._capacity) ? n = be(n, t.__ownerID, 0, e, r, o) : i = be(i, t.__ownerID, t._level, e, r, o), o.value ? t.__ownerID ? (t._root = i, t._tail = n, t.__hash = void 0, t.__altered = !0, t) : pe(t._origin, t._capacity, t._level, i, n) : t
                                                }(this, t, e)
                                            }, ie.prototype.remove = function(t) {
                                                return this.has(t) ? 0 === t ? this.shift() : t === this.size - 1 ? this.pop() : this.splice(t, 1) : this
                                            }, ie.prototype.insert = function(t, e) {
                                                return this.splice(t, 0, e)
                                            }, ie.prototype.clear = function() {
                                                return 0 === this.size ? this : this.__ownerID ? (this.size = this._origin = this._capacity = 0, this._level = 5, this._root = this._tail = null, this.__hash = void 0, this.__altered = !0, this) : de()
                                            }, ie.prototype.push = function() {
                                                var t = arguments,
                                                    e = this.size;
                                                return this.withMutations((function(r) {
                                                    ve(r, 0, e + t.length);
                                                    for (var n = 0; n < t.length; n++) r.set(e + n, t[n])
                                                }))
                                            }, ie.prototype.pop = function() {
                                                return ve(this, 0, -1)
                                            }, ie.prototype.unshift = function() {
                                                var t = arguments;
                                                return this.withMutations((function(e) {
                                                    ve(e, -t.length);
                                                    for (var r = 0; r < t.length; r++) e.set(r, t[r])
                                                }))
                                            }, ie.prototype.shift = function() {
                                                return ve(this, 1)
                                            }, ie.prototype.merge = function() {
                                                return ge(this, void 0, arguments)
                                            }, ie.prototype.mergeWith = function(e) {
                                                var r = t.call(arguments, 1);
                                                return ge(this, e, r)
                                            }, ie.prototype.mergeDeep = function() {
                                                return ge(this, $t, arguments)
                                            }, ie.prototype.mergeDeepWith = function(e) {
                                                var r = t.call(arguments, 1);
                                                return ge(this, Xt(e), r)
                                            }, ie.prototype.setSize = function(t) {
                                                return ve(this, 0, t)
                                            }, ie.prototype.slice = function(t, e) {
                                                var r = this.size;
                                                return T(t, e, r) ? this : ve(this, C(t, r), k(e, r))
                                            }, ie.prototype.__iterator = function(t, e) {
                                                var r = 0,
                                                    n = le(this, e);
                                                return new M((function() {
                                                    var e = n();
                                                    return e === fe ? {
                                                        value: void 0,
                                                        done: !0
                                                    } : F(t, r++, e)
                                                }))
                                            }, ie.prototype.__iterate = function(t, e) {
                                                for (var r, n = 0, i = le(this, e);
                                                    (r = i()) !== fe && !1 !== t(r, n++, this););
                                                return n
                                            }, ie.prototype.__ensureOwner = function(t) {
                                                return t === this.__ownerID ? this : t ? pe(this._origin, this._capacity, this._level, this._root, this._tail, t, this.__hash) : (this.__ownerID = t, this)
                                            }, ie.isList = oe;
                                            var se = "@@__IMMUTABLE_LIST__@@",
                                                ae = ie.prototype;

                                            function ue(t, e) {
                                                this.array = t, this.ownerID = e
                                            }
                                            ae[se] = !0, ae.delete = ae.remove, ae.setIn = Mt.setIn, ae.deleteIn = ae.removeIn = Mt.removeIn, ae.update = Mt.update, ae.updateIn = Mt.updateIn, ae.mergeIn = Mt.mergeIn, ae.mergeDeepIn = Mt.mergeDeepIn, ae.withMutations = Mt.withMutations, ae.asMutable = Mt.asMutable, ae.asImmutable = Mt.asImmutable, ae.wasAltered = Mt.wasAltered, ue.prototype.removeBefore = function(t, e, r) {
                                                if (r === e ? 1 << e : 0 === this.array.length) return this;
                                                var n = r >>> e & 31;
                                                if (n >= this.array.length) return new ue([], t);
                                                var i, o = 0 === n;
                                                if (e > 0) {
                                                    var s = this.array[n];
                                                    if ((i = s && s.removeBefore(t, e - 5, r)) === s && o) return this
                                                }
                                                if (o && !i) return this;
                                                var a = _e(this, t);
                                                if (!o)
                                                    for (var u = 0; u < n; u++) a.array[u] = void 0;
                                                return i && (a.array[n] = i), a
                                            }, ue.prototype.removeAfter = function(t, e, r) {
                                                if (r === (e ? 1 << e : 0) || 0 === this.array.length) return this;
                                                var n, i = r - 1 >>> e & 31;
                                                if (i >= this.array.length) return this;
                                                if (e > 0) {
                                                    var o = this.array[i];
                                                    if ((n = o && o.removeAfter(t, e - 5, r)) === o && i === this.array.length - 1) return this
                                                }
                                                var s = _e(this, t);
                                                return s.array.splice(i + 1), n && (s.array[i] = n), s
                                            };
                                            var ce, he, fe = {};

                                            function le(t, e) {
                                                var r = t._origin,
                                                    n = t._capacity,
                                                    i = me(n),
                                                    o = t._tail;
                                                return function t(s, a, u) {
                                                    return 0 === a ? function(t, s) {
                                                        var a = s === i ? o && o.array : t && t.array,
                                                            u = s > r ? 0 : r - s,
                                                            c = n - s;
                                                        return c > 32 && (c = 32),
                                                            function() {
                                                                if (u === c) return fe;
                                                                var t = e ? --c : u++;
                                                                return a && a[t]
                                                            }
                                                    }(s, u) : function(i, o, s) {
                                                        var a, u = i && i.array,
                                                            c = s > r ? 0 : r - s >> o,
                                                            h = 1 + (n - s >> o);
                                                        return h > 32 && (h = 32),
                                                            function() {
                                                                for (;;) {
                                                                    if (a) {
                                                                        var r = a();
                                                                        if (r !== fe) return r;
                                                                        a = null
                                                                    }
                                                                    if (c === h) return fe;
                                                                    var n = e ? --h : c++;
                                                                    a = t(u && u[n], o - 5, s + (n << o))
                                                                }
                                                            }
                                                    }(s, a, u)
                                                }(t._root, t._level, 0)
                                            }

                                            function pe(t, e, r, n, i, o, s) {
                                                var a = Object.create(ae);
                                                return a.size = e - t, a._origin = t, a._capacity = e, a._level = r, a._root = n, a._tail = i, a.__ownerID = o, a.__hash = s, a.__altered = !1, a
                                            }

                                            function de() {
                                                return ce || (ce = pe(0, 0, 5))
                                            }

                                            function be(t, e, r, n, i, o) {
                                                var s, a = n >>> r & 31,
                                                    u = t && a < t.array.length;
                                                if (!u && void 0 === i) return t;
                                                if (r > 0) {
                                                    var c = t && t.array[a],
                                                        h = be(c, e, r - 5, n, i, o);
                                                    return h === c ? t : ((s = _e(t, e)).array[a] = h, s)
                                                }
                                                return u && t.array[a] === i ? t : (g(o), s = _e(t, e), void 0 === i && a === s.array.length - 1 ? s.array.pop() : s.array[a] = i, s)
                                            }

                                            function _e(t, e) {
                                                return e && t && e === t.ownerID ? t : new ue(t ? t.array.slice() : [], e)
                                            }

                                            function ye(t, e) {
                                                if (e >= me(t._capacity)) return t._tail;
                                                if (e < 1 << t._level + 5) {
                                                    for (var r = t._root, n = t._level; r && n > 0;) r = r.array[e >>> n & 31], n -= 5;
                                                    return r
                                                }
                                            }

                                            function ve(t, e, r) {
                                                void 0 !== e && (e |= 0), void 0 !== r && (r |= 0);
                                                var n = t.__ownerID || new m,
                                                    i = t._origin,
                                                    o = t._capacity,
                                                    s = i + e,
                                                    a = void 0 === r ? o : r < 0 ? o + r : i + r;
                                                if (s === i && a === o) return t;
                                                if (s >= a) return t.clear();
                                                for (var u = t._level, c = t._root, h = 0; s + h < 0;) c = new ue(c && c.array.length ? [void 0, c] : [], n), h += 1 << (u += 5);
                                                h && (s += h, i += h, a += h, o += h);
                                                for (var f = me(o), l = me(a); l >= 1 << u + 5;) c = new ue(c && c.array.length ? [c] : [], n), u += 5;
                                                var p = t._tail,
                                                    d = l < f ? ye(t, a - 1) : l > f ? new ue([], n) : p;
                                                if (p && l > f && s < o && p.array.length) {
                                                    for (var b = c = _e(c, n), _ = u; _ > 5; _ -= 5) {
                                                        var y = f >>> _ & 31;
                                                        b = b.array[y] = _e(b.array[y], n)
                                                    }
                                                    b.array[f >>> 5 & 31] = p
                                                }
                                                if (a < o && (d = d && d.removeAfter(n, 0, a)), s >= l) s -= l, a -= l, u = 5, c = null, d = d && d.removeBefore(n, 0, s);
                                                else if (s > i || l < f) {
                                                    for (h = 0; c;) {
                                                        var v = s >>> u & 31;
                                                        if (v !== l >>> u & 31) break;
                                                        v && (h += (1 << u) * v), u -= 5, c = c.array[v]
                                                    }
                                                    c && s > i && (c = c.removeBefore(n, u, s - h)), c && l < f && (c = c.removeAfter(n, u, l - h)), h && (s -= h, a -= h)
                                                }
                                                return t.__ownerID ? (t.size = a - s, t._origin = s, t._capacity = a, t._level = u, t._root = c, t._tail = d, t.__hash = void 0, t.__altered = !0, t) : pe(s, a, u, c, d)
                                            }

                                            function ge(t, e, r) {
                                                for (var n = [], o = 0, a = 0; a < r.length; a++) {
                                                    var u = r[a],
                                                        c = i(u);
                                                    c.size > o && (o = c.size), s(u) || (c = c.map((function(t) {
                                                        return nt(t)
                                                    }))), n.push(c)
                                                }
                                                return o > t.size && (t = t.setSize(o)), Qt(t, e, n)
                                            }

                                            function me(t) {
                                                return t < 32 ? 0 : t - 1 >>> 5 << 5
                                            }

                                            function we(t) {
                                                return null == t ? Ie() : Ee(t) ? t : Ie().withMutations((function(e) {
                                                    var r = n(t);
                                                    At(r.size), r.forEach((function(t, r) {
                                                        return e.set(r, t)
                                                    }))
                                                }))
                                            }

                                            function Ee(t) {
                                                return Dt(t) && h(t)
                                            }

                                            function Se(t, e, r, n) {
                                                var i = Object.create(we.prototype);
                                                return i.size = t ? t.size : 0, i._map = t, i._list = e, i.__ownerID = r, i.__hash = n, i
                                            }

                                            function Ie() {
                                                return he || (he = Se(Vt(), de()))
                                            }

                                            function Te(t, e, r) {
                                                var n, i, o = t._map,
                                                    s = t._list,
                                                    a = o.get(e),
                                                    u = void 0 !== a;
                                                if (r === b) {
                                                    if (!u) return t;
                                                    s.size >= 32 && s.size >= 2 * o.size ? (n = (i = s.filter((function(t, e) {
                                                        return void 0 !== t && a !== e
                                                    }))).toKeyedSeq().map((function(t) {
                                                        return t[0]
                                                    })).flip().toMap(), t.__ownerID && (n.__ownerID = i.__ownerID = t.__ownerID)) : (n = o.remove(e), i = a === s.size - 1 ? s.pop() : s.set(a, void 0))
                                                } else if (u) {
                                                    if (r === s.get(a)[1]) return t;
                                                    n = o, i = s.set(a, [e, r])
                                                } else n = o.set(e, s.size), i = s.set(s.size, [e, r]);
                                                return t.__ownerID ? (t.size = n.size, t._map = n, t._list = i, t.__hash = void 0, t) : Se(n, i)
                                            }

                                            function Ce(t, e) {
                                                this._iter = t, this._useKeys = e, this.size = t.size
                                            }

                                            function ke(t) {
                                                this._iter = t, this.size = t.size
                                            }

                                            function xe(t) {
                                                this._iter = t, this.size = t.size
                                            }

                                            function Ae(t) {
                                                this._iter = t, this.size = t.size
                                            }

                                            function Oe(t) {
                                                var e = He(t);
                                                return e._iter = t, e.size = t.size, e.flip = function() {
                                                    return t
                                                }, e.reverse = function() {
                                                    var e = t.reverse.apply(this);
                                                    return e.flip = function() {
                                                        return t.reverse()
                                                    }, e
                                                }, e.has = function(e) {
                                                    return t.includes(e)
                                                }, e.includes = function(e) {
                                                    return t.has(e)
                                                }, e.cacheResult = Ge, e.__iterateUncached = function(e, r) {
                                                    var n = this;
                                                    return t.__iterate((function(t, r) {
                                                        return !1 !== e(r, t, n)
                                                    }), r)
                                                }, e.__iteratorUncached = function(e, r) {
                                                    if (2 === e) {
                                                        var n = t.__iterator(e, r);
                                                        return new M((function() {
                                                            var t = n.next();
                                                            if (!t.done) {
                                                                var e = t.value[0];
                                                                t.value[0] = t.value[1], t.value[1] = e
                                                            }
                                                            return t
                                                        }))
                                                    }
                                                    return t.__iterator(1 === e ? 0 : 1, r)
                                                }, e
                                            }

                                            function De(t, e, r) {
                                                var n = He(t);
                                                return n.size = t.size, n.has = function(e) {
                                                    return t.has(e)
                                                }, n.get = function(n, i) {
                                                    var o = t.get(n, b);
                                                    return o === b ? i : e.call(r, o, n, t)
                                                }, n.__iterateUncached = function(n, i) {
                                                    var o = this;
                                                    return t.__iterate((function(t, i, s) {
                                                        return !1 !== n(e.call(r, t, i, s), i, o)
                                                    }), i)
                                                }, n.__iteratorUncached = function(n, i) {
                                                    var o = t.__iterator(2, i);
                                                    return new M((function() {
                                                        var i = o.next();
                                                        if (i.done) return i;
                                                        var s = i.value,
                                                            a = s[0];
                                                        return F(n, a, e.call(r, s[1], a, t), i)
                                                    }))
                                                }, n
                                            }

                                            function Re(t, e) {
                                                var r = He(t);
                                                return r._iter = t, r.size = t.size, r.reverse = function() {
                                                    return t
                                                }, t.flip && (r.flip = function() {
                                                    var e = Oe(t);
                                                    return e.reverse = function() {
                                                        return t.flip()
                                                    }, e
                                                }), r.get = function(r, n) {
                                                    return t.get(e ? r : -1 - r, n)
                                                }, r.has = function(r) {
                                                    return t.has(e ? r : -1 - r)
                                                }, r.includes = function(e) {
                                                    return t.includes(e)
                                                }, r.cacheResult = Ge, r.__iterate = function(e, r) {
                                                    var n = this;
                                                    return t.__iterate((function(t, r) {
                                                        return e(t, r, n)
                                                    }), !r)
                                                }, r.__iterator = function(e, r) {
                                                    return t.__iterator(e, !r)
                                                }, r
                                            }

                                            function Ne(t, e, r, n) {
                                                var i = He(t);
                                                return n && (i.has = function(n) {
                                                    var i = t.get(n, b);
                                                    return i !== b && !!e.call(r, i, n, t)
                                                }, i.get = function(n, i) {
                                                    var o = t.get(n, b);
                                                    return o !== b && e.call(r, o, n, t) ? o : i
                                                }), i.__iterateUncached = function(i, o) {
                                                    var s = this,
                                                        a = 0;
                                                    return t.__iterate((function(t, o, u) {
                                                        if (e.call(r, t, o, u)) return a++, i(t, n ? o : a - 1, s)
                                                    }), o), a
                                                }, i.__iteratorUncached = function(i, o) {
                                                    var s = t.__iterator(2, o),
                                                        a = 0;
                                                    return new M((function() {
                                                        for (;;) {
                                                            var o = s.next();
                                                            if (o.done) return o;
                                                            var u = o.value,
                                                                c = u[0],
                                                                h = u[1];
                                                            if (e.call(r, h, c, t)) return F(i, n ? c : a++, h, o)
                                                        }
                                                    }))
                                                }, i
                                            }

                                            function Me(t, e, r, n) {
                                                var i = t.size;
                                                if (void 0 !== e && (e |= 0), void 0 !== r && (1 / 0 === r ? r = i : r |= 0), T(e, r, i)) return t;
                                                var o = C(e, i),
                                                    s = k(r, i);
                                                if (o != o || s != s) return Me(t.toSeq().cacheResult(), e, r, n);
                                                var a, u = s - o;
                                                u == u && (a = u < 0 ? 0 : u);
                                                var c = He(t);
                                                return c.size = 0 === a ? a : t.size && a || void 0, !n && $(t) && a >= 0 && (c.get = function(e, r) {
                                                    return (e = S(this, e)) >= 0 && e < a ? t.get(e + o, r) : r
                                                }), c.__iterateUncached = function(e, r) {
                                                    var i = this;
                                                    if (0 === a) return 0;
                                                    if (r) return this.cacheResult().__iterate(e, r);
                                                    var s = 0,
                                                        u = !0,
                                                        c = 0;
                                                    return t.__iterate((function(t, r) {
                                                        if (!u || !(u = s++ < o)) return c++, !1 !== e(t, n ? r : c - 1, i) && c !== a
                                                    })), c
                                                }, c.__iteratorUncached = function(e, r) {
                                                    if (0 !== a && r) return this.cacheResult().__iterator(e, r);
                                                    var i = 0 !== a && t.__iterator(e, r),
                                                        s = 0,
                                                        u = 0;
                                                    return new M((function() {
                                                        for (; s++ < o;) i.next();
                                                        if (++u > a) return {
                                                            value: void 0,
                                                            done: !0
                                                        };
                                                        var t = i.next();
                                                        return n || 1 === e ? t : F(e, u - 1, 0 === e ? void 0 : t.value[1], t)
                                                    }))
                                                }, c
                                            }

                                            function Fe(t, e, r, n) {
                                                var i = He(t);
                                                return i.__iterateUncached = function(i, o) {
                                                    var s = this;
                                                    if (o) return this.cacheResult().__iterate(i, o);
                                                    var a = !0,
                                                        u = 0;
                                                    return t.__iterate((function(t, o, c) {
                                                        if (!a || !(a = e.call(r, t, o, c))) return u++, i(t, n ? o : u - 1, s)
                                                    })), u
                                                }, i.__iteratorUncached = function(i, o) {
                                                    var s = this;
                                                    if (o) return this.cacheResult().__iterator(i, o);
                                                    var a = t.__iterator(2, o),
                                                        u = !0,
                                                        c = 0;
                                                    return new M((function() {
                                                        var t, o, h;
                                                        do {
                                                            if ((t = a.next()).done) return n || 1 === i ? t : F(i, c++, 0 === i ? void 0 : t.value[1], t);
                                                            var f = t.value;
                                                            o = f[0], h = f[1], u && (u = e.call(r, h, o, s))
                                                        } while (u);
                                                        return 2 === i ? t : F(i, o, h, t)
                                                    }))
                                                }, i
                                            }

                                            function Pe(t, e) {
                                                var r = a(t),
                                                    i = [t].concat(e).map((function(t) {
                                                        return s(t) ? r && (t = n(t)) : t = r ? Q(t) : Z(Array.isArray(t) ? t : [t]), t
                                                    })).filter((function(t) {
                                                        return 0 !== t.size
                                                    }));
                                                if (0 === i.length) return t;
                                                if (1 === i.length) {
                                                    var o = i[0];
                                                    if (o === t || r && a(o) || u(t) && u(o)) return o
                                                }
                                                var c = new H(i);
                                                return r ? c = c.toKeyedSeq() : u(t) || (c = c.toSetSeq()), (c = c.flatten(!0)).size = i.reduce((function(t, e) {
                                                    if (void 0 !== t) {
                                                        var r = e.size;
                                                        if (void 0 !== r) return t + r
                                                    }
                                                }), 0), c
                                            }

                                            function Ue(t, e, r) {
                                                var n = He(t);
                                                return n.__iterateUncached = function(n, i) {
                                                    var o = 0,
                                                        a = !1;
                                                    return function t(u, c) {
                                                        var h = this;
                                                        u.__iterate((function(i, u) {
                                                            return (!e || c < e) && s(i) ? t(i, c + 1) : !1 === n(i, r ? u : o++, h) && (a = !0), !a
                                                        }), i)
                                                    }(t, 0), o
                                                }, n.__iteratorUncached = function(n, i) {
                                                    var o = t.__iterator(n, i),
                                                        a = [],
                                                        u = 0;
                                                    return new M((function() {
                                                        for (; o;) {
                                                            var t = o.next();
                                                            if (!1 === t.done) {
                                                                var c = t.value;
                                                                if (2 === n && (c = c[1]), e && !(a.length < e) || !s(c)) return r ? t : F(n, u++, c, t);
                                                                a.push(o), o = c.__iterator(n, i)
                                                            } else o = a.pop()
                                                        }
                                                        return {
                                                            value: void 0,
                                                            done: !0
                                                        }
                                                    }))
                                                }, n
                                            }

                                            function Le(t, e, r) {
                                                e || (e = Ye);
                                                var n = a(t),
                                                    i = 0,
                                                    o = t.toSeq().map((function(e, n) {
                                                        return [n, e, i++, r ? r(e, n, t) : e]
                                                    })).toArray();
                                                return o.sort((function(t, r) {
                                                    return e(t[3], r[3]) || t[2] - r[2]
                                                })).forEach(n ? function(t, e) {
                                                    o[e].length = 2
                                                } : function(t, e) {
                                                    o[e] = t[1]
                                                }), n ? K(o) : u(t) ? V(o) : W(o)
                                            }

                                            function Be(t, e, r) {
                                                if (e || (e = Ye), r) {
                                                    var n = t.toSeq().map((function(e, n) {
                                                        return [e, r(e, n, t)]
                                                    })).reduce((function(t, r) {
                                                        return je(e, t[1], r[1]) ? r : t
                                                    }));
                                                    return n && n[0]
                                                }
                                                return t.reduce((function(t, r) {
                                                    return je(e, t, r) ? r : t
                                                }))
                                            }

                                            function je(t, e, r) {
                                                var n = t(r, e);
                                                return 0 === n && r !== e && (null == r || r != r) || n > 0
                                            }

                                            function qe(t, e, n) {
                                                var i = He(t);
                                                return i.size = new H(n).map((function(t) {
                                                    return t.size
                                                })).min(), i.__iterate = function(t, e) {
                                                    for (var r, n = this.__iterator(1, e), i = 0; !(r = n.next()).done && !1 !== t(r.value, i++, this););
                                                    return i
                                                }, i.__iteratorUncached = function(t, i) {
                                                    var o = n.map((function(t) {
                                                            return t = r(t), B(i ? t.reverse() : t)
                                                        })),
                                                        s = 0,
                                                        a = !1;
                                                    return new M((function() {
                                                        var r;
                                                        return a || (r = o.map((function(t) {
                                                            return t.next()
                                                        })), a = r.some((function(t) {
                                                            return t.done
                                                        }))), a ? {
                                                            value: void 0,
                                                            done: !0
                                                        } : F(t, s++, e.apply(null, r.map((function(t) {
                                                            return t.value
                                                        }))))
                                                    }))
                                                }, i
                                            }

                                            function ze(t, e) {
                                                return $(t) ? e : t.constructor(e)
                                            }

                                            function Ke(t) {
                                                if (t !== Object(t)) throw new TypeError("Expected [K, V] tuple: " + t)
                                            }

                                            function Ve(t) {
                                                return At(t.size), E(t)
                                            }

                                            function We(t) {
                                                return a(t) ? n : u(t) ? i : o
                                            }

                                            function He(t) {
                                                return Object.create((a(t) ? K : u(t) ? V : W).prototype)
                                            }

                                            function Ge() {
                                                return this._iter.cacheResult ? (this._iter.cacheResult(), this.size = this._iter.size, this) : z.prototype.cacheResult.call(this)
                                            }

                                            function Ye(t, e) {
                                                return t > e ? 1 : t < e ? -1 : 0
                                            }

                                            function Je(t) {
                                                var e = B(t);
                                                if (!e) {
                                                    if (!q(t)) throw new TypeError("Expected iterable or array-like: " + t);
                                                    e = B(r(t))
                                                }
                                                return e
                                            }

                                            function $e(t, e) {
                                                var r, n = function(o) {
                                                        if (o instanceof n) return o;
                                                        if (!(this instanceof n)) return new n(o);
                                                        if (!r) {
                                                            r = !0;
                                                            var s = Object.keys(t);
                                                            ! function(t, e) {
                                                                try {
                                                                    e.forEach(tr.bind(void 0, t))
                                                                } catch (t) {}
                                                            }(i, s), i.size = s.length, i._name = e, i._keys = s, i._defaultValues = t
                                                        }
                                                        this._map = Ot(o)
                                                    },
                                                    i = n.prototype = Object.create(Xe);
                                                return i.constructor = n, n
                                            }
                                            e(we, Ot), we.of = function() {
                                                return this(arguments)
                                            }, we.prototype.toString = function() {
                                                return this.__toString("OrderedMap {", "}")
                                            }, we.prototype.get = function(t, e) {
                                                var r = this._map.get(t);
                                                return void 0 !== r ? this._list.get(r)[1] : e
                                            }, we.prototype.clear = function() {
                                                return 0 === this.size ? this : this.__ownerID ? (this.size = 0, this._map.clear(), this._list.clear(), this) : Ie()
                                            }, we.prototype.set = function(t, e) {
                                                return Te(this, t, e)
                                            }, we.prototype.remove = function(t) {
                                                return Te(this, t, b)
                                            }, we.prototype.wasAltered = function() {
                                                return this._map.wasAltered() || this._list.wasAltered()
                                            }, we.prototype.__iterate = function(t, e) {
                                                var r = this;
                                                return this._list.__iterate((function(e) {
                                                    return e && t(e[1], e[0], r)
                                                }), e)
                                            }, we.prototype.__iterator = function(t, e) {
                                                return this._list.fromEntrySeq().__iterator(t, e)
                                            }, we.prototype.__ensureOwner = function(t) {
                                                if (t === this.__ownerID) return this;
                                                var e = this._map.__ensureOwner(t),
                                                    r = this._list.__ensureOwner(t);
                                                return t ? Se(e, r, t, this.__hash) : (this.__ownerID = t, this._map = e, this._list = r, this)
                                            }, we.isOrderedMap = Ee, we.prototype[d] = !0, we.prototype.delete = we.prototype.remove, e(Ce, K), Ce.prototype.get = function(t, e) {
                                                return this._iter.get(t, e)
                                            }, Ce.prototype.has = function(t) {
                                                return this._iter.has(t)
                                            }, Ce.prototype.valueSeq = function() {
                                                return this._iter.valueSeq()
                                            }, Ce.prototype.reverse = function() {
                                                var t = this,
                                                    e = Re(this, !0);
                                                return this._useKeys || (e.valueSeq = function() {
                                                    return t._iter.toSeq().reverse()
                                                }), e
                                            }, Ce.prototype.map = function(t, e) {
                                                var r = this,
                                                    n = De(this, t, e);
                                                return this._useKeys || (n.valueSeq = function() {
                                                    return r._iter.toSeq().map(t, e)
                                                }), n
                                            }, Ce.prototype.__iterate = function(t, e) {
                                                var r, n = this;
                                                return this._iter.__iterate(this._useKeys ? function(e, r) {
                                                    return t(e, r, n)
                                                } : (r = e ? Ve(this) : 0, function(i) {
                                                    return t(i, e ? --r : r++, n)
                                                }), e)
                                            }, Ce.prototype.__iterator = function(t, e) {
                                                if (this._useKeys) return this._iter.__iterator(t, e);
                                                var r = this._iter.__iterator(1, e),
                                                    n = e ? Ve(this) : 0;
                                                return new M((function() {
                                                    var i = r.next();
                                                    return i.done ? i : F(t, e ? --n : n++, i.value, i)
                                                }))
                                            }, Ce.prototype[d] = !0, e(ke, V), ke.prototype.includes = function(t) {
                                                return this._iter.includes(t)
                                            }, ke.prototype.__iterate = function(t, e) {
                                                var r = this,
                                                    n = 0;
                                                return this._iter.__iterate((function(e) {
                                                    return t(e, n++, r)
                                                }), e)
                                            }, ke.prototype.__iterator = function(t, e) {
                                                var r = this._iter.__iterator(1, e),
                                                    n = 0;
                                                return new M((function() {
                                                    var e = r.next();
                                                    return e.done ? e : F(t, n++, e.value, e)
                                                }))
                                            }, e(xe, W), xe.prototype.has = function(t) {
                                                return this._iter.includes(t)
                                            }, xe.prototype.__iterate = function(t, e) {
                                                var r = this;
                                                return this._iter.__iterate((function(e) {
                                                    return t(e, e, r)
                                                }), e)
                                            }, xe.prototype.__iterator = function(t, e) {
                                                var r = this._iter.__iterator(1, e);
                                                return new M((function() {
                                                    var e = r.next();
                                                    return e.done ? e : F(t, e.value, e.value, e)
                                                }))
                                            }, e(Ae, K), Ae.prototype.entrySeq = function() {
                                                return this._iter.toSeq()
                                            }, Ae.prototype.__iterate = function(t, e) {
                                                var r = this;
                                                return this._iter.__iterate((function(e) {
                                                    if (e) {
                                                        Ke(e);
                                                        var n = s(e);
                                                        return t(n ? e.get(1) : e[1], n ? e.get(0) : e[0], r)
                                                    }
                                                }), e)
                                            }, Ae.prototype.__iterator = function(t, e) {
                                                var r = this._iter.__iterator(1, e);
                                                return new M((function() {
                                                    for (;;) {
                                                        var e = r.next();
                                                        if (e.done) return e;
                                                        var n = e.value;
                                                        if (n) {
                                                            Ke(n);
                                                            var i = s(n);
                                                            return F(t, i ? n.get(0) : n[0], i ? n.get(1) : n[1], e)
                                                        }
                                                    }
                                                }))
                                            }, ke.prototype.cacheResult = Ce.prototype.cacheResult = xe.prototype.cacheResult = Ae.prototype.cacheResult = Ge, e($e, lt), $e.prototype.toString = function() {
                                                return this.__toString(Ze(this) + " {", "}")
                                            }, $e.prototype.has = function(t) {
                                                return this._defaultValues.hasOwnProperty(t)
                                            }, $e.prototype.get = function(t, e) {
                                                if (!this.has(t)) return e;
                                                var r = this._defaultValues[t];
                                                return this._map ? this._map.get(t, r) : r
                                            }, $e.prototype.clear = function() {
                                                if (this.__ownerID) return this._map && this._map.clear(), this;
                                                var t = this.constructor;
                                                return t._empty || (t._empty = Qe(this, Vt()))
                                            }, $e.prototype.set = function(t, e) {
                                                if (!this.has(t)) throw new Error('Cannot set unknown key "' + t + '" on ' + Ze(this));
                                                if (this._map && !this._map.has(t) && e === this._defaultValues[t]) return this;
                                                var r = this._map && this._map.set(t, e);
                                                return this.__ownerID || r === this._map ? this : Qe(this, r)
                                            }, $e.prototype.remove = function(t) {
                                                if (!this.has(t)) return this;
                                                var e = this._map && this._map.remove(t);
                                                return this.__ownerID || e === this._map ? this : Qe(this, e)
                                            }, $e.prototype.wasAltered = function() {
                                                return this._map.wasAltered()
                                            }, $e.prototype.__iterator = function(t, e) {
                                                var r = this;
                                                return n(this._defaultValues).map((function(t, e) {
                                                    return r.get(e)
                                                })).__iterator(t, e)
                                            }, $e.prototype.__iterate = function(t, e) {
                                                var r = this;
                                                return n(this._defaultValues).map((function(t, e) {
                                                    return r.get(e)
                                                })).__iterate(t, e)
                                            }, $e.prototype.__ensureOwner = function(t) {
                                                if (t === this.__ownerID) return this;
                                                var e = this._map && this._map.__ensureOwner(t);
                                                return t ? Qe(this, e, t) : (this.__ownerID = t, this._map = e, this)
                                            };
                                            var Xe = $e.prototype;

                                            function Qe(t, e, r) {
                                                var n = Object.create(Object.getPrototypeOf(t));
                                                return n._map = e, n.__ownerID = r, n
                                            }

                                            function Ze(t) {
                                                return t._name || t.constructor.name || "Record"
                                            }

                                            function tr(t, e) {
                                                Object.defineProperty(t, e, {
                                                    get: function() {
                                                        return this.get(e)
                                                    },
                                                    set: function(t) {
                                                        ct(this.__ownerID, "Cannot set on an immutable record."), this.set(e, t)
                                                    }
                                                })
                                            }

                                            function er(t) {
                                                return null == t ? ur() : rr(t) && !h(t) ? t : ur().withMutations((function(e) {
                                                    var r = o(t);
                                                    At(r.size), r.forEach((function(t) {
                                                        return e.add(t)
                                                    }))
                                                }))
                                            }

                                            function rr(t) {
                                                return !(!t || !t[ir])
                                            }
                                            Xe.delete = Xe.remove, Xe.deleteIn = Xe.removeIn = Mt.removeIn, Xe.merge = Mt.merge, Xe.mergeWith = Mt.mergeWith, Xe.mergeIn = Mt.mergeIn, Xe.mergeDeep = Mt.mergeDeep, Xe.mergeDeepWith = Mt.mergeDeepWith, Xe.mergeDeepIn = Mt.mergeDeepIn, Xe.setIn = Mt.setIn, Xe.update = Mt.update, Xe.updateIn = Mt.updateIn, Xe.withMutations = Mt.withMutations, Xe.asMutable = Mt.asMutable, Xe.asImmutable = Mt.asImmutable, e(er, dt), er.of = function() {
                                                return this(arguments)
                                            }, er.fromKeys = function(t) {
                                                return this(n(t).keySeq())
                                            }, er.prototype.toString = function() {
                                                return this.__toString("Set {", "}")
                                            }, er.prototype.has = function(t) {
                                                return this._map.has(t)
                                            }, er.prototype.add = function(t) {
                                                return sr(this, this._map.set(t, !0))
                                            }, er.prototype.remove = function(t) {
                                                return sr(this, this._map.remove(t))
                                            }, er.prototype.clear = function() {
                                                return sr(this, this._map.clear())
                                            }, er.prototype.union = function() {
                                                var e = t.call(arguments, 0);
                                                return 0 === (e = e.filter((function(t) {
                                                    return 0 !== t.size
                                                }))).length ? this : 0 !== this.size || this.__ownerID || 1 !== e.length ? this.withMutations((function(t) {
                                                    for (var r = 0; r < e.length; r++) o(e[r]).forEach((function(e) {
                                                        return t.add(e)
                                                    }))
                                                })) : this.constructor(e[0])
                                            }, er.prototype.intersect = function() {
                                                var e = t.call(arguments, 0);
                                                if (0 === e.length) return this;
                                                e = e.map((function(t) {
                                                    return o(t)
                                                }));
                                                var r = this;
                                                return this.withMutations((function(t) {
                                                    r.forEach((function(r) {
                                                        e.every((function(t) {
                                                            return t.includes(r)
                                                        })) || t.remove(r)
                                                    }))
                                                }))
                                            }, er.prototype.subtract = function() {
                                                var e = t.call(arguments, 0);
                                                if (0 === e.length) return this;
                                                e = e.map((function(t) {
                                                    return o(t)
                                                }));
                                                var r = this;
                                                return this.withMutations((function(t) {
                                                    r.forEach((function(r) {
                                                        e.some((function(t) {
                                                            return t.includes(r)
                                                        })) && t.remove(r)
                                                    }))
                                                }))
                                            }, er.prototype.merge = function() {
                                                return this.union.apply(this, arguments)
                                            }, er.prototype.mergeWith = function(e) {
                                                var r = t.call(arguments, 1);
                                                return this.union.apply(this, r)
                                            }, er.prototype.sort = function(t) {
                                                return cr(Le(this, t))
                                            }, er.prototype.sortBy = function(t, e) {
                                                return cr(Le(this, e, t))
                                            }, er.prototype.wasAltered = function() {
                                                return this._map.wasAltered()
                                            }, er.prototype.__iterate = function(t, e) {
                                                var r = this;
                                                return this._map.__iterate((function(e, n) {
                                                    return t(n, n, r)
                                                }), e)
                                            }, er.prototype.__iterator = function(t, e) {
                                                return this._map.map((function(t, e) {
                                                    return e
                                                })).__iterator(t, e)
                                            }, er.prototype.__ensureOwner = function(t) {
                                                if (t === this.__ownerID) return this;
                                                var e = this._map.__ensureOwner(t);
                                                return t ? this.__make(e, t) : (this.__ownerID = t, this._map = e, this)
                                            }, er.isSet = rr;
                                            var nr, ir = "@@__IMMUTABLE_SET__@@",
                                                or = er.prototype;

                                            function sr(t, e) {
                                                return t.__ownerID ? (t.size = e.size, t._map = e, t) : e === t._map ? t : 0 === e.size ? t.__empty() : t.__make(e)
                                            }

                                            function ar(t, e) {
                                                var r = Object.create(or);
                                                return r.size = t ? t.size : 0, r._map = t, r.__ownerID = e, r
                                            }

                                            function ur() {
                                                return nr || (nr = ar(Vt()))
                                            }

                                            function cr(t) {
                                                return null == t ? dr() : hr(t) ? t : dr().withMutations((function(e) {
                                                    var r = o(t);
                                                    At(r.size), r.forEach((function(t) {
                                                        return e.add(t)
                                                    }))
                                                }))
                                            }

                                            function hr(t) {
                                                return rr(t) && h(t)
                                            }
                                            or[ir] = !0, or.delete = or.remove, or.mergeDeep = or.merge, or.mergeDeepWith = or.mergeWith, or.withMutations = Mt.withMutations, or.asMutable = Mt.asMutable, or.asImmutable = Mt.asImmutable, or.__empty = ur, or.__make = ar, e(cr, er), cr.of = function() {
                                                return this(arguments)
                                            }, cr.fromKeys = function(t) {
                                                return this(n(t).keySeq())
                                            }, cr.prototype.toString = function() {
                                                return this.__toString("OrderedSet {", "}")
                                            }, cr.isOrderedSet = hr;
                                            var fr, lr = cr.prototype;

                                            function pr(t, e) {
                                                var r = Object.create(lr);
                                                return r.size = t ? t.size : 0, r._map = t, r.__ownerID = e, r
                                            }

                                            function dr() {
                                                return fr || (fr = pr(Ie()))
                                            }

                                            function br(t) {
                                                return null == t ? wr() : _r(t) ? t : wr().unshiftAll(t)
                                            }

                                            function _r(t) {
                                                return !(!t || !t[vr])
                                            }
                                            lr[d] = !0, lr.__empty = dr, lr.__make = pr, e(br, pt), br.of = function() {
                                                return this(arguments)
                                            }, br.prototype.toString = function() {
                                                return this.__toString("Stack [", "]")
                                            }, br.prototype.get = function(t, e) {
                                                var r = this._head;
                                                for (t = S(this, t); r && t--;) r = r.next;
                                                return r ? r.value : e
                                            }, br.prototype.peek = function() {
                                                return this._head && this._head.value
                                            }, br.prototype.push = function() {
                                                if (0 === arguments.length) return this;
                                                for (var t = this.size + arguments.length, e = this._head, r = arguments.length - 1; r >= 0; r--) e = {
                                                    value: arguments[r],
                                                    next: e
                                                };
                                                return this.__ownerID ? (this.size = t, this._head = e, this.__hash = void 0, this.__altered = !0, this) : mr(t, e)
                                            }, br.prototype.pushAll = function(t) {
                                                if (0 === (t = i(t)).size) return this;
                                                At(t.size);
                                                var e = this.size,
                                                    r = this._head;
                                                return t.reverse().forEach((function(t) {
                                                    e++, r = {
                                                        value: t,
                                                        next: r
                                                    }
                                                })), this.__ownerID ? (this.size = e, this._head = r, this.__hash = void 0, this.__altered = !0, this) : mr(e, r)
                                            }, br.prototype.pop = function() {
                                                return this.slice(1)
                                            }, br.prototype.unshift = function() {
                                                return this.push.apply(this, arguments)
                                            }, br.prototype.unshiftAll = function(t) {
                                                return this.pushAll(t)
                                            }, br.prototype.shift = function() {
                                                return this.pop.apply(this, arguments)
                                            }, br.prototype.clear = function() {
                                                return 0 === this.size ? this : this.__ownerID ? (this.size = 0, this._head = void 0, this.__hash = void 0, this.__altered = !0, this) : wr()
                                            }, br.prototype.slice = function(t, e) {
                                                if (T(t, e, this.size)) return this;
                                                var r = C(t, this.size);
                                                if (k(e, this.size) !== this.size) return pt.prototype.slice.call(this, t, e);
                                                for (var n = this.size - r, i = this._head; r--;) i = i.next;
                                                return this.__ownerID ? (this.size = n, this._head = i, this.__hash = void 0, this.__altered = !0, this) : mr(n, i)
                                            }, br.prototype.__ensureOwner = function(t) {
                                                return t === this.__ownerID ? this : t ? mr(this.size, this._head, t, this.__hash) : (this.__ownerID = t, this.__altered = !1, this)
                                            }, br.prototype.__iterate = function(t, e) {
                                                if (e) return this.reverse().__iterate(t);
                                                for (var r = 0, n = this._head; n && !1 !== t(n.value, r++, this);) n = n.next;
                                                return r
                                            }, br.prototype.__iterator = function(t, e) {
                                                if (e) return this.reverse().__iterator(t);
                                                var r = 0,
                                                    n = this._head;
                                                return new M((function() {
                                                    if (n) {
                                                        var e = n.value;
                                                        return n = n.next, F(t, r++, e)
                                                    }
                                                    return {
                                                        value: void 0,
                                                        done: !0
                                                    }
                                                }))
                                            }, br.isStack = _r;
                                            var yr, vr = "@@__IMMUTABLE_STACK__@@",
                                                gr = br.prototype;

                                            function mr(t, e, r, n) {
                                                var i = Object.create(gr);
                                                return i.size = t, i._head = e, i.__ownerID = r, i.__hash = n, i.__altered = !1, i
                                            }

                                            function wr() {
                                                return yr || (yr = mr(0))
                                            }

                                            function Er(t, e) {
                                                var r = function(r) {
                                                    t.prototype[r] = e[r]
                                                };
                                                return Object.keys(e).forEach(r), Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(e).forEach(r), t
                                            }
                                            gr[vr] = !0, gr.withMutations = Mt.withMutations, gr.asMutable = Mt.asMutable, gr.asImmutable = Mt.asImmutable, gr.wasAltered = Mt.wasAltered, r.Iterator = M, Er(r, {
                                                toArray: function() {
                                                    At(this.size);
                                                    var t = new Array(this.size || 0);
                                                    return this.valueSeq().__iterate((function(e, r) {
                                                        t[r] = e
                                                    })), t
                                                },
                                                toIndexedSeq: function() {
                                                    return new ke(this)
                                                },
                                                toJS: function() {
                                                    return this.toSeq().map((function(t) {
                                                        return t && "function" == typeof t.toJS ? t.toJS() : t
                                                    })).__toJS()
                                                },
                                                toJSON: function() {
                                                    return this.toSeq().map((function(t) {
                                                        return t && "function" == typeof t.toJSON ? t.toJSON() : t
                                                    })).__toJS()
                                                },
                                                toKeyedSeq: function() {
                                                    return new Ce(this, !0)
                                                },
                                                toMap: function() {
                                                    return Ot(this.toKeyedSeq())
                                                },
                                                toObject: function() {
                                                    At(this.size);
                                                    var t = {};
                                                    return this.__iterate((function(e, r) {
                                                        t[r] = e
                                                    })), t
                                                },
                                                toOrderedMap: function() {
                                                    return we(this.toKeyedSeq())
                                                },
                                                toOrderedSet: function() {
                                                    return cr(a(this) ? this.valueSeq() : this)
                                                },
                                                toSet: function() {
                                                    return er(a(this) ? this.valueSeq() : this)
                                                },
                                                toSetSeq: function() {
                                                    return new xe(this)
                                                },
                                                toSeq: function() {
                                                    return u(this) ? this.toIndexedSeq() : a(this) ? this.toKeyedSeq() : this.toSetSeq()
                                                },
                                                toStack: function() {
                                                    return br(a(this) ? this.valueSeq() : this)
                                                },
                                                toList: function() {
                                                    return ie(a(this) ? this.valueSeq() : this)
                                                },
                                                toString: function() {
                                                    return "[Iterable]"
                                                },
                                                __toString: function(t, e) {
                                                    return 0 === this.size ? t + e : t + " " + this.toSeq().map(this.__toStringMapper).join(", ") + " " + e
                                                },
                                                concat: function() {
                                                    var e = t.call(arguments, 0);
                                                    return ze(this, Pe(this, e))
                                                },
                                                includes: function(t) {
                                                    return this.some((function(e) {
                                                        return st(e, t)
                                                    }))
                                                },
                                                entries: function() {
                                                    return this.__iterator(2)
                                                },
                                                every: function(t, e) {
                                                    At(this.size);
                                                    var r = !0;
                                                    return this.__iterate((function(n, i, o) {
                                                        if (!t.call(e, n, i, o)) return r = !1, !1
                                                    })), r
                                                },
                                                filter: function(t, e) {
                                                    return ze(this, Ne(this, t, e, !0))
                                                },
                                                find: function(t, e, r) {
                                                    var n = this.findEntry(t, e);
                                                    return n ? n[1] : r
                                                },
                                                forEach: function(t, e) {
                                                    return At(this.size), this.__iterate(e ? t.bind(e) : t)
                                                },
                                                join: function(t) {
                                                    At(this.size), t = void 0 !== t ? "" + t : ",";
                                                    var e = "",
                                                        r = !0;
                                                    return this.__iterate((function(n) {
                                                        r ? r = !1 : e += t, e += null != n ? n.toString() : ""
                                                    })), e
                                                },
                                                keys: function() {
                                                    return this.__iterator(0)
                                                },
                                                map: function(t, e) {
                                                    return ze(this, De(this, t, e))
                                                },
                                                reduce: function(t, e, r) {
                                                    var n, i;
                                                    return At(this.size), arguments.length < 2 ? i = !0 : n = e, this.__iterate((function(e, o, s) {
                                                        i ? (i = !1, n = e) : n = t.call(r, n, e, o, s)
                                                    })), n
                                                },
                                                reduceRight: function(t, e, r) {
                                                    var n = this.toKeyedSeq().reverse();
                                                    return n.reduce.apply(n, arguments)
                                                },
                                                reverse: function() {
                                                    return ze(this, Re(this, !0))
                                                },
                                                slice: function(t, e) {
                                                    return ze(this, Me(this, t, e, !0))
                                                },
                                                some: function(t, e) {
                                                    return !this.every(kr(t), e)
                                                },
                                                sort: function(t) {
                                                    return ze(this, Le(this, t))
                                                },
                                                values: function() {
                                                    return this.__iterator(1)
                                                },
                                                butLast: function() {
                                                    return this.slice(0, -1)
                                                },
                                                isEmpty: function() {
                                                    return void 0 !== this.size ? 0 === this.size : !this.some((function() {
                                                        return !0
                                                    }))
                                                },
                                                count: function(t, e) {
                                                    return E(t ? this.toSeq().filter(t, e) : this)
                                                },
                                                countBy: function(t, e) {
                                                    return function(t, e, r) {
                                                        var n = Ot().asMutable();
                                                        return t.__iterate((function(i, o) {
                                                            n.update(e.call(r, i, o, t), 0, (function(t) {
                                                                return t + 1
                                                            }))
                                                        })), n.asImmutable()
                                                    }(this, t, e)
                                                },
                                                equals: function(t) {
                                                    return at(this, t)
                                                },
                                                entrySeq: function() {
                                                    var t = this;
                                                    if (t._cache) return new H(t._cache);
                                                    var e = t.toSeq().map(Cr).toIndexedSeq();
                                                    return e.fromEntrySeq = function() {
                                                        return t.toSeq()
                                                    }, e
                                                },
                                                filterNot: function(t, e) {
                                                    return this.filter(kr(t), e)
                                                },
                                                findEntry: function(t, e, r) {
                                                    var n = r;
                                                    return this.__iterate((function(r, i, o) {
                                                        if (t.call(e, r, i, o)) return n = [i, r], !1
                                                    })), n
                                                },
                                                findKey: function(t, e) {
                                                    var r = this.findEntry(t, e);
                                                    return r && r[0]
                                                },
                                                findLast: function(t, e, r) {
                                                    return this.toKeyedSeq().reverse().find(t, e, r)
                                                },
                                                findLastEntry: function(t, e, r) {
                                                    return this.toKeyedSeq().reverse().findEntry(t, e, r)
                                                },
                                                findLastKey: function(t, e) {
                                                    return this.toKeyedSeq().reverse().findKey(t, e)
                                                },
                                                first: function() {
                                                    return this.find(I)
                                                },
                                                flatMap: function(t, e) {
                                                    return ze(this, function(t, e, r) {
                                                        var n = We(t);
                                                        return t.toSeq().map((function(i, o) {
                                                            return n(e.call(r, i, o, t))
                                                        })).flatten(!0)
                                                    }(this, t, e))
                                                },
                                                flatten: function(t) {
                                                    return ze(this, Ue(this, t, !0))
                                                },
                                                fromEntrySeq: function() {
                                                    return new Ae(this)
                                                },
                                                get: function(t, e) {
                                                    return this.find((function(e, r) {
                                                        return st(r, t)
                                                    }), void 0, e)
                                                },
                                                getIn: function(t, e) {
                                                    for (var r, n = this, i = Je(t); !(r = i.next()).done;)
                                                        if ((n = n && n.get ? n.get(r.value, b) : b) === b) return e;
                                                    return n
                                                },
                                                groupBy: function(t, e) {
                                                    return function(t, e, r) {
                                                        var n = a(t),
                                                            i = (h(t) ? we() : Ot()).asMutable();
                                                        t.__iterate((function(o, s) {
                                                            i.update(e.call(r, o, s, t), (function(t) {
                                                                return (t = t || []).push(n ? [s, o] : o), t
                                                            }))
                                                        }));
                                                        var o = We(t);
                                                        return i.map((function(e) {
                                                            return ze(t, o(e))
                                                        }))
                                                    }(this, t, e)
                                                },
                                                has: function(t) {
                                                    return this.get(t, b) !== b
                                                },
                                                hasIn: function(t) {
                                                    return this.getIn(t, b) !== b
                                                },
                                                isSubset: function(t) {
                                                    return t = "function" == typeof t.includes ? t : r(t), this.every((function(e) {
                                                        return t.includes(e)
                                                    }))
                                                },
                                                isSuperset: function(t) {
                                                    return (t = "function" == typeof t.isSubset ? t : r(t)).isSubset(this)
                                                },
                                                keyOf: function(t) {
                                                    return this.findKey((function(e) {
                                                        return st(e, t)
                                                    }))
                                                },
                                                keySeq: function() {
                                                    return this.toSeq().map(Tr).toIndexedSeq()
                                                },
                                                last: function() {
                                                    return this.toSeq().reverse().first()
                                                },
                                                lastKeyOf: function(t) {
                                                    return this.toKeyedSeq().reverse().keyOf(t)
                                                },
                                                max: function(t) {
                                                    return Be(this, t)
                                                },
                                                maxBy: function(t, e) {
                                                    return Be(this, e, t)
                                                },
                                                min: function(t) {
                                                    return Be(this, t ? xr(t) : Dr)
                                                },
                                                minBy: function(t, e) {
                                                    return Be(this, e ? xr(e) : Dr, t)
                                                },
                                                rest: function() {
                                                    return this.slice(1)
                                                },
                                                skip: function(t) {
                                                    return this.slice(Math.max(0, t))
                                                },
                                                skipLast: function(t) {
                                                    return ze(this, this.toSeq().reverse().skip(t).reverse())
                                                },
                                                skipWhile: function(t, e) {
                                                    return ze(this, Fe(this, t, e, !0))
                                                },
                                                skipUntil: function(t, e) {
                                                    return this.skipWhile(kr(t), e)
                                                },
                                                sortBy: function(t, e) {
                                                    return ze(this, Le(this, e, t))
                                                },
                                                take: function(t) {
                                                    return this.slice(0, Math.max(0, t))
                                                },
                                                takeLast: function(t) {
                                                    return ze(this, this.toSeq().reverse().take(t).reverse())
                                                },
                                                takeWhile: function(t, e) {
                                                    return ze(this, function(t, e, r) {
                                                        var n = He(t);
                                                        return n.__iterateUncached = function(n, i) {
                                                            var o = this;
                                                            if (i) return this.cacheResult().__iterate(n, i);
                                                            var s = 0;
                                                            return t.__iterate((function(t, i, a) {
                                                                return e.call(r, t, i, a) && ++s && n(t, i, o)
                                                            })), s
                                                        }, n.__iteratorUncached = function(n, i) {
                                                            var o = this;
                                                            if (i) return this.cacheResult().__iterator(n, i);
                                                            var s = t.__iterator(2, i),
                                                                a = !0;
                                                            return new M((function() {
                                                                if (!a) return {
                                                                    value: void 0,
                                                                    done: !0
                                                                };
                                                                var t = s.next();
                                                                if (t.done) return t;
                                                                var i = t.value,
                                                                    u = i[0],
                                                                    c = i[1];
                                                                return e.call(r, c, u, o) ? 2 === n ? t : F(n, u, c, t) : (a = !1, {
                                                                    value: void 0,
                                                                    done: !0
                                                                })
                                                            }))
                                                        }, n
                                                    }(this, t, e))
                                                },
                                                takeUntil: function(t, e) {
                                                    return this.takeWhile(kr(t), e)
                                                },
                                                valueSeq: function() {
                                                    return this.toIndexedSeq()
                                                },
                                                hashCode: function() {
                                                    return this.__hash || (this.__hash = function(t) {
                                                        if (1 / 0 === t.size) return 0;
                                                        var e = h(t),
                                                            r = a(t),
                                                            n = e ? 1 : 0;
                                                        return function(t, e) {
                                                            return e = bt(e, 3432918353), e = bt(e << 15 | e >>> -15, 461845907), e = bt(e << 13 | e >>> -13, 5), e = bt((e = (e + 3864292196 | 0) ^ t) ^ e >>> 16, 2246822507), _t((e = bt(e ^ e >>> 13, 3266489909)) ^ e >>> 16)
                                                        }(t.__iterate(r ? e ? function(t, e) {
                                                            n = 31 * n + Rr(yt(t), yt(e)) | 0
                                                        } : function(t, e) {
                                                            n = n + Rr(yt(t), yt(e)) | 0
                                                        } : e ? function(t) {
                                                            n = 31 * n + yt(t) | 0
                                                        } : function(t) {
                                                            n = n + yt(t) | 0
                                                        }), n)
                                                    }(this))
                                                }
                                            });
                                            var Sr = r.prototype;
                                            Sr[f] = !0, Sr[N] = Sr.values, Sr.__toJS = Sr.toArray, Sr.__toStringMapper = Ar, Sr.inspect = Sr.toSource = function() {
                                                return this.toString()
                                            }, Sr.chain = Sr.flatMap, Sr.contains = Sr.includes, Er(n, {
                                                flip: function() {
                                                    return ze(this, Oe(this))
                                                },
                                                mapEntries: function(t, e) {
                                                    var r = this,
                                                        n = 0;
                                                    return ze(this, this.toSeq().map((function(i, o) {
                                                        return t.call(e, [o, i], n++, r)
                                                    })).fromEntrySeq())
                                                },
                                                mapKeys: function(t, e) {
                                                    var r = this;
                                                    return ze(this, this.toSeq().flip().map((function(n, i) {
                                                        return t.call(e, n, i, r)
                                                    })).flip())
                                                }
                                            });
                                            var Ir = n.prototype;

                                            function Tr(t, e) {
                                                return e
                                            }

                                            function Cr(t, e) {
                                                return [e, t]
                                            }

                                            function kr(t) {
                                                return function() {
                                                    return !t.apply(this, arguments)
                                                }
                                            }

                                            function xr(t) {
                                                return function() {
                                                    return -t.apply(this, arguments)
                                                }
                                            }

                                            function Ar(t) {
                                                return "string" == typeof t ? JSON.stringify(t) : String(t)
                                            }

                                            function Or() {
                                                return w(arguments)
                                            }

                                            function Dr(t, e) {
                                                return t < e ? 1 : t > e ? -1 : 0
                                            }

                                            function Rr(t, e) {
                                                return t ^ e + 2654435769 + (t << 6) + (t >> 2) | 0
                                            }
                                            return Ir[l] = !0, Ir[N] = Sr.entries, Ir.__toJS = Sr.toObject, Ir.__toStringMapper = function(t, e) {
                                                return JSON.stringify(e) + ": " + Ar(t)
                                            }, Er(i, {
                                                toKeyedSeq: function() {
                                                    return new Ce(this, !1)
                                                },
                                                filter: function(t, e) {
                                                    return ze(this, Ne(this, t, e, !1))
                                                },
                                                findIndex: function(t, e) {
                                                    var r = this.findEntry(t, e);
                                                    return r ? r[0] : -1
                                                },
                                                indexOf: function(t) {
                                                    var e = this.keyOf(t);
                                                    return void 0 === e ? -1 : e
                                                },
                                                lastIndexOf: function(t) {
                                                    var e = this.lastKeyOf(t);
                                                    return void 0 === e ? -1 : e
                                                },
                                                reverse: function() {
                                                    return ze(this, Re(this, !1))
                                                },
                                                slice: function(t, e) {
                                                    return ze(this, Me(this, t, e, !1))
                                                },
                                                splice: function(t, e) {
                                                    var r = arguments.length;
                                                    if (e = Math.max(0 | e, 0), 0 === r || 2 === r && !e) return this;
                                                    t = C(t, t < 0 ? this.count() : this.size);
                                                    var n = this.slice(0, t);
                                                    return ze(this, 1 === r ? n : n.concat(w(arguments, 2), this.slice(t + e)))
                                                },
                                                findLastIndex: function(t, e) {
                                                    var r = this.findLastEntry(t, e);
                                                    return r ? r[0] : -1
                                                },
                                                first: function() {
                                                    return this.get(0)
                                                },
                                                flatten: function(t) {
                                                    return ze(this, Ue(this, t, !1))
                                                },
                                                get: function(t, e) {
                                                    return (t = S(this, t)) < 0 || 1 / 0 === this.size || void 0 !== this.size && t > this.size ? e : this.find((function(e, r) {
                                                        return r === t
                                                    }), void 0, e)
                                                },
                                                has: function(t) {
                                                    return (t = S(this, t)) >= 0 && (void 0 !== this.size ? 1 / 0 === this.size || t < this.size : -1 !== this.indexOf(t))
                                                },
                                                interpose: function(t) {
                                                    return ze(this, function(t, e) {
                                                        var r = He(t);
                                                        return r.size = t.size && 2 * t.size - 1, r.__iterateUncached = function(r, n) {
                                                            var i = this,
                                                                o = 0;
                                                            return t.__iterate((function(t, n) {
                                                                return (!o || !1 !== r(e, o++, i)) && !1 !== r(t, o++, i)
                                                            }), n), o
                                                        }, r.__iteratorUncached = function(r, n) {
                                                            var i, o = t.__iterator(1, n),
                                                                s = 0;
                                                            return new M((function() {
                                                                return (!i || s % 2) && (i = o.next()).done ? i : s % 2 ? F(r, s++, e) : F(r, s++, i.value, i)
                                                            }))
                                                        }, r
                                                    }(this, t))
                                                },
                                                interleave: function() {
                                                    var t = [this].concat(w(arguments)),
                                                        e = qe(this.toSeq(), V.of, t),
                                                        r = e.flatten(!0);
                                                    return e.size && (r.size = e.size * t.length), ze(this, r)
                                                },
                                                keySeq: function() {
                                                    return ht(0, this.size)
                                                },
                                                last: function() {
                                                    return this.get(-1)
                                                },
                                                skipWhile: function(t, e) {
                                                    return ze(this, Fe(this, t, e, !1))
                                                },
                                                zip: function() {
                                                    var t = [this].concat(w(arguments));
                                                    return ze(this, qe(this, Or, t))
                                                },
                                                zipWith: function(t) {
                                                    var e = w(arguments);
                                                    return e[0] = this, ze(this, qe(this, t, e))
                                                }
                                            }), i.prototype[p] = !0, i.prototype[d] = !0, Er(o, {
                                                get: function(t, e) {
                                                    return this.has(t) ? t : e
                                                },
                                                includes: function(t) {
                                                    return this.has(t)
                                                },
                                                keySeq: function() {
                                                    return this.valueSeq()
                                                }
                                            }), o.prototype.has = Sr.includes, o.prototype.contains = o.prototype.includes, Er(K, n.prototype), Er(V, i.prototype), Er(W, o.prototype), Er(lt, n.prototype), Er(pt, i.prototype), Er(dt, o.prototype), {
                                                Iterable: r,
                                                Seq: z,
                                                Collection: ft,
                                                Map: Ot,
                                                OrderedMap: we,
                                                List: ie,
                                                Stack: br,
                                                Set: er,
                                                OrderedSet: cr,
                                                Record: $e,
                                                Range: ht,
                                                Repeat: ut,
                                                is: st,
                                                fromJS: nt
                                            }
                                        }()
                                    })),
                                    a = function(e) {
                                        var r, n = ("undefined" != typeof self ? self : "undefined" != typeof window || "undefined" != typeof window ? window : t).Symbol;
                                        return "function" == typeof n ? n.observable ? r = n.observable : (r = n("observable"), n.observable = r) : r = "@@observable", r
                                    }(),
                                    u = function() {
                                        return Math.random().toString(36).substring(7).split("").join(".")
                                    },
                                    c = {
                                        INIT: "@@redux/INIT" + u(),
                                        REPLACE: "@@redux/REPLACE" + u(),
                                        PROBE_UNKNOWN_ACTION: function() {
                                            return "@@redux/PROBE_UNKNOWN_ACTION" + u()
                                        }
                                    };

                                function h(t) {
                                    if ("object" != typeof t || null === t) return !1;
                                    for (var e = t; null !== Object.getPrototypeOf(e);) e = Object.getPrototypeOf(e);
                                    return Object.getPrototypeOf(t) === e
                                }

                                function f(t, e, r) {
                                    var n;
                                    if ("function" == typeof e && "function" == typeof r || "function" == typeof r && "function" == typeof arguments[3]) throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");
                                    if ("function" == typeof e && void 0 === r && (r = e, e = void 0), void 0 !== r) {
                                        if ("function" != typeof r) throw new Error("Expected the enhancer to be a function.");
                                        return r(f)(t, e)
                                    }
                                    if ("function" != typeof t) throw new Error("Expected the reducer to be a function.");
                                    var i = t,
                                        o = e,
                                        s = [],
                                        u = s,
                                        l = !1;

                                    function p() {
                                        u === s && (u = s.slice())
                                    }

                                    function d() {
                                        if (l) throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
                                        return o
                                    }

                                    function b(t) {
                                        if ("function" != typeof t) throw new Error("Expected the listener to be a function.");
                                        if (l) throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");
                                        var e = !0;
                                        return p(), u.push(t),
                                            function() {
                                                if (e) {
                                                    if (l) throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");
                                                    e = !1, p();
                                                    var r = u.indexOf(t);
                                                    u.splice(r, 1), s = null
                                                }
                                            }
                                    }

                                    function _(t) {
                                        if (!h(t)) throw new Error("Actions must be plain objects. Use custom middleware for async actions.");
                                        if (void 0 === t.type) throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');
                                        if (l) throw new Error("Reducers may not dispatch actions.");
                                        try {
                                            l = !0, o = i(o, t)
                                        } finally {
                                            l = !1
                                        }
                                        for (var e = s = u, r = 0; r < e.length; r++)(0, e[r])();
                                        return t
                                    }

                                    function y(t) {
                                        if ("function" != typeof t) throw new Error("Expected the nextReducer to be a function.");
                                        i = t, _({
                                            type: c.REPLACE
                                        })
                                    }

                                    function v() {
                                        var t, e = b;
                                        return (t = {
                                            subscribe: function(t) {
                                                if ("object" != typeof t || null === t) throw new TypeError("Expected the observer to be an object.");

                                                function r() {
                                                    t.next && t.next(d())
                                                }
                                                return r(), {
                                                    unsubscribe: e(r)
                                                }
                                            }
                                        })[a] = function() {
                                            return this
                                        }, t
                                    }
                                    return _({
                                        type: c.INIT
                                    }), (n = {
                                        dispatch: _,
                                        subscribe: b,
                                        getState: d,
                                        replaceReducer: y
                                    })[a] = v, n
                                }

                                function l(t, e, r) {
                                    return e in t ? Object.defineProperty(t, e, {
                                        value: r,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : t[e] = r, t
                                }

                                function p(t, e) {
                                    var r = Object.keys(t);
                                    return Object.getOwnPropertySymbols && r.push.apply(r, Object.getOwnPropertySymbols(t)), e && (r = r.filter((function(e) {
                                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                                    }))), r
                                }

                                function d(t) {
                                    for (var e = 1; e < arguments.length; e++) {
                                        var r = null != arguments[e] ? arguments[e] : {};
                                        e % 2 ? p(r, !0).forEach((function(e) {
                                            l(t, e, r[e])
                                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : p(r).forEach((function(e) {
                                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                                        }))
                                    }
                                    return t
                                }

                                function b() {
                                    for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                    return 0 === e.length ? function(t) {
                                        return t
                                    } : 1 === e.length ? e[0] : e.reduce((function(t, e) {
                                        return function() {
                                            return t(e.apply(void 0, arguments))
                                        }
                                    }))
                                }

                                function _() {
                                    for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                    return function(t) {
                                        return function() {
                                            var r = t.apply(void 0, arguments),
                                                n = function() {
                                                    throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")
                                                },
                                                i = {
                                                    getState: r.getState,
                                                    dispatch: function() {
                                                        return n.apply(void 0, arguments)
                                                    }
                                                },
                                                o = e.map((function(t) {
                                                    return t(i)
                                                }));
                                            return d({}, r, {
                                                dispatch: n = b.apply(void 0, o)(r.dispatch)
                                            })
                                        }
                                    }
                                }

                                function y(t) {
                                    return function(e) {
                                        var r = e.dispatch,
                                            n = e.getState;
                                        return function(e) {
                                            return function(i) {
                                                return "function" == typeof i ? i(r, n, t) : e(i)
                                            }
                                        }
                                    }
                                }
                                var v = y();
                                v.withExtraArgument = y;
                                var g = n((function(t, e) {
                                        Object.defineProperty(e, "__esModule", {
                                            value: !0
                                        }), e.default = function(t) {
                                            return t && "@@redux/INIT" === t.type ? "initialState argument passed to createStore" : "previous state received by the reducer"
                                        }, t.exports = e.default
                                    })),
                                    m = n((function(t, e) {
                                        Object.defineProperty(e, "__esModule", {
                                            value: !0
                                        });
                                        var r = i(s),
                                            n = i(g);

                                        function i(t) {
                                            return t && t.__esModule ? t : {
                                                default: t
                                            }
                                        }
                                        e.default = function(t, e, i) {
                                            var o = Object.keys(e);
                                            if (!o.length) return "Store does not have a valid reducer. Make sure the argument passed to combineReducers is an object whose values are reducers.";
                                            var s = (0, n.default)(i);
                                            if (r.default.isImmutable ? !r.default.isImmutable(t) : !r.default.Iterable.isIterable(t)) return "The " + s + ' is of unexpected type. Expected argument to be an instance of Immutable.Collection or Immutable.Record with the following properties: "' + o.join('", "') + '".';
                                            var a = t.toSeq().keySeq().toArray().filter((function(t) {
                                                return !e.hasOwnProperty(t)
                                            }));
                                            return a.length > 0 ? "Unexpected " + (1 === a.length ? "property" : "properties") + ' "' + a.join('", "') + '" found in ' + s + '. Expected to find one of the known reducer property names instead: "' + o.join('", "') + '". Unexpected properties will be ignored.' : null
                                        }, t.exports = e.default
                                    })),
                                    w = n((function(t, e) {
                                        Object.defineProperty(e, "__esModule", {
                                            value: !0
                                        }), e.default = function(t, e, r) {
                                            if (void 0 === t) throw new Error('Reducer "' + e + '" returned undefined when handling "' + r.type + '" action. To ignore an action, you must explicitly return the previous state.')
                                        }, t.exports = e.default
                                    })),
                                    E = n((function(t, e) {
                                        Object.defineProperty(e, "__esModule", {
                                            value: !0
                                        }), e.validateNextState = e.getUnexpectedInvocationParameterMessage = e.getStateName = void 0;
                                        var r = o(g),
                                            n = o(m),
                                            i = o(w);

                                        function o(t) {
                                            return t && t.__esModule ? t : {
                                                default: t
                                            }
                                        }
                                        e.getStateName = r.default, e.getUnexpectedInvocationParameterMessage = n.default, e.validateNextState = i.default
                                    })),
                                    S = n((function(t, e) {
                                        Object.defineProperty(e, "__esModule", {
                                            value: !0
                                        });
                                        var r, n = (r = s) && r.__esModule ? r : {
                                            default: r
                                        };
                                        e.default = function(t) {
                                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.default.Map,
                                                r = Object.keys(t);
                                            return function() {
                                                var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : e(),
                                                    i = arguments[1];
                                                return n.withMutations((function(e) {
                                                    r.forEach((function(r) {
                                                        var n = (0, t[r])(e.get(r), i);
                                                        (0, E.validateNextState)(n, r, i), e.set(r, n)
                                                    }))
                                                }))
                                            }
                                        }, t.exports = e.default
                                    })),
                                    I = function(t) {
                                        return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
                                    }(n((function(t, e) {
                                        Object.defineProperty(e, "__esModule", {
                                            value: !0
                                        }), e.combineReducers = void 0;
                                        var r, n = (r = S) && r.__esModule ? r : {
                                            default: r
                                        };
                                        e.combineReducers = n.default
                                    }))),
                                    T = new Map;
                                T.set("debug", !1);
                                var C = {
                                    initialConfig: {
                                        abr: {
                                            rule: "min",
                                            factor: .75,
                                            samples: 30,
                                            blackoutDuration: 600,
                                            blackoutMaxDuration: 4800
                                        },
                                        cacheSize: 2,
                                        secondsToPrefetch: 20,
                                        secondsToPrefetchAhead: 240,
                                        secondsInBuffer: 30,
                                        secondsToRetryManifest: 10,
                                        maxNetworkRetries: 3,
                                        userAgent: window.navigator.userAgent,
                                        maxPrecedingTime: 3600,
                                        secondsToRetryManifestJitter: 300,
                                        drm: {}
                                    },
                                    getDebugMode: function() {
                                        return T.get("debug")
                                    },
                                    setDebugMode: function(t) {
                                        T.set("debug", t)
                                    }
                                };

                                function k(t, e) {
                                    switch (void 0 === t && (t = s.Map()), e.type) {
                                        case "GET_FRAGMENT_START":
                                            return t.set("isRequesting", !0);
                                        case "GET_FRAGMENT_SUCCEED":
                                            return t.merge({
                                                isRequesting: !1,
                                                data: e.payload.data
                                            });
                                        case "GET_FRAGMENT_FAILED":
                                            return t.set("isRequesting", !1);
                                        case "BUFFER_APPENDING":
                                            return t.set("isBuffering", !0);
                                        case "BUFFER_APPENDED":
                                            return t = t.merge({
                                                isBuffering: !1,
                                                endTime: e.payload.endTime,
                                                startTime: e.payload.startTime
                                            }), void 0 !== e.payload.fragmentIndex && (t = t.set("data", null)), t;
                                        default:
                                            return t
                                    }
                                }

                                function x(t, e) {
                                    var r;
                                    if (void 0 === t && (t = s.List()), !e.payload) return t;
                                    var n = t.get(e.payload.fragmentIndex);
                                    switch (e.type) {
                                        case "INCREASE_DYNAMIC_TRACK_DURATION":
                                            var i = e.payload.newFragments.map((function(t) {
                                                return s.fromJS(t)
                                            }));
                                            return (r = t).push.apply(r, i);
                                        case "DECREASE_DYNAMIC_TRACK_DURATION":
                                            return t.splice(-e.payload.numOfFragsToBeRemoved);
                                        default:
                                            return t.set(e.payload.fragmentIndex, k(n, e))
                                    }
                                }
                                var A = s.Map({
                                    trackIds: s.List()
                                });

                                function O(t, e) {
                                    var r;
                                    switch (void 0 === t && (t = s.List()), e.type) {
                                        case "ADD_TRACK":
                                            var n = e.payload.track.id;
                                            return (r = t.indexOf(n)) >= 0 && (t = t.remove(r)), t.push(n);
                                        case "REMOVE_TRACK":
                                            return (r = t.indexOf(e.payload.trackId)) < 0 ? t : t.delete(r);
                                        default:
                                            return t
                                    }
                                }
                                var D = s.Map({
                                        id: void 0,
                                        time: 0,
                                        duration: void 0,
                                        stalled: !1,
                                        playing: !1,
                                        seeking: !0,
                                        paused: !0,
                                        ended: !1,
                                        volume: 1,
                                        muted: !1,
                                        repeating: !1,
                                        bitrate: void 0,
                                        codecs: void 0,
                                        started: !1
                                    }),
                                    R = s.Map({
                                        updating: !1
                                    }),
                                    N = s.Map({
                                        readyState: "closed",
                                        sourceBuffer: R
                                    }),
                                    M = {
                                        mediaSource: function(t, e) {
                                            if (void 0 === t && (t = N), !e) return t;
                                            switch (e.type) {
                                                case "MEDIA_SOURCE_OPENED":
                                                    return t.set("readyState", "open");
                                                case "MEDIA_SOURCE_CLOSED":
                                                    return t.set("readyState", "closed");
                                                case "MEDIA_SOURCE_ENDED":
                                                    return t.set("readyState", "ended");
                                                case "BUFFER_APPENDING":
                                                case "BUFFER_APPENDED":
                                                    return t.set("sourceBuffer", function(t, e) {
                                                        if (void 0 === t && (t = R), !e) return t;
                                                        switch (e.type) {
                                                            case "BUFFER_APPENDING":
                                                                return t.set("updating", !0);
                                                            case "BUFFER_APPENDED":
                                                                return t.set("updating", !1);
                                                            default:
                                                                return t
                                                        }
                                                    }(t.get("sourceBuffer"), e));
                                                default:
                                                    return t
                                            }
                                        },
                                        initialMediaSource: N
                                    },
                                    F = function() {
                                        var t = new Audio,
                                            e = window.MediaSource && new MediaSource;
                                        return t.src = !!e && window.URL && "function" == typeof URL.createObjectURL && URL.createObjectURL(e), t._mediaSource = e, t
                                    },
                                    P = s.Map({
                                        audioEl: void 0,
                                        lastBufferedIndex: void 0,
                                        lastBufferedData: void 0,
                                        ranges: s.List(),
                                        mediaSource: M.initialMediaSource
                                    }),
                                    U = s.Map({
                                        count: 0,
                                        list: s.List()
                                    }),
                                    L = "URLSearchParams" in window,
                                    B = "Symbol" in window && "iterator" in Symbol,
                                    j = "FileReader" in window && "Blob" in window && function() {
                                        try {
                                            return new Blob, !0
                                        } catch (t) {
                                            return !1
                                        }
                                    }(),
                                    q = "FormData" in window,
                                    z = "ArrayBuffer" in window;
                                if (z) var K = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"],
                                    V = ArrayBuffer.isView || function(t) {
                                        return t && K.indexOf(Object.prototype.toString.call(t)) > -1
                                    };

                                function W(t) {
                                    if ("string" != typeof t && (t = String(t)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(t) || "" === t) throw new TypeError("Invalid character in header field name");
                                    return t.toLowerCase()
                                }

                                function H(t) {
                                    return "string" != typeof t && (t = String(t)), t
                                }

                                function G(t) {
                                    var e = {
                                        next: function() {
                                            var e = t.shift();
                                            return {
                                                done: void 0 === e,
                                                value: e
                                            }
                                        }
                                    };
                                    return B && (e[Symbol.iterator] = function() {
                                        return e
                                    }), e
                                }

                                function Y(t) {
                                    this.map = {}, t instanceof Y ? t.forEach((function(t, e) {
                                        this.append(e, t)
                                    }), this) : Array.isArray(t) ? t.forEach((function(t) {
                                        this.append(t[0], t[1])
                                    }), this) : t && Object.getOwnPropertyNames(t).forEach((function(e) {
                                        this.append(e, t[e])
                                    }), this)
                                }

                                function J(t) {
                                    if (t.bodyUsed) return Promise.reject(new TypeError("Already read"));
                                    t.bodyUsed = !0
                                }

                                function $(t) {
                                    return new Promise((function(e, r) {
                                        t.onload = function() {
                                            e(t.result)
                                        }, t.onerror = function() {
                                            r(t.error)
                                        }
                                    }))
                                }

                                function X(t) {
                                    var e = new FileReader,
                                        r = $(e);
                                    return e.readAsArrayBuffer(t), r
                                }

                                function Q(t) {
                                    if (t.slice) return t.slice(0);
                                    var e = new Uint8Array(t.byteLength);
                                    return e.set(new Uint8Array(t)), e.buffer
                                }

                                function Z() {
                                    return this.bodyUsed = !1, this._initBody = function(t) {
                                        var e;
                                        this.bodyUsed = this.bodyUsed, this._bodyInit = t, t ? "string" == typeof t ? this._bodyText = t : j && Blob.prototype.isPrototypeOf(t) ? this._bodyBlob = t : q && FormData.prototype.isPrototypeOf(t) ? this._bodyFormData = t : L && URLSearchParams.prototype.isPrototypeOf(t) ? this._bodyText = t.toString() : z && j && (e = t) && DataView.prototype.isPrototypeOf(e) ? (this._bodyArrayBuffer = Q(t.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : z && (ArrayBuffer.prototype.isPrototypeOf(t) || V(t)) ? this._bodyArrayBuffer = Q(t) : this._bodyText = t = Object.prototype.toString.call(t) : this._bodyText = "", this.headers.get("content-type") || ("string" == typeof t ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : L && URLSearchParams.prototype.isPrototypeOf(t) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"))
                                    }, j && (this.blob = function() {
                                        var t = J(this);
                                        if (t) return t;
                                        if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                                        if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                                        if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                                        return Promise.resolve(new Blob([this._bodyText]))
                                    }, this.arrayBuffer = function() {
                                        return this._bodyArrayBuffer ? J(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(X)
                                    }), this.text = function() {
                                        var t, e, r, n = J(this);
                                        if (n) return n;
                                        if (this._bodyBlob) return t = this._bodyBlob, r = $(e = new FileReader), e.readAsText(t), r;
                                        if (this._bodyArrayBuffer) return Promise.resolve(function(t) {
                                            for (var e = new Uint8Array(t), r = new Array(e.length), n = 0; n < e.length; n++) r[n] = String.fromCharCode(e[n]);
                                            return r.join("")
                                        }(this._bodyArrayBuffer));
                                        if (this._bodyFormData) throw new Error("could not read FormData body as text");
                                        return Promise.resolve(this._bodyText)
                                    }, q && (this.formData = function() {
                                        return this.text().then(rt)
                                    }), this.json = function() {
                                        return this.text().then(JSON.parse)
                                    }, this
                                }
                                Y.prototype.append = function(t, e) {
                                    t = W(t), e = H(e);
                                    var r = this.map[t];
                                    this.map[t] = r ? r + ", " + e : e
                                }, Y.prototype.delete = function(t) {
                                    delete this.map[W(t)]
                                }, Y.prototype.get = function(t) {
                                    return t = W(t), this.has(t) ? this.map[t] : null
                                }, Y.prototype.has = function(t) {
                                    return this.map.hasOwnProperty(W(t))
                                }, Y.prototype.set = function(t, e) {
                                    this.map[W(t)] = H(e)
                                }, Y.prototype.forEach = function(t, e) {
                                    for (var r in this.map) this.map.hasOwnProperty(r) && t.call(e, this.map[r], r, this)
                                }, Y.prototype.keys = function() {
                                    var t = [];
                                    return this.forEach((function(e, r) {
                                        t.push(r)
                                    })), G(t)
                                }, Y.prototype.values = function() {
                                    var t = [];
                                    return this.forEach((function(e) {
                                        t.push(e)
                                    })), G(t)
                                }, Y.prototype.entries = function() {
                                    var t = [];
                                    return this.forEach((function(e, r) {
                                        t.push([r, e])
                                    })), G(t)
                                }, B && (Y.prototype[Symbol.iterator] = Y.prototype.entries);
                                var tt = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];

                                function et(t, e) {
                                    var r, n, i = (e = e || {}).body;
                                    if (t instanceof et) {
                                        if (t.bodyUsed) throw new TypeError("Already read");
                                        this.url = t.url, this.credentials = t.credentials, e.headers || (this.headers = new Y(t.headers)), this.method = t.method, this.mode = t.mode, this.signal = t.signal, i || null == t._bodyInit || (i = t._bodyInit, t.bodyUsed = !0)
                                    } else this.url = String(t);
                                    if (this.credentials = e.credentials || this.credentials || "same-origin", !e.headers && this.headers || (this.headers = new Y(e.headers)), this.method = (n = (r = e.method || this.method || "GET").toUpperCase(), tt.indexOf(n) > -1 ? n : r), this.mode = e.mode || this.mode || null, this.signal = e.signal || this.signal, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && i) throw new TypeError("Body not allowed for GET or HEAD requests");
                                    if (this._initBody(i), !("GET" !== this.method && "HEAD" !== this.method || "no-store" !== e.cache && "no-cache" !== e.cache)) {
                                        var o = /([?&])_=[^&]*/;
                                        o.test(this.url) ? this.url = this.url.replace(o, "$1_=" + (new Date).getTime()) : this.url += (/\?/.test(this.url) ? "&" : "?") + "_=" + (new Date).getTime()
                                    }
                                }

                                function rt(t) {
                                    var e = new FormData;
                                    return t.trim().split("&").forEach((function(t) {
                                        if (t) {
                                            var r = t.split("="),
                                                n = r.shift().replace(/\+/g, " "),
                                                i = r.join("=").replace(/\+/g, " ");
                                            e.append(decodeURIComponent(n), decodeURIComponent(i))
                                        }
                                    })), e
                                }

                                function nt(t, e) {
                                    e || (e = {}), this.type = "default", this.status = void 0 === e.status ? 200 : e.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in e ? e.statusText : "", this.headers = new Y(e.headers), this.url = e.url || "", this._initBody(t)
                                }
                                et.prototype.clone = function() {
                                    return new et(this, {
                                        body: this._bodyInit
                                    })
                                }, Z.call(et.prototype), Z.call(nt.prototype), nt.prototype.clone = function() {
                                    return new nt(this._bodyInit, {
                                        status: this.status,
                                        statusText: this.statusText,
                                        headers: new Y(this.headers),
                                        url: this.url
                                    })
                                }, nt.error = function() {
                                    var t = new nt(null, {
                                        status: 0,
                                        statusText: ""
                                    });
                                    return t.type = "error", t
                                };
                                var it = [301, 302, 303, 307, 308];
                                nt.redirect = function(t, e) {
                                    if (-1 === it.indexOf(e)) throw new RangeError("Invalid status code");
                                    return new nt(null, {
                                        status: e,
                                        headers: {
                                            location: t
                                        }
                                    })
                                };
                                var ot = window.DOMException;

                                function st(t, e) {
                                    return new Promise((function(r, n) {
                                        var i = new et(t, e);
                                        if (i.signal && i.signal.aborted) return n(new ot("Aborted", "AbortError"));
                                        var o = new XMLHttpRequest;

                                        function s() {
                                            o.abort()
                                        }
                                        o.onload = function() {
                                            var t, e, n = {
                                                status: o.status,
                                                statusText: o.statusText,
                                                headers: (t = o.getAllResponseHeaders() || "", e = new Y, t.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach((function(t) {
                                                    var r = t.split(":"),
                                                        n = r.shift().trim();
                                                    if (n) {
                                                        var i = r.join(":").trim();
                                                        e.append(n, i)
                                                    }
                                                })), e)
                                            };
                                            n.url = "responseURL" in o ? o.responseURL : n.headers.get("X-Request-URL");
                                            var i = "response" in o ? o.response : o.responseText;
                                            setTimeout((function() {
                                                r(new nt(i, n))
                                            }), 0)
                                        }, o.onerror = function() {
                                            setTimeout((function() {
                                                n(new TypeError("Network request failed"))
                                            }), 0)
                                        }, o.ontimeout = function() {
                                            setTimeout((function() {
                                                n(new TypeError("Network request failed"))
                                            }), 0)
                                        }, o.onabort = function() {
                                            setTimeout((function() {
                                                n(new ot("Aborted", "AbortError"))
                                            }), 0)
                                        }, o.open(i.method, function(t) {
                                            try {
                                                return "" === t && window.location.href ? window.location.href : t
                                            } catch (e) {
                                                return t
                                            }
                                        }(i.url), !0), "include" === i.credentials ? o.withCredentials = !0 : "omit" === i.credentials && (o.withCredentials = !1), "responseType" in o && (j ? o.responseType = "blob" : z && i.headers.get("Content-Type") && -1 !== i.headers.get("Content-Type").indexOf("application/octet-stream") && (o.responseType = "arraybuffer")), i.headers.forEach((function(t, e) {
                                            o.setRequestHeader(e, t)
                                        })), i.signal && (i.signal.addEventListener("abort", s), o.onreadystatechange = function() {
                                            4 === o.readyState && i.signal.removeEventListener("abort", s)
                                        }), o.send(void 0 === i._bodyInit ? null : i._bodyInit)
                                    }))
                                }

                                function at(t) {
                                    if (t.status >= 200 && t.status < 300) return t;
                                    var e = new Error(t.statusText);
                                    throw e.response = t, e.shouldNotRetry = t.status >= 400 && t.status <= 499, e
                                }

                                function ut(t, e, r) {
                                    return (t * e + r) / (e + 1)
                                }

                                function ct(t, e, r) {
                                    return (t * e + r * r) / (e + 1)
                                }

                                function ht(t, e) {
                                    return Math.sqrt(e - t * t)
                                }

                                function ft(t, e, r, n, i) {
                                    var o = t.get("bytesTotal") + r,
                                        s = ut(t.get("bytesMean"), n, r),
                                        a = ct(t.get("bytesMeanSquared"), n, r),
                                        u = ht(s, a),
                                        c = 8 * o / (i / 1e3),
                                        h = ut(t.get("latencyMean"), n, e),
                                        f = ct(t.get("latencyMeanSquared"), n, e);
                                    return {
                                        bitrateMean: c,
                                        bytesTotal: o,
                                        bytesMean: s,
                                        bytesMeanSquared: a,
                                        bytesStDev: u,
                                        latencyMean: h,
                                        latencyMeanSquared: f,
                                        latencyStDev: ht(h, f),
                                        requestTimeTotal: i
                                    }
                                }
                                "function" != typeof ot && ((ot = function(t, e) {
                                    this.message = t, this.name = e;
                                    var r = Error(t);
                                    this.stack = r.stack
                                }).prototype = Object.create(Error.prototype), ot.prototype.constructor = ot), st.polyfill = !0, window.fetch || (window.fetch = st, window.Headers = Y, window.Request = et, window.Response = nt);
                                var lt = function(t, e, r) {
                                        return t.method = t.method || "GET", t.keepAlive = !0, o.Observable.create((function(r) {
                                            fetch(t.url, t).then(at).then((function(t) {
                                                return t[e]()
                                            })).then((function(t) {
                                                r.onNext(t), r.onCompleted()
                                            })).catch((function(t) {
                                                return r.onError(t)
                                            }))
                                        })).retryWhen((function(t) {
                                            return t.scan((function(t, e) {
                                                return {
                                                    count: t.count + 1,
                                                    error: e
                                                }
                                            }), {
                                                count: 0
                                            }).flatMap((function(t) {
                                                if (t.error.shouldNotRetry || t.count >= r) throw t.error;
                                                var e, n, i = (e = t.count, n = Math.floor(Math.random() * Math.pow(2, e)) + 1, Math.round(100 * n));
                                                return window.navigator.onLine ? o.Observable.timer(i) : o.Observable.fromEvent(window, "online").take(1)
                                            }))
                                        }))
                                    },
                                    pt = function() {
                                        return s.Map({
                                            bitrateMean: 0,
                                            requestTimeTotal: 0,
                                            requestsStarted: 0,
                                            requestsCompleted: 0,
                                            requestsFailed: 0,
                                            requestsSucceeded: 0,
                                            bytesTotal: 0,
                                            bytesMean: 0,
                                            bytesMeanSquared: 0,
                                            bytesStDev: 0,
                                            latencyMean: 0,
                                            latencyMeanSquared: 0,
                                            latencyStDev: 0,
                                            latencySucceedMean: 0,
                                            latencySucceedMeanSquared: 0,
                                            latencySucceedStDev: 0,
                                            latencyFailMean: 0,
                                            latencyFailMeanSquared: 0,
                                            latencyFailStDev: 0
                                        })
                                    },
                                    dt = s.Map({
                                        online: !0,
                                        lastRequest: null,
                                        currentTrack: pt(),
                                        session: pt()
                                    }),
                                    bt = function() {
                                        return new s.Map({
                                            latestBandwidthBPS: null,
                                            bandwidthBPS: null
                                        })
                                    },
                                    _t = s.Map({
                                        endedAt: null,
                                        initAt: null,
                                        pausedAt: null,
                                        resumedAt: null,
                                        stalledAt: null,
                                        startedAt: null,
                                        seekedAt: null
                                    }),
                                    yt = I.combineReducers({
                                        abr: function(t, e) {
                                            if (void 0 === t && (t = bt()), !e) return t;
                                            switch (e.type) {
                                                case "UPDATE_CONFIG":
                                                    return bt();
                                                case "UPDATE_LATEST_ABR":
                                                    return t.merge({
                                                        latestBandwidthBPS: e.payload.abr.bandwidthBPS
                                                    });
                                                case "UPDATE_ABR":
                                                    return t.merge({
                                                        latestBandwidthBPS: e.payload.abr.bandwidthBPS,
                                                        bandwidthBPS: e.payload.abr.bandwidthBPS
                                                    });
                                                default:
                                                    return t
                                            }
                                        },
                                        cache: function(t, e) {
                                            var r, n, i, o, a;
                                            if (void 0 === t && (t = A), !e) return t;
                                            switch (e.type) {
                                                case "ADD_TRACK":
                                                    return t.set(o = e.payload.track.id, s.fromJS(e.payload.track)).set("trackIds", O(t.get("trackIds"), e));
                                                case "REMOVE_TRACK":
                                                    return t.remove(e.payload.trackId).set("trackIds", O(t.get("trackIds"), e));
                                                case "REPLACE_TRACK":
                                                case "RESET_TRACK":
                                                    return t.set(e.payload.track.get("id"), e.payload.track);
                                                case "INCREASE_DYNAMIC_TRACK_DURATION":
                                                    return (t = t.mergeDeep(((r = {})[o = e.payload.trackId] = {
                                                        duration: e.payload.availableDuration,
                                                        durationWithOffset: e.payload.availableDurationWithOffset,
                                                        numOfAvailableSegments: e.payload.newNumOfAvailableSegments
                                                    }, r))).getIn([o, "bitrateList"]).forEach((function(r) {
                                                        a = [e.payload.trackId, "bitrates", r, "fragments"], e.payload.newFragments = e.payload.newFragmentsForBitrate[r], t = t.setIn(a, x(t.getIn(a), e))
                                                    })), t;
                                                case "DECREASE_DYNAMIC_TRACK_DURATION":
                                                    return (t = t.mergeDeep(((n = {})[o = e.payload.trackId] = {
                                                        duration: e.payload.availableDuration,
                                                        durationWithOffset: e.payload.availableDurationWithOffset,
                                                        numOfAvailableSegments: e.payload.newNumOfAvailableSegments
                                                    }, n))).getIn([o, "bitrateList"]).forEach((function(r) {
                                                        t = t.setIn(a = [e.payload.trackId, "bitrates", r, "fragments"], x(t.getIn(a), e))
                                                    })), t;
                                                case "GET_MANIFEST_START":
                                                    return t.setIn([e.payload.trackId, "isRequestingManifest"], !0);
                                                case "GET_MANIFEST_FAILED":
                                                    return t.setIn([e.payload.trackId, "isRequestingManifest"], !1);
                                                case "GET_MANIFEST_SUCCEED":
                                                    return t.mergeDeep(((i = {})[o = e.payload.trackId] = {
                                                        manifest: e.payload.manifest,
                                                        isRequestingManifest: !1,
                                                        lastIndexWithEMSG: e.payload.lastIndexWithEMSG
                                                    }, i));
                                                case "UTCTIMING_REQUEST":
                                                    return t.setIn([e.payload.trackId, "isRequestingUTCTiming"], !0);
                                                case "UTCTIMING_REQUEST_FAILED":
                                                    return t.setIn([e.payload.trackId, "isRequestingUTCTiming"], !1);
                                                case "UTCTIMING_REQUESTED":
                                                    return o = e.payload.trackId, t.setIn([e.payload.trackId, "isRequestingUTCTiming"], !1);
                                                case "SET_SERVER_TIME_OFFSET":
                                                    return t.setIn([e.payload.trackId, "serverTimeOffset"], e.payload.serverTimeOffset);
                                                case "SERVER_TIME_SYNC_COMPLETED":
                                                    return t.setIn([e.payload.trackId, "waitingServerTimeSync"], !1);
                                                case "UPDATE_TRACK":
                                                    return o = e.payload.track.get("id"), t.set(o, e.payload.track);
                                                case "END_DYNAMIC_TRACK":
                                                    return t.setIn([e.payload.trackId, "dynamicTrackEnded"], !0);
                                                case "SET_CONTENT_PROTECTION_LABEL":
                                                    return t.setIn([e.payload.trackId, "supportedContentProtection"], e.payload.label);
                                                case "GET_FRAGMENT_START":
                                                case "GET_FRAGMENT_SUCCEED":
                                                case "BUFFER_APPENDING":
                                                case "BUFFER_APPENDED":
                                                    return function(t, e) {
                                                        if (!e) return t;
                                                        if (!t.has(e.payload.trackId)) return t;
                                                        switch (e.type) {
                                                            case "BUFFER_APPENDING":
                                                                var r;
                                                                return r = void 0 === e.payload.fragmentIndex ? [e.payload.trackId, "bitrates", e.payload.bitrate, "initialization"] : [e.payload.trackId, "bitrates", e.payload.bitrate, "fragments", e.payload.fragmentIndex], t.setIn([e.payload.trackId, "bitrates", e.payload.bitrate, "needsInitFragment"], !1).setIn(r, k(t.getIn(r), e));
                                                            case "GET_FRAGMENT_START":
                                                            case "GET_FRAGMENT_SUCCEED":
                                                            case "GET_FRAGMENT_FAILED":
                                                            case "BUFFER_APPENDED":
                                                                if (void 0 === e.payload.fragmentIndex) {
                                                                    var n = [e.payload.trackId, "bitrates", e.payload.bitrate, "initialization"];
                                                                    return t.setIn(n, k(t.getIn(n), e))
                                                                }
                                                                var i = [e.payload.trackId, "bitrates", e.payload.bitrate, "fragments"];
                                                                return t.setIn(i, x(t.getIn(i), e));
                                                            default:
                                                                return t
                                                        }
                                                    }(t, e);
                                                case "GET_LICENSE_START":
                                                case "GET_LICENSE_SUCCEED":
                                                case "GET_LICENSE_FAILED":
                                                case "SESSION_UPDATE_START":
                                                case "SESSION_UPDATE_SUCCEED":
                                                case "SESSION_UPDATE_FAILED":
                                                    if (t.hasIn([o = e.payload.trackId])) {
                                                        var u = [o, "bitrates", e.payload.bitrate, "contentProtections", e.payload.label];
                                                        return t.setIn(u, function(t, e) {
                                                            if (!e) return t;
                                                            switch (e.type) {
                                                                case "GET_LICENSE_START":
                                                                    return t.set("isRequesting", !0);
                                                                case "GET_LICENSE_SUCCEED":
                                                                    return t.merge({
                                                                        isRequesting: !1,
                                                                        data: e.payload.data
                                                                    });
                                                                case "GET_LICENSE_FAILED":
                                                                    return t.merge({
                                                                        isRequesting: !1
                                                                    });
                                                                case "SESSION_UPDATE_START":
                                                                    return t.set("isUpdating", !0);
                                                                case "SESSION_UPDATE_SUCCEED":
                                                                case "SESSION_UPDATE_FAILED":
                                                                    return t.merge({
                                                                        isUpdating: !1,
                                                                        data: null
                                                                    });
                                                                default:
                                                                    return t
                                                            }
                                                        }(t.getIn(u), e))
                                                    }
                                                    return t;
                                                case "NETWORK_OFFLINE":
                                                    return t.get("trackIds").forEach((function(e) {
                                                        t.hasIn([e, "bitrates"]) && (t = t.setIn([e, "bitrates"], t.getIn([e, "bitrates"]).map((function(t) {
                                                            return (t = t.has("fragments") ? t.set("fragments", t.get("fragments").map((function(t) {
                                                                return t.set("isRequesting", !1)
                                                            }))) : t).has("initialization") ? t.setIn(["initialization", "isRequesting"], !1) : t
                                                        }))))
                                                    })), t;
                                                default:
                                                    return t
                                            }
                                        },
                                        config: function(t, e) {
                                            if (void 0 === t && (t = s.fromJS(C.initialConfig)), !e) return t;
                                            var r = e.payload ? e.payload.config : {};
                                            switch (e.type) {
                                                case "UPDATE_CONFIG":
                                                    return t.mergeDeep(s.fromJS(r));
                                                default:
                                                    return t
                                            }
                                        },
                                        errors: function(t, e) {
                                            if (void 0 === t && (t = U), !e) return t;
                                            switch (e.type) {
                                                case "ERROR":
                                                    return t.set("count", t.get("count") + 1).set("list", t.get("list").push(s.fromJS(e.payload)).slice(-10));
                                                default:
                                                    return t
                                            }
                                        },
                                        history: function(t, e) {
                                            return void 0 === t && (t = new s.List), e ? t.size < 10 ? t.unshift(e) : t.unshift(e).setSize(10) : t
                                        },
                                        media: function(t, e) {
                                            var r, n, i;
                                            if (void 0 === t && (t = s.Map({
                                                    _freeAudioEls: s.List(Array.from({
                                                        length: C.initialConfig.cacheSize + 1
                                                    }, F)),
                                                    _limit: C.initialConfig.cacheSize + 1,
                                                    _usedCount: 0
                                                })), !e) return t;
                                            switch (e.type) {
                                                case "ADD_TRACK":
                                                    return t.get(e.payload.track.id) ? t : t.set(e.payload.track.id, P).updateIn([e.payload.track.id, "audioEl"], (function() {
                                                        return Object.assign(t.get("_freeAudioEls").last(), {
                                                            id: e.payload.track.id
                                                        })
                                                    })).update("_freeAudioEls", (function(t) {
                                                        return t.pop()
                                                    })).update("_usedCount", (function(t) {
                                                        return t + 1
                                                    }));
                                                case "REMOVE_TRACK":
                                                    return t.get(e.payload.trackId) ? t.update("_freeAudioEls", (function(r) {
                                                        if (t.get("_usedCount") - 1 + r.size < t.get("_limit")) {
                                                            var n = t.getIn([e.payload.trackId, "audioEl"]);
                                                            return r.push(function(t) {
                                                                return t.src = !!t._mediaSource && window.URL && "function" == typeof URL.createObjectURL && URL.createObjectURL(t._mediaSource), t
                                                            }(n))
                                                        }
                                                        return r
                                                    })).remove(e.payload.trackId).update("_usedCount", (function(t) {
                                                        return t - 1
                                                    })) : t;
                                                case "BUFFER_APPENDED":
                                                    t = t.mergeDeep(((r = {})[i = e.payload.trackId] = {
                                                        lastBufferedData: e.payload.fragment.get("data"),
                                                        lastBufferedIndex: e.payload.fragment.get("index")
                                                    }, r));
                                                case "BUFFER_APPENDING":
                                                case "MEDIA_SOURCE_OPENED":
                                                case "MEDIA_SOURCE_CLOSED":
                                                case "MEDIA_SOURCE_ENDED":
                                                    return t.has(e.payload.trackId) ? t.setIn([e.payload.trackId, "mediaSource"], M.mediaSource(t.getIn([e.payload.trackId, "mediaSource"]), e)) : t;
                                                case "PLAYBACK_SEEK_TO":
                                                case "PLAYBACK_DECREASE_BITRATE":
                                                case "PLAYBACK_INCREASE_BITRATE":
                                                    return t.setIn([e.payload.trackId, "lastBufferedIndex"], void 0);
                                                case "BUFFER_RANGES_UPDATED":
                                                    return t.setIn([e.payload.trackId, "ranges"], s.fromJS(e.payload.ranges));
                                                case "RESET_TRACK":
                                                    return t.setIn([e.payload.track.get("id"), "lastBufferedIndex"], void 0);
                                                case "UPDATE_TRACK":
                                                    return i = e.payload.track.get("id"), t.mergeDeep(((n = {})[i] = {
                                                        lastBufferedIndex: void 0,
                                                        lastBufferedData: void 0
                                                    }, n));
                                                case "UPDATE_CONFIG":
                                                    if (e.payload.config.hasOwnProperty("cacheSize")) {
                                                        var o = e.payload.config.cacheSize + 1,
                                                            a = t.get("_limit");
                                                        if (o > a) {
                                                            for (var u = t.get("_freeAudioEls"), c = 0; c < o - a; ++c) u = u.push(F());
                                                            return t.set("_freeAudioEls", u).set("_limit", o)
                                                        }
                                                        return t.set("_limit", o)
                                                    }
                                                    default:
                                                        return t
                                            }
                                        },
                                        network: function(t, e) {
                                            if (void 0 === t && (t = dt), !e) return t;
                                            switch (e.type) {
                                                case "NETWORK_ONLINE":
                                                    return t.set("online", !0);
                                                case "NETWORK_OFFLINE":
                                                    return t.set("online", !1);
                                                case "GET_FRAGMENT_START":
                                                    return t.updateIn(["session", "requestsStarted"], (function(t) {
                                                        return t + 1
                                                    })).updateIn(["currentTrack", "requestsStarted"], (function(t) {
                                                        return t + 1
                                                    }));
                                                case "GET_FRAGMENT_FAILED":
                                                case "GET_FRAGMENT_SUCCEED":
                                                    return t.mergeDeep({
                                                        lastRequest: e.payload.metrics.lastRequest,
                                                        currentTrack: e.payload.metrics.currentTrack,
                                                        session: e.payload.metrics.session
                                                    });
                                                case "PLAYBACK_SET":
                                                    return t.set("currentTrack", pt().set("id", e.payload.trackId));
                                                default:
                                                    return t
                                            }
                                        },
                                        playback: function(t, e) {
                                            if (void 0 === t && (t = D), !e) return t;
                                            switch (e.type) {
                                                case "PLAYBACK_SET":
                                                    return t.merge({
                                                        id: e.payload.trackId,
                                                        bitrate: e.payload.bitrate,
                                                        codecs: e.payload.codecs,
                                                        time: e.payload.time,
                                                        seeking: !0,
                                                        started: !1,
                                                        duration: void 0
                                                    });
                                                case "PLAYBACK_PLAY":
                                                    return t.merge({
                                                        playing: !0,
                                                        paused: !1,
                                                        ended: !1
                                                    });
                                                case "PLAYBACK_PAUSE":
                                                    return t.merge({
                                                        playing: !1,
                                                        paused: !0
                                                    });
                                                case "PLAYBACK_ENDED":
                                                    return t.merge({
                                                        playing: !1,
                                                        paused: !0,
                                                        ended: !0,
                                                        started: !1
                                                    });
                                                case "PLAYBACK_STARTED":
                                                    return t.merge({
                                                        started: !0,
                                                        seeking: !1
                                                    });
                                                case "PLAYBACK_TOGGLE_MUTE":
                                                    return t.set("muted", !t.get("muted"));
                                                case "PLAYBACK_TOGGLE_REPEAT":
                                                    return t.set("repeating", !t.get("repeating"));
                                                case "PLAYBACK_SET_TIME":
                                                    return t.set("time", e.payload.time);
                                                case "PLAYBACK_SEEK_TO":
                                                    return t.merge({
                                                        time: e.payload.time,
                                                        seeking: !0
                                                    });
                                                case "PLAYBACK_SET_BITRATE":
                                                case "PLAYBACK_INCREASE_BITRATE":
                                                case "PLAYBACK_DECREASE_BITRATE":
                                                    return t.merge({
                                                        bitrate: e.payload.bitrate,
                                                        codecs: e.payload.codecs
                                                    });
                                                case "PLAYBACK_SET_DURATION":
                                                    return t.set("duration", e.payload.duration);
                                                case "PLAYBACK_SET_VOLUME":
                                                    return t.set("volume", e.payload.volume);
                                                case "PLAYBACK_STALLED":
                                                    return t.set("stalled", !0);
                                                case "PLAYBACK_STALL_COMPLETED":
                                                    return t.set("stalled", !1);
                                                case "PLAYBACK_SEEK_COMPLETED":
                                                    return t.merge({
                                                        seeking: !1
                                                    });
                                                case "UPDATE_TRACK":
                                                    var r = e.payload.track && e.payload.track.get("id");
                                                    return t.get("id") === r ? t.merge({
                                                        bitrate: e.payload.playback.bitrate,
                                                        time: e.payload.playback.time
                                                    }) : t;
                                                case "INCREASE_DYNAMIC_TRACK_DURATION":
                                                case "DECREASE_DYNAMIC_TRACK_DURATION":
                                                    return t.set("duration", e.payload.availableDuration);
                                                case "REMOVE_TRACK":
                                                    return e.payload.trackId === t.get("id") ? D.set("volume", t.get("volume")) : t;
                                                default:
                                                    return t
                                            }
                                        },
                                        playbackTimestamps: function(t, e) {
                                            if (void 0 === t && (t = _t), !e) return t;
                                            switch (e.type) {
                                                case "PLAYBACK_SET":
                                                    return _t.merge({
                                                        initAt: Date.now()
                                                    });
                                                case "PLAYBACK_STARTED":
                                                    return t.merge({
                                                        startedAt: Date.now()
                                                    });
                                                case "PLAYBACK_PLAY":
                                                    return t.merge({
                                                        resumedAt: Date.now()
                                                    });
                                                case "PLAYBACK_PAUSE":
                                                    return t.merge({
                                                        pausedAt: Date.now()
                                                    });
                                                case "PLAYBACK_ENDED":
                                                    return t.merge({
                                                        endedAt: Date.now()
                                                    });
                                                case "PLAYBACK_SEEK_TO":
                                                    return t.merge({
                                                        seekedAt: Date.now()
                                                    });
                                                case "PLAYBACK_STALLED":
                                                    return t.merge({
                                                        stalledAt: Date.now()
                                                    });
                                                default:
                                                    return t
                                            }
                                        }
                                    }),
                                    vt = function(t) {
                                        void 0 === t && (t = s.Map());
                                        var e = [v],
                                            r = window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({
                                                name: "Maestro"
                                            }) : b;
                                        return f(yt, t, r(_.apply(void 0, e)))
                                    };

                                function gt(t) {
                                    return o.Observable.create((function(e) {
                                        return t.subscribe((function() {
                                            return e.onNext(t.getState())
                                        }))
                                    }))
                                }

                                function mt(t, e) {
                                    (null == e || e > t.length) && (e = t.length);
                                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                                    return n
                                }

                                function wt(t, e) {
                                    var r;
                                    if ("undefined" == typeof Symbol || null == t[Symbol.iterator]) {
                                        if (Array.isArray(t) || (r = function(t, e) {
                                                if (t) {
                                                    if ("string" == typeof t) return mt(t, void 0);
                                                    var r = Object.prototype.toString.call(t).slice(8, -1);
                                                    return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? mt(t, void 0) : void 0
                                                }
                                            }(t)) || e && t && "number" == typeof t.length) {
                                            r && (t = r);
                                            var n = 0;
                                            return function() {
                                                return n >= t.length ? {
                                                    done: !0
                                                } : {
                                                    done: !1,
                                                    value: t[n++]
                                                }
                                            }
                                        }
                                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                    }
                                    return (r = t[Symbol.iterator]()).next.bind(r)
                                }
                                var Et = n((function(t, e) {
                                    var r = {
                                        parseBuffer: function(t) {
                                            return new n(t).parse()
                                        },
                                        addBoxProcessor: function(t, e) {
                                            "string" == typeof t && "function" == typeof e && (i.prototype._boxProcessors[t] = e)
                                        },
                                        createFile: function() {
                                            return new n
                                        },
                                        createBox: function(t, e, r) {
                                            var n = i.create(t);
                                            return e && e.append(n, r), n
                                        },
                                        createFullBox: function(t, e, n) {
                                            var i = r.createBox(t, e, n);
                                            return i.version = 0, i.flags = 0, i
                                        },
                                        Utils: {}
                                    };
                                    r.Utils.dataViewToString = function(t, e) {
                                        var r = e || "utf-8";
                                        if ("undefined" != typeof TextDecoder) return new TextDecoder(r).decode(t);
                                        var n = [],
                                            i = 0;
                                        if ("utf-8" === r)
                                            for (; i < t.byteLength;) {
                                                var o = t.getUint8(i++);
                                                o < 128 || (o < 224 ? (o = (31 & o) << 6, o |= 63 & t.getUint8(i++)) : o < 240 ? (o = (15 & o) << 12, o |= (63 & t.getUint8(i++)) << 6, o |= 63 & t.getUint8(i++)) : (o = (7 & o) << 18, o |= (63 & t.getUint8(i++)) << 12, o |= (63 & t.getUint8(i++)) << 6, o |= 63 & t.getUint8(i++))), n.push(String.fromCharCode(o))
                                            } else
                                                for (; i < t.byteLength;) n.push(String.fromCharCode(t.getUint8(i++)));
                                        return n.join("")
                                    }, r.Utils.utf8ToByteArray = function(t) {
                                        var e, r;
                                        if ("undefined" != typeof TextEncoder) e = (new TextEncoder).encode(t);
                                        else
                                            for (e = [], r = 0; r < t.length; ++r) {
                                                var n = t.charCodeAt(r);
                                                n < 128 ? e.push(n) : n < 2048 ? (e.push(192 | n >> 6), e.push(128 | 63 & n)) : n < 65536 ? (e.push(224 | n >> 12), e.push(128 | 63 & n >> 6), e.push(128 | 63 & n)) : (e.push(240 | n >> 18), e.push(128 | 63 & n >> 12), e.push(128 | 63 & n >> 6), e.push(128 | 63 & n))
                                            }
                                        return e
                                    }, r.Utils.appendBox = function(t, e, r) {
                                        if (e._offset = t._cursor.offset, e._root = t._root ? t._root : t, e._raw = t._raw, e._parent = t, -1 !== r)
                                            if (null != r) {
                                                var n, i = -1;
                                                if ("number" == typeof r) i = r;
                                                else {
                                                    if ("string" == typeof r) n = r;
                                                    else {
                                                        if ("object" != typeof r || !r.type) return void t.boxes.push(e);
                                                        n = r.type
                                                    }
                                                    for (var o = 0; o < t.boxes.length; o++)
                                                        if (n === t.boxes[o].type) {
                                                            i = o + 1;
                                                            break
                                                        }
                                                }
                                                t.boxes.splice(i, 0, e)
                                            } else t.boxes.push(e)
                                    }, e.parseBuffer = r.parseBuffer, e.addBoxProcessor = r.addBoxProcessor, e.createFile = r.createFile, e.createBox = r.createBox, e.createFullBox = r.createFullBox, e.Utils = r.Utils, r.Cursor = function(t) {
                                        this.offset = void 0 === t ? 0 : t
                                    };
                                    var n = function(t) {
                                        this._cursor = new r.Cursor, this.boxes = [], t && (this._raw = new DataView(t))
                                    };
                                    n.prototype.fetch = function(t) {
                                        var e = this.fetchAll(t, !0);
                                        return e.length ? e[0] : null
                                    }, n.prototype.fetchAll = function(t, e) {
                                        var r = [];
                                        return n._sweep.call(this, t, r, e), r
                                    }, n.prototype.parse = function() {
                                        for (this._cursor.offset = 0, this.boxes = []; this._cursor.offset < this._raw.byteLength;) {
                                            var t = i.parse(this);
                                            if (void 0 === t.type) break;
                                            this.boxes.push(t)
                                        }
                                        return this
                                    }, n._sweep = function(t, e, r) {
                                        for (var i in this.type && this.type == t && e.push(this), this.boxes) {
                                            if (e.length && r) return;
                                            n._sweep.call(this.boxes[i], t, e, r)
                                        }
                                    }, n.prototype.write = function() {
                                        var t, e = 0;
                                        for (t = 0; t < this.boxes.length; t++) e += this.boxes[t].getLength(!1);
                                        var r = new Uint8Array(e);
                                        for (this._rawo = new DataView(r.buffer), this.bytes = r, this._cursor.offset = 0, t = 0; t < this.boxes.length; t++) this.boxes[t].write();
                                        return r.buffer
                                    }, n.prototype.append = function(t, e) {
                                        r.Utils.appendBox(this, t, e)
                                    };
                                    var i = function() {
                                        this._cursor = new r.Cursor
                                    };
                                    i.parse = function(t) {
                                        var e = new i;
                                        return e._offset = t._cursor.offset, e._root = t._root ? t._root : t, e._raw = t._raw, e._parent = t, e._parseBox(), t._cursor.offset = e._raw.byteOffset + e._raw.byteLength, e
                                    }, i.create = function(t) {
                                        var e = new i;
                                        return e.type = t, e.boxes = [], e
                                    }, i.prototype._boxContainers = ["dinf", "edts", "mdia", "meco", "mfra", "minf", "moof", "moov", "mvex", "stbl", "strk", "traf", "trak", "tref", "udta", "vttc", "sinf", "schi", "encv", "enca"], i.prototype._boxProcessors = {}, i.prototype._procField = function(t, e, r) {
                                        this._parsing ? this[t] = this._readField(e, r) : this._writeField(e, r, this[t])
                                    }, i.prototype._procFieldArray = function(t, e, r, n) {
                                        var i;
                                        if (this._parsing)
                                            for (this[t] = [], i = 0; i < e; i++) this[t][i] = this._readField(r, n);
                                        else
                                            for (i = 0; i < this[t].length; i++) this._writeField(r, n, this[t][i])
                                    }, i.prototype._procFullBox = function() {
                                        this._procField("version", "uint", 8), this._procField("flags", "uint", 24)
                                    }, i.prototype._procEntries = function(t, e, r) {
                                        var n;
                                        if (this._parsing)
                                            for (this[t] = [], n = 0; n < e; n++) this[t].push({}), r.call(this, this[t][n]);
                                        else
                                            for (n = 0; n < e; n++) r.call(this, this[t][n])
                                    }, i.prototype._procSubEntries = function(t, e, r, n) {
                                        var i;
                                        if (this._parsing)
                                            for (t[e] = [], i = 0; i < r; i++) t[e].push({}), n.call(this, t[e][i]);
                                        else
                                            for (i = 0; i < r; i++) n.call(this, t[e][i])
                                    }, i.prototype._procEntryField = function(t, e, r, n) {
                                        this._parsing ? t[e] = this._readField(r, n) : this._writeField(r, n, t[e])
                                    }, i.prototype._procSubBoxes = function(t, e) {
                                        var r;
                                        if (this._parsing)
                                            for (this[t] = [], r = 0; r < e; r++) this[t].push(i.parse(this));
                                        else
                                            for (r = 0; r < e; r++) this._rawo ? this[t][r].write() : this.size += this[t][r].getLength()
                                    }, i.prototype._readField = function(t, e) {
                                        switch (t) {
                                            case "uint":
                                                return this._readUint(e);
                                            case "int":
                                                return this._readInt(e);
                                            case "template":
                                                return this._readTemplate(e);
                                            case "string":
                                                return -1 === e ? this._readTerminatedString() : this._readString(e);
                                            case "data":
                                                return this._readData(e);
                                            case "utf8":
                                                return this._readUTF8String();
                                            default:
                                                return -1
                                        }
                                    }, i.prototype._readInt = function(t) {
                                        var e = null,
                                            r = this._cursor.offset - this._raw.byteOffset;
                                        switch (t) {
                                            case 8:
                                                e = this._raw.getInt8(r);
                                                break;
                                            case 16:
                                                e = this._raw.getInt16(r);
                                                break;
                                            case 32:
                                                e = this._raw.getInt32(r);
                                                break;
                                            case 64:
                                                var n = this._raw.getInt32(r),
                                                    i = this._raw.getInt32(r + 4);
                                                e = n * Math.pow(2, 32) + i
                                        }
                                        return this._cursor.offset += t >> 3, e
                                    }, i.prototype._readUint = function(t) {
                                        var e, r, n = null,
                                            i = this._cursor.offset - this._raw.byteOffset;
                                        switch (t) {
                                            case 8:
                                                n = this._raw.getUint8(i);
                                                break;
                                            case 16:
                                                n = this._raw.getUint16(i);
                                                break;
                                            case 24:
                                                n = ((e = this._raw.getUint16(i)) << 8) + (r = this._raw.getUint8(i + 2));
                                                break;
                                            case 32:
                                                n = this._raw.getUint32(i);
                                                break;
                                            case 64:
                                                e = this._raw.getUint32(i), r = this._raw.getUint32(i + 4), n = e * Math.pow(2, 32) + r
                                        }
                                        return this._cursor.offset += t >> 3, n
                                    }, i.prototype._readString = function(t) {
                                        for (var e = "", r = 0; r < t; r++) {
                                            var n = this._readUint(8);
                                            e += String.fromCharCode(n)
                                        }
                                        return e
                                    }, i.prototype._readTemplate = function(t) {
                                        return this._readUint(t / 2) + this._readUint(t / 2) / Math.pow(2, t / 2)
                                    }, i.prototype._readTerminatedString = function() {
                                        for (var t = ""; this._cursor.offset - this._offset < this._raw.byteLength;) {
                                            var e = this._readUint(8);
                                            if (0 === e) break;
                                            t += String.fromCharCode(e)
                                        }
                                        return t
                                    }, i.prototype._readData = function(t) {
                                        var e = t > 0 ? t : this._raw.byteLength - (this._cursor.offset - this._offset);
                                        if (e > 0) {
                                            var r = new Uint8Array(this._raw.buffer, this._cursor.offset, e);
                                            return this._cursor.offset += e, r
                                        }
                                        return null
                                    }, i.prototype._readUTF8String = function() {
                                        var t = this._raw.byteLength - (this._cursor.offset - this._offset),
                                            e = null;
                                        return t > 0 && (e = new DataView(this._raw.buffer, this._cursor.offset, t), this._cursor.offset += t), e ? r.Utils.dataViewToString(e) : e
                                    }, i.prototype._parseBox = function() {
                                        if (this._parsing = !0, this._cursor.offset = this._offset, this._offset + 8 > this._raw.buffer.byteLength) this._root._incomplete = !0;
                                        else {
                                            switch (this._procField("size", "uint", 32), this._procField("type", "string", 4), 1 === this.size && this._procField("largesize", "uint", 64), "uuid" === this.type && this._procFieldArray("usertype", 16, "uint", 8), this.size) {
                                                case 0:
                                                    this._raw = new DataView(this._raw.buffer, this._offset, this._raw.byteLength - this._cursor.offset + 8);
                                                    break;
                                                case 1:
                                                    this._offset + this.size > this._raw.buffer.byteLength ? (this._incomplete = !0, this._root._incomplete = !0) : this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);
                                                    break;
                                                default:
                                                    this._offset + this.size > this._raw.buffer.byteLength ? (this._incomplete = !0, this._root._incomplete = !0) : this._raw = new DataView(this._raw.buffer, this._offset, this.size)
                                            }
                                            this._incomplete || (this._boxProcessors[this.type] && this._boxProcessors[this.type].call(this), -1 !== this._boxContainers.indexOf(this.type) ? this._parseContainerBox() : this._data = this._readData())
                                        }
                                    }, i.prototype._parseFullBox = function() {
                                        this.version = this._readUint(8), this.flags = this._readUint(24)
                                    }, i.prototype._parseContainerBox = function() {
                                        for (this.boxes = []; this._cursor.offset - this._raw.byteOffset < this._raw.byteLength;) this.boxes.push(i.parse(this))
                                    }, i.prototype.append = function(t, e) {
                                        r.Utils.appendBox(this, t, e)
                                    }, i.prototype.getLength = function() {
                                        if (this._parsing = !1, this._rawo = null, this.size = 0, this._procField("size", "uint", 32), this._procField("type", "string", 4), 1 === this.size && this._procField("largesize", "uint", 64), "uuid" === this.type && this._procFieldArray("usertype", 16, "uint", 8), this._boxProcessors[this.type] && this._boxProcessors[this.type].call(this), -1 !== this._boxContainers.indexOf(this.type))
                                            for (var t = 0; t < this.boxes.length; t++) this.size += this.boxes[t].getLength();
                                        return this._data && this._writeData(this._data), this.size
                                    }, i.prototype.write = function() {
                                        switch (this._parsing = !1, this._cursor.offset = this._parent._cursor.offset, this.size) {
                                            case 0:
                                                this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.parent._rawo.byteLength - this._cursor.offset);
                                                break;
                                            case 1:
                                                this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);
                                                break;
                                            default:
                                                this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size)
                                        }
                                        if (this._procField("size", "uint", 32), this._procField("type", "string", 4), 1 === this.size && this._procField("largesize", "uint", 64), "uuid" === this.type && this._procFieldArray("usertype", 16, "uint", 8), this._boxProcessors[this.type] && this._boxProcessors[this.type].call(this), -1 !== this._boxContainers.indexOf(this.type))
                                            for (var t = 0; t < this.boxes.length; t++) this.boxes[t].write();
                                        return this._data && this._writeData(this._data), this._parent._cursor.offset += this.size, this.size
                                    }, i.prototype._writeInt = function(t, e) {
                                        if (this._rawo) {
                                            var r = this._cursor.offset - this._rawo.byteOffset;
                                            switch (t) {
                                                case 8:
                                                    this._rawo.setInt8(r, e);
                                                    break;
                                                case 16:
                                                    this._rawo.setInt16(r, e);
                                                    break;
                                                case 32:
                                                    this._rawo.setInt32(r, e);
                                                    break;
                                                case 64:
                                                    var n = Math.floor(e / Math.pow(2, 32)),
                                                        i = e - n * Math.pow(2, 32);
                                                    this._rawo.setUint32(r, n), this._rawo.setUint32(r + 4, i)
                                            }
                                            this._cursor.offset += t >> 3
                                        } else this.size += t >> 3
                                    }, i.prototype._writeUint = function(t, e) {
                                        if (this._rawo) {
                                            var r, n, i = this._cursor.offset - this._rawo.byteOffset;
                                            switch (t) {
                                                case 8:
                                                    this._rawo.setUint8(i, e);
                                                    break;
                                                case 16:
                                                    this._rawo.setUint16(i, e);
                                                    break;
                                                case 24:
                                                    n = 255 & e, this._rawo.setUint16(i, r = (16776960 & e) >> 8), this._rawo.setUint8(i + 2, n);
                                                    break;
                                                case 32:
                                                    this._rawo.setUint32(i, e);
                                                    break;
                                                case 64:
                                                    n = e - (r = Math.floor(e / Math.pow(2, 32))) * Math.pow(2, 32), this._rawo.setUint32(i, r), this._rawo.setUint32(i + 4, n)
                                            }
                                            this._cursor.offset += t >> 3
                                        } else this.size += t >> 3
                                    }, i.prototype._writeString = function(t, e) {
                                        for (var r = 0; r < t; r++) this._writeUint(8, e.charCodeAt(r))
                                    }, i.prototype._writeTerminatedString = function(t) {
                                        if (0 !== t.length) {
                                            for (var e = 0; e < t.length; e++) this._writeUint(8, t.charCodeAt(e));
                                            this._writeUint(8, 0)
                                        }
                                    }, i.prototype._writeTemplate = function(t, e) {
                                        var r = Math.floor(e),
                                            n = (e - r) * Math.pow(2, t / 2);
                                        this._writeUint(t / 2, r), this._writeUint(t / 2, n)
                                    }, i.prototype._writeData = function(t) {
                                        if (t)
                                            if (this._rawo) {
                                                if (t instanceof Array) {
                                                    for (var e = this._cursor.offset - this._rawo.byteOffset, r = 0; r < t.length; r++) this._rawo.setInt8(e + r, t[r]);
                                                    this._cursor.offset += t.length
                                                }
                                                t instanceof Uint8Array && (this._root.bytes.set(t, this._cursor.offset), this._cursor.offset += t.length)
                                            } else this.size += t.length
                                    }, i.prototype._writeUTF8String = function(t) {
                                        var e = r.Utils.utf8ToByteArray(t);
                                        if (this._rawo)
                                            for (var n = new DataView(this._rawo.buffer, this._cursor.offset, e.length), i = 0; i < e.length; i++) n.setUint8(i, e[i]);
                                        else this.size += e.length
                                    }, i.prototype._writeField = function(t, e, r) {
                                        switch (t) {
                                            case "uint":
                                                this._writeUint(e, r);
                                                break;
                                            case "int":
                                                this._writeInt(e, r);
                                                break;
                                            case "template":
                                                this._writeTemplate(e, r);
                                                break;
                                            case "string":
                                                -1 == e ? this._writeTerminatedString(r) : this._writeString(e, r);
                                                break;
                                            case "data":
                                                this._writeData(r);
                                                break;
                                            case "utf8":
                                                this._writeUTF8String(r)
                                        }
                                    }, i.prototype._boxProcessors.avc1 = i.prototype._boxProcessors.avc2 = i.prototype._boxProcessors.avc3 = i.prototype._boxProcessors.avc4 = i.prototype._boxProcessors.hvc1 = i.prototype._boxProcessors.hev1 = i.prototype._boxProcessors.encv = function() {
                                        this._procFieldArray("reserved1", 6, "uint", 8), this._procField("data_reference_index", "uint", 16), this._procField("pre_defined1", "uint", 16), this._procField("reserved2", "uint", 16), this._procFieldArray("pre_defined2", 3, "uint", 32), this._procField("width", "uint", 16), this._procField("height", "uint", 16), this._procField("horizresolution", "template", 32), this._procField("vertresolution", "template", 32), this._procField("reserved3", "uint", 32), this._procField("frame_count", "uint", 16), this._procFieldArray("compressorname", 32, "uint", 8), this._procField("depth", "uint", 16), this._procField("pre_defined3", "int", 16), this._procField("config", "data", -1)
                                    }, i.prototype._boxProcessors.dref = function() {
                                        this._procFullBox(), this._procField("entry_count", "uint", 32), this._procSubBoxes("entries", this.entry_count)
                                    }, i.prototype._boxProcessors.elst = function() {
                                        this._procFullBox(), this._procField("entry_count", "uint", 32), this._procEntries("entries", this.entry_count, (function(t) {
                                            this._procEntryField(t, "segment_duration", "uint", 1 === this.version ? 64 : 32), this._procEntryField(t, "media_time", "int", 1 === this.version ? 64 : 32), this._procEntryField(t, "media_rate_integer", "int", 16), this._procEntryField(t, "media_rate_fraction", "int", 16)
                                        }))
                                    }, i.prototype._boxProcessors.emsg = function() {
                                        this._procFullBox(), 1 == this.version ? (this._procField("timescale", "uint", 32), this._procField("presentation_time", "uint", 64), this._procField("event_duration", "uint", 32), this._procField("id", "uint", 32), this._procField("scheme_id_uri", "string", -1), this._procField("value", "string", -1)) : (this._procField("scheme_id_uri", "string", -1), this._procField("value", "string", -1), this._procField("timescale", "uint", 32), this._procField("presentation_time_delta", "uint", 32), this._procField("event_duration", "uint", 32), this._procField("id", "uint", 32)), this._procField("message_data", "data", -1)
                                    }, i.prototype._boxProcessors.free = i.prototype._boxProcessors.skip = function() {
                                        this._procField("data", "data", -1)
                                    }, i.prototype._boxProcessors.frma = function() {
                                        this._procField("data_format", "uint", 32)
                                    }, i.prototype._boxProcessors.ftyp = i.prototype._boxProcessors.styp = function() {
                                        this._procField("major_brand", "string", 4), this._procField("minor_version", "uint", 32);
                                        var t = -1;
                                        this._parsing && (t = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4), this._procFieldArray("compatible_brands", t, "string", 4)
                                    }, i.prototype._boxProcessors.hdlr = function() {
                                        this._procFullBox(), this._procField("pre_defined", "uint", 32), this._procField("handler_type", "string", 4), this._procFieldArray("reserved", 3, "uint", 32), this._procField("name", "string", -1)
                                    }, i.prototype._boxProcessors.mdat = function() {
                                        this._procField("data", "data", -1)
                                    }, i.prototype._boxProcessors.mdhd = function() {
                                        this._procFullBox(), this._procField("creation_time", "uint", 1 == this.version ? 64 : 32), this._procField("modification_time", "uint", 1 == this.version ? 64 : 32), this._procField("timescale", "uint", 32), this._procField("duration", "uint", 1 == this.version ? 64 : 32), this._parsing || "string" != typeof this.language || (this.language = this.language.charCodeAt(0) - 96 << 10 | this.language.charCodeAt(1) - 96 << 5 | this.language.charCodeAt(2) - 96), this._procField("language", "uint", 16), this._parsing && (this.language = String.fromCharCode(96 + (this.language >> 10 & 31), 96 + (this.language >> 5 & 31), 96 + (31 & this.language))), this._procField("pre_defined", "uint", 16)
                                    }, i.prototype._boxProcessors.mehd = function() {
                                        this._procFullBox(), this._procField("fragment_duration", "uint", 1 == this.version ? 64 : 32)
                                    }, i.prototype._boxProcessors.mfhd = function() {
                                        this._procFullBox(), this._procField("sequence_number", "uint", 32)
                                    }, i.prototype._boxProcessors.mfro = function() {
                                        this._procFullBox(), this._procField("mfra_size", "uint", 32)
                                    }, i.prototype._boxProcessors.mp4a = i.prototype._boxProcessors.enca = function() {
                                        this._procFieldArray("reserved1", 6, "uint", 8), this._procField("data_reference_index", "uint", 16), this._procFieldArray("reserved2", 2, "uint", 32), this._procField("channelcount", "uint", 16), this._procField("samplesize", "uint", 16), this._procField("pre_defined", "uint", 16), this._procField("reserved3", "uint", 16), this._procField("samplerate", "template", 32), this._procField("esds", "data", -1)
                                    }, i.prototype._boxProcessors.mvhd = function() {
                                        this._procFullBox(), this._procField("creation_time", "uint", 1 == this.version ? 64 : 32), this._procField("modification_time", "uint", 1 == this.version ? 64 : 32), this._procField("timescale", "uint", 32), this._procField("duration", "uint", 1 == this.version ? 64 : 32), this._procField("rate", "template", 32), this._procField("volume", "template", 16), this._procField("reserved1", "uint", 16), this._procFieldArray("reserved2", 2, "uint", 32), this._procFieldArray("matrix", 9, "template", 32), this._procFieldArray("pre_defined", 6, "uint", 32), this._procField("next_track_ID", "uint", 32)
                                    }, i.prototype._boxProcessors.payl = function() {
                                        this._procField("cue_text", "utf8")
                                    }, i.prototype._boxProcessors.pssh = function() {
                                        this._procFullBox(), this._procFieldArray("SystemID", 16, "uint", 8), this._procField("DataSize", "uint", 32), this._procFieldArray("Data", this.DataSize, "uint", 8)
                                    }, i.prototype._boxProcessors.schm = function() {
                                        this._procFullBox(), this._procField("scheme_type", "uint", 32), this._procField("scheme_version", "uint", 32), 1 & this.flags && this._procField("scheme_uri", "string", -1)
                                    }, i.prototype._boxProcessors.sdtp = function() {
                                        this._procFullBox();
                                        var t = -1;
                                        this._parsing && (t = this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)), this._procFieldArray("sample_dependency_table", t, "uint", 8)
                                    }, i.prototype._boxProcessors.sidx = function() {
                                        this._procFullBox(), this._procField("reference_ID", "uint", 32), this._procField("timescale", "uint", 32), this._procField("earliest_presentation_time", "uint", 1 == this.version ? 64 : 32), this._procField("first_offset", "uint", 1 == this.version ? 64 : 32), this._procField("reserved", "uint", 16), this._procField("reference_count", "uint", 16), this._procEntries("references", this.reference_count, (function(t) {
                                            this._parsing || (t.reference = (1 & t.reference_type) << 31, t.reference |= 2147483647 & t.referenced_size, t.sap = (1 & t.starts_with_SAP) << 31, t.sap |= (3 & t.SAP_type) << 28, t.sap |= 268435455 & t.SAP_delta_time), this._procEntryField(t, "reference", "uint", 32), this._procEntryField(t, "subsegment_duration", "uint", 32), this._procEntryField(t, "sap", "uint", 32), this._parsing && (t.reference_type = t.reference >> 31 & 1, t.referenced_size = 2147483647 & t.reference, t.starts_with_SAP = t.sap >> 31 & 1, t.SAP_type = t.sap >> 28 & 7, t.SAP_delta_time = 268435455 & t.sap)
                                        }))
                                    }, i.prototype._boxProcessors.smhd = function() {
                                        this._procFullBox(), this._procField("balance", "uint", 16), this._procField("reserved", "uint", 16)
                                    }, i.prototype._boxProcessors.ssix = function() {
                                        this._procFullBox(), this._procField("subsegment_count", "uint", 32), this._procEntries("subsegments", this.subsegment_count, (function(t) {
                                            this._procEntryField(t, "ranges_count", "uint", 32), this._procSubEntries(t, "ranges", t.ranges_count, (function(t) {
                                                this._procEntryField(t, "level", "uint", 8), this._procEntryField(t, "range_size", "uint", 24)
                                            }))
                                        }))
                                    }, i.prototype._boxProcessors.stsd = function() {
                                        this._procFullBox(), this._procField("entry_count", "uint", 32), this._procSubBoxes("entries", this.entry_count)
                                    }, i.prototype._boxProcessors.subs = function() {
                                        this._procFullBox(), this._procField("entry_count", "uint", 32), this._procEntries("entries", this.entry_count, (function(t) {
                                            this._procEntryField(t, "sample_delta", "uint", 32), this._procEntryField(t, "subsample_count", "uint", 16), this._procSubEntries(t, "subsamples", t.subsample_count, (function(t) {
                                                this._procEntryField(t, "subsample_size", "uint", 1 === this.version ? 32 : 16), this._procEntryField(t, "subsample_priority", "uint", 8), this._procEntryField(t, "discardable", "uint", 8), this._procEntryField(t, "codec_specific_parameters", "uint", 32)
                                            }))
                                        }))
                                    }, i.prototype._boxProcessors.tenc = function() {
                                        this._procFullBox(), this._procField("default_IsEncrypted", "uint", 24), this._procField("default_IV_size", "uint", 8), this._procFieldArray("default_KID", 16, "uint", 8)
                                    }, i.prototype._boxProcessors.tfdt = function() {
                                        this._procFullBox(), this._procField("baseMediaDecodeTime", "uint", 1 == this.version ? 64 : 32)
                                    }, i.prototype._boxProcessors.tfhd = function() {
                                        this._procFullBox(), this._procField("track_ID", "uint", 32), 1 & this.flags && this._procField("base_data_offset", "uint", 64), 2 & this.flags && this._procField("sample_description_offset", "uint", 32), 8 & this.flags && this._procField("default_sample_duration", "uint", 32), 16 & this.flags && this._procField("default_sample_size", "uint", 32), 32 & this.flags && this._procField("default_sample_flags", "uint", 32)
                                    }, i.prototype._boxProcessors.tfra = function() {
                                        this._procFullBox(), this._procField("track_ID", "uint", 32), this._parsing || (this.reserved = 0, this.reserved |= (48 & this.length_size_of_traf_num) << 4, this.reserved |= (12 & this.length_size_of_trun_num) << 2, this.reserved |= 3 & this.length_size_of_sample_num), this._procField("reserved", "uint", 32), this._parsing && (this.length_size_of_traf_num = (48 & this.reserved) >> 4, this.length_size_of_trun_num = (12 & this.reserved) >> 2, this.length_size_of_sample_num = 3 & this.reserved), this._procField("number_of_entry", "uint", 32), this._procEntries("entries", this.number_of_entry, (function(t) {
                                            this._procEntryField(t, "time", "uint", 1 === this.version ? 64 : 32), this._procEntryField(t, "moof_offset", "uint", 1 === this.version ? 64 : 32), this._procEntryField(t, "traf_number", "uint", 8 * (this.length_size_of_traf_num + 1)), this._procEntryField(t, "trun_number", "uint", 8 * (this.length_size_of_trun_num + 1)), this._procEntryField(t, "sample_number", "uint", 8 * (this.length_size_of_sample_num + 1))
                                        }))
                                    }, i.prototype._boxProcessors.tkhd = function() {
                                        this._procFullBox(), this._procField("creation_time", "uint", 1 == this.version ? 64 : 32), this._procField("modification_time", "uint", 1 == this.version ? 64 : 32), this._procField("track_ID", "uint", 32), this._procField("reserved1", "uint", 32), this._procField("duration", "uint", 1 == this.version ? 64 : 32), this._procFieldArray("reserved2", 2, "uint", 32), this._procField("layer", "uint", 16), this._procField("alternate_group", "uint", 16), this._procField("volume", "template", 16), this._procField("reserved3", "uint", 16), this._procFieldArray("matrix", 9, "template", 32), this._procField("width", "template", 32), this._procField("height", "template", 32)
                                    }, i.prototype._boxProcessors.trex = function() {
                                        this._procFullBox(), this._procField("track_ID", "uint", 32), this._procField("default_sample_description_index", "uint", 32), this._procField("default_sample_duration", "uint", 32), this._procField("default_sample_size", "uint", 32), this._procField("default_sample_flags", "uint", 32)
                                    }, i.prototype._boxProcessors.trun = function() {
                                        this._procFullBox(), this._procField("sample_count", "uint", 32), 1 & this.flags && this._procField("data_offset", "int", 32), 4 & this.flags && this._procField("first_sample_flags", "uint", 32), this._procEntries("samples", this.sample_count, (function(t) {
                                            256 & this.flags && this._procEntryField(t, "sample_duration", "uint", 32), 512 & this.flags && this._procEntryField(t, "sample_size", "uint", 32), 1024 & this.flags && this._procEntryField(t, "sample_flags", "uint", 32), 2048 & this.flags && this._procEntryField(t, "sample_composition_time_offset", 1 === this.version ? "int" : "uint", 32)
                                        }))
                                    }, i.prototype._boxProcessors["url "] = i.prototype._boxProcessors["urn "] = function() {
                                        this._procFullBox(), "urn " === this.type && this._procField("name", "string", -1), this._procField("location", "string", -1)
                                    }, i.prototype._boxProcessors.vlab = function() {
                                        this._procField("source_label", "utf8")
                                    }, i.prototype._boxProcessors.vmhd = function() {
                                        this._procFullBox(), this._procField("graphicsmode", "uint", 16), this._procFieldArray("opcolor", 3, "uint", 16)
                                    }, i.prototype._boxProcessors.vttC = function() {
                                        this._procField("config", "utf8")
                                    }, i.prototype._boxProcessors.vtte = function() {}
                                }));

                                function St(t, e) {
                                    if (t)
                                        for (var r = 0; r < t.size; r++) {
                                            var n = t.get(r),
                                                i = n.get(0),
                                                o = n.get(1);
                                            if (e >= i && e <= o) return n
                                        }
                                }
                                var It = {
                                        bufferToRanges: function(t) {
                                            try {
                                                for (var e = t.buffered.length, r = [], n = 0; n < e; n++) {
                                                    var i = t.buffered.start(n),
                                                        o = t.buffered.end(n);
                                                    r.push([i, o])
                                                }
                                                return r
                                            } catch (t) {
                                                return []
                                            }
                                        },
                                        getRange: St,
                                        bufferedAheadOf: function(t, e) {
                                            var r = St(t, e);
                                            return r ? r.get(1) - e : e
                                        },
                                        bufferedBehindBy: function(t, e) {
                                            if (0 === t.size) return 0;
                                            var r = 0;
                                            return t.forEach((function(t) {
                                                t.get(0) < e && (r += Math.min(e, t.get(1)) - t.get(0))
                                            })), r
                                        },
                                        getBufferedDuration: function(t) {
                                            return t.reduce((function(t, e) {
                                                return e[1] - e[0] + t
                                            }), 0)
                                        }
                                    },
                                    Tt = function(t, e, r) {
                                        return t.replace(new RegExp("\\$" + e + "\\$", "g"), r)
                                    },
                                    Ct = function(t, e) {
                                        return Number(Math.floor(t + "e" + e) + "e-" + e)
                                    };

                                function kt(t, e) {
                                    return e.getIn(["cache", t])
                                }

                                function xt(t, e) {
                                    return e.getIn(["media", t, "mediaSource", "readyState"])
                                }

                                function At(t, e) {
                                    return t.getIn(["bitrates", e, "fragments"])
                                }

                                function Ot(t, e, r) {
                                    return isNaN(t) ? 0 : -1 === t ? It.getRange(r, e) ? 1 : 0 : It.getRange(r, t + .1) ? 1 : 0
                                }

                                function Dt(t, e, r) {
                                    return void 0 === r && (r = 0), Math.floor(e / t) - r
                                }

                                function Rt(t, e, r, n) {
                                    return void 0 === n && (n = 0), t.get(Dt(e, r, n))
                                }

                                function Nt(t) {
                                    var e = Date.now() / 1e3 - function(t) {
                                        var e = isNaN(t.get("serverTimeOffset")) ? 0 : t.get("serverTimeOffset");
                                        return t.get("availabilityStartTime") - e
                                    }(t) + function(t) {
                                        return t.get("fragmentDuration") * t.get("startNumber")
                                    }(t);
                                    return Math.max(0, Ct(e, 2))
                                }

                                function Mt(t) {
                                    var e = Nt(t) - t.get("suggestedPresentationDelay") - t.get("minBufferTime");
                                    return Math.max(0, Ct(e, 2))
                                }

                                function Ft(t, e) {
                                    return Et.parseBuffer(t).fetch(e)
                                }
                                var Pt = {
                                        getTrack: kt,
                                        getCurrentTrack: function(t) {
                                            return kt(t.getIn(["playback", "id"]), t)
                                        },
                                        isFullyBuffered: function(t, e) {
                                            var r = e.getIn(["cache", t, "duration"]),
                                                n = e.getIn(["media", t, "ranges"]);
                                            return It.getBufferedDuration(n) >= r - .01
                                        },
                                        getMediaReadyState: xt,
                                        getCurrentMediaReadyState: function(t) {
                                            return xt(t.getIn(["playback", "id"]), t)
                                        },
                                        getNextFragmentToFetch: function(t, e, r, n, i) {
                                            void 0 === n && (n = 0), void 0 === i && (i = 0);
                                            var o = t.get("isDynamic") ? Mt(t) : n,
                                                s = t.get("fragmentDuration"),
                                                a = Math.floor(o / s) - t.get("fragmentIndexOffset"),
                                                u = Math.ceil(i / s);
                                            return At(t, e).slice(a, a + u).filter((function(t) {
                                                return !Ot(t.get("startTime"), t.get("endTime"), r)
                                            })).filter((function(t) {
                                                return !t.get("isRequesting") && !t.get("data")
                                            })).first()
                                        },
                                        getNextFragmentToAppend: function(t) {
                                            var e = t.lastBufferedIndex,
                                                r = t.defaultStartIndex,
                                                n = t.fragmentIndexOffset;
                                            void 0 === e && (e = (void 0 === r ? 0 : r) - 1);
                                            var i = t.fragments.get(e + 1 - (void 0 === n ? 0 : n));
                                            if (i && i.get("data")) return i
                                        },
                                        getCurrentNextFragmentToAppend: function(t) {
                                            var e, r = t.time,
                                                n = t.ranges,
                                                i = t.fragments,
                                                o = t.fragmentDuration,
                                                s = t.lastBufferedIndex,
                                                a = t.fragmentIndexOffset,
                                                u = void 0 === a ? 0 : a;
                                            return n && 0 !== n.size ? function(t, e, r) {
                                                var n = t.slice(r, t.size).filter((function(t) {
                                                    return !Ot(t.get("startTime"), t.get("endTime"), e)
                                                })).first();
                                                return n && n.get("data") ? n : void 0
                                            }(i, n, It.getRange(n, r) && s >= 0 ? s + 1 - u : Dt(o, r, u)) : (e = Rt(i, o, r, u)) && e.get("data") ? e : void 0
                                        },
                                        getFragmentAtTime: Rt,
                                        getInitFragment: function(t, e) {
                                            return t.getIn(["bitrates", e.toString(), "initialization"])
                                        },
                                        getFragmentsForBitrate: At,
                                        getMimeType: function(t, e) {
                                            var r = t.getIn(["bitrates", e]);
                                            return r.get("mimeType") + ';codecs="' + r.get("codecs") + '"'
                                        },
                                        getBitrate: function(t, e) {
                                            var r = s.Map.isMap(t) ? t : e.getIn(["cache", t]);
                                            if (r && r.get("fragmented")) {
                                                var n = e.getIn(["playback", "id"]);
                                                return r.get("id") === n && e.getIn(["playback", "bitrate"]) ? e.getIn(["playback", "bitrate"]) : r.get("startBitrate")
                                            }
                                        },
                                        isRequestingAFragment: function(t, e) {
                                            for (var r, n = wt(At(t, e)); !(r = n()).done;)
                                                if (r.value.get("isRequesting")) return !0;
                                            return !1
                                        },
                                        isFragmentRequestable: function(t, e, r) {
                                            if (!t) return !1;
                                            var n = t.get("isRequesting"),
                                                i = !!t.get("data"),
                                                o = Ot(t.get("startTime"), t.get("endTime"), r);
                                            return !(n || i || o)
                                        },
                                        getDynamicTrackDuration: Nt,
                                        getDynamicTrackDurationWithOffset: Mt,
                                        getNewFragmentForDynamicTrack: function(t, e, r) {
                                            var n = t.getIn(["bitrates", e, "urlTemplate"]);
                                            return {
                                                url: Tt(n, "Number", r),
                                                data: null,
                                                index: r,
                                                endTime: -1,
                                                startTime: -1,
                                                isRequesting: !1,
                                                isBuffering: !1
                                            }
                                        },
                                        getEMSGEvents: function(t, e) {
                                            var r = t.get("inbandEventStreams"),
                                                n = Ft(e, "emsg"),
                                                i = [];
                                            if (r && n) {
                                                var o = n.scheme_id_uri;
                                                r.forEach((function(t) {
                                                    var e = t.toJS();
                                                    if (e.schemeIdUri === o) {
                                                        var r = Object.assign({}, e, {
                                                            presentationTimeDelta: n.presentation_time_delta,
                                                            schemeIdUri: o,
                                                            messageData: n.message_data,
                                                            value: n.value,
                                                            id: n.id
                                                        });
                                                        i.push(r)
                                                    }
                                                }))
                                            }
                                            return i
                                        },
                                        isFragmentInBufferedRanges: Ot,
                                        getIndexForFragment: function(t, e) {
                                            var r = e.get("index");
                                            return void 0 === r ? void 0 : r - t.get("fragmentIndexOffset")
                                        },
                                        getFragmentStartTime: function(t) {
                                            var e = Ft(t, "sidx");
                                            return e && e.timescale ? e.earliest_presentation_time / e.timescale : -1
                                        },
                                        getFragmentEndTime: function(t) {
                                            return t && 0 !== t.length ? t[t.length - 1][1] : -1
                                        },
                                        getTrackContentProtection: function(t, e) {
                                            return t && t.get("supportedContentProtection") ? t.getIn(["bitrates", e, "contentProtections", t.get("supportedContentProtection")]) : null
                                        }
                                    },
                                    Ut = function(t, e) {
                                        return t < e - 1 || t > e + 1
                                    },
                                    Lt = function(t, e) {
                                        var r = s.Map.isMap(t) ? t.get("bitrateList") : s.List(t.bitrateList);
                                        return r.find((function(t) {
                                            return e >= t
                                        })) || r.last()
                                    },
                                    Bt = function(t) {
                                        return void 0 === t && (t = 0), {
                                            type: "PLAYBACK_SET_TIME",
                                            payload: {
                                                time: t
                                            }
                                        }
                                    },
                                    jt = function(t) {
                                        return function(e, r) {
                                            var n = r(),
                                                i = n.getIn(["playback", "time"]);
                                            if (Ut(t, i)) {
                                                var o = !1,
                                                    s = Pt.getCurrentTrack(n),
                                                    a = s && s.get("id");
                                                if (s && s.get("fragmented")) {
                                                    var u = n.getIn(["media", a, "ranges"]);
                                                    if (0 === t) {
                                                        var c = u.first();
                                                        if (c) {
                                                            var h = c.first();
                                                            h < 1 && (t = h)
                                                        }
                                                    } else {
                                                        var f = n.getIn(["media", a, "ranges"]);
                                                        It.getRange(f, t) || (o = !0)
                                                    }
                                                }
                                                e({
                                                    type: "PLAYBACK_SEEK_TO",
                                                    payload: {
                                                        trackId: a,
                                                        time: t,
                                                        seekToUnbufferedPosition: o
                                                    }
                                                })
                                            }
                                        }
                                    },
                                    qt = function(t) {
                                        return {
                                            type: "PLAYBACK_SET_DURATION",
                                            payload: {
                                                duration: t
                                            }
                                        }
                                    },
                                    zt = function() {
                                        return function(t, e) {
                                            var r = e(),
                                                n = Pt.getCurrentTrack(r);
                                            if (n && r.getIn(["playback", "bitrate"])) {
                                                var i = r.getIn(["abr", "bandwidthBPS"]);
                                                if (i >= 0) {
                                                    var o = Lt(n, i);
                                                    t({
                                                        type: "PLAYBACK_SET_BITRATE",
                                                        payload: {
                                                            bitrate: o,
                                                            codecs: n.getIn(["bitrates", o, "codecs"])
                                                        }
                                                    })
                                                }
                                            }
                                        }
                                    },
                                    Kt = /^P(([\d.]*)Y)?(([\d.]*)M)?(([\d.]*)D)?T?(([\d.]*)H)?(([\d.]*)M)?(([\d.]*)S)?/,
                                    Vt = /([0-9]+)-([0-9]+)/;

                                function Wt(t) {
                                    return new Date(Date.parse(t))
                                }

                                function Ht(t) {
                                    return t
                                }

                                function Gt(t) {
                                    return "true" === t
                                }

                                function Yt(t) {
                                    if (!t) return 0;
                                    if (t.match(/^\d+/)) return parseInt(t, 10);
                                    var e = Kt.exec(t);
                                    return 365 * parseFloat(e[2] || 0) * 24 * 60 * 60 + 30 * parseFloat(e[4] || 0) * 24 * 60 * 60 + 24 * parseFloat(e[6] || 0) * 60 * 60 + 60 * parseFloat(e[8] || 0) * 60 + 60 * parseFloat(e[10] || 0) + parseFloat(e[12] || 0)
                                }

                                function Jt(t) {
                                    return "true" === t || "false" !== t && parseInt(t, 10)
                                }

                                function $t(t) {
                                    var e = Vt.exec(t);
                                    return e ? [+e[1], +e[2]] : null
                                }
                                var Xt = {
                                    id: Ht,
                                    profiles: Ht,
                                    type: Ht,
                                    availabilityStartTime: Wt,
                                    availabilityEndTime: Wt,
                                    publishTime: Wt,
                                    mediaPresentationDuration: Yt,
                                    minimumUpdatePeriod: Yt,
                                    minBufferTime: Yt,
                                    timeShiftBufferDepth: Yt,
                                    suggestedPresentationDelay: Yt,
                                    maxSegmentDuration: Yt,
                                    maxSubsegmentDuration: Yt,
                                    start: Yt,
                                    duration: Yt,
                                    bitstreamSwitching: Gt,
                                    group: parseInt,
                                    lang: Ht,
                                    contentType: Ht,
                                    par: Ht,
                                    minBandwidth: parseInt,
                                    maxBandwidth: parseInt,
                                    minWidth: parseInt,
                                    maxWidth: parseInt,
                                    minHeight: parseInt,
                                    maxHeight: parseInt,
                                    minFrameRate: Ht,
                                    maxFrameRate: Ht,
                                    segmentAlignment: Jt,
                                    subsegmentAlignment: Jt,
                                    bandwidth: parseInt,
                                    qualityRanking: parseInt,
                                    index: Ht,
                                    media: Ht,
                                    mediaRange: $t,
                                    indexRange: $t,
                                    schemeIdUri: Ht,
                                    value: Ht,
                                    startNumber: parseInt,
                                    timescale: parseInt,
                                    presentationTimeOffset: parseFloat,
                                    indexRangeExact: Gt,
                                    availabilityTimeOffset: parseFloat,
                                    availabilityTimeComplete: Gt,
                                    width: parseInt,
                                    height: parseInt,
                                    frameRate: Ht,
                                    audioSamplingRate: Ht,
                                    mimeType: Ht,
                                    segmentProfiles: Ht,
                                    codecs: Ht,
                                    maximumSAPPeriod: parseFloat,
                                    maxPlayoutRate: parseFloat,
                                    codingDependency: Gt
                                };

                                function Qt(t, e) {
                                    if (void 0 === e && (e = null), t) {
                                        var r = Array.isArray(t) ? t : [t],
                                            n = e ? {
                                                representation: e
                                            } : {};
                                        return r.map((function(t) {
                                            return Object.assign(t, n)
                                        })).filter((function(t) {
                                            return t && t.hasOwnProperty("schemeIdUri")
                                        }))
                                    }
                                    return []
                                }
                                var Zt = function(t) {
                                        for (var e = window.atob(t.replace(/-/g, "+").replace(/_/g, "/")), r = new Uint8Array(e.length), n = 0; n < e.length; ++n) r[n] = e.charCodeAt(n);
                                        return r
                                    },
                                    te = {
                                        "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed": {
                                            label: "com.widevine.alpha",
                                            initKey: "cenc:pssh"
                                        },
                                        "urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95": {
                                            label: "com.microsoft.playready",
                                            initKey: "mspr:pro"
                                        }
                                    };

                                function ee(t, e) {
                                    var r, n = {
                                        id: t.id,
                                        url: t.url,
                                        duration: Ct(t.duration, 2),
                                        extension: t.extension || (r = t.url, r.split(".").pop().split(/\W+/).shift()),
                                        fragmented: !1,
                                        isEncrypted: !1,
                                        expireAt: t.expiration,
                                        addedAt: Date.now()
                                    };
                                    return "mpd" === n.extension && (n.manifest = t.manifest, function(t, e) {
                                        var r;
                                        if (t.manifest) try {
                                            r = function(t) {
                                                var e, r, n, i, o, a = function t(e) {
                                                    var r = {};
                                                    if (1 === e.nodeType) {
                                                        if (e.attributes.length > 0)
                                                            for (var n = 0; n < e.attributes.length; n++) {
                                                                var i = e.attributes.item(n),
                                                                    o = Xt[i.nodeName];
                                                                r[i.nodeName] = o ? o(i.nodeValue) : i.nodeValue
                                                            }
                                                    } else 3 === e.nodeType && (r = e.nodeValue);
                                                    if (e.hasChildNodes())
                                                        for (var s = 0; s < e.childNodes.length; s++) {
                                                            var a = e.childNodes.item(s),
                                                                u = a.nodeName;
                                                            if (void 0 === r[u]) r[u] = t(a);
                                                            else {
                                                                if (void 0 === r[u].push) {
                                                                    var c = r[u];
                                                                    r[u] = [], r[u].push(c)
                                                                }
                                                                r[u].push(t(a))
                                                            }
                                                        }
                                                    return r
                                                }((new DOMParser).parseFromString(t, "application/xml"));
                                                return function(t) {
                                                    if (t.UTCTiming) {
                                                        var e = Array.isArray(t.UTCTiming) ? t.UTCTiming : [t.UTCTiming];
                                                        t.UTCTiming = e.filter((function(t) {
                                                            return t.hasOwnProperty("schemeIdUri") && t.hasOwnProperty("value")
                                                        }))
                                                    }
                                                }(a.MPD), r = (e = a.MPD).Period, n = Array.isArray(r.AdaptationSet) ? r.AdaptationSet : [r.AdaptationSet], i = [], o = [], n.forEach((function(t) {
                                                    var n;
                                                    i.push.apply(i, (n = t, (Array.isArray(n.Representation) ? n.Representation : [n.Representation]).map((function(t) {
                                                        var i = Qt(t.InbandEventStream);
                                                        if (t.adapationSet = n, n.hasOwnProperty("SegmentTemplate")) {
                                                            var o = e.BaseURL ? e.BaseURL["#text"].replace(/"|'/g, "") : "",
                                                                a = n.SegmentTemplate,
                                                                u = Tt(a.initialization, "RepresentationID", t.id),
                                                                c = Tt(a.media, "RepresentationID", t.id),
                                                                h = e.availabilityStartTime ? e.availabilityStartTime.getTime() / 1e3 : Date.now() / 1e3,
                                                                f = e.suggestedPresentationDelay ? e.suggestedPresentationDelay : 0,
                                                                l = e.minBufferTime ? e.minBufferTime : 0,
                                                                p = a.startNumber,
                                                                d = a.duration / 1e3,
                                                                b = a.presentationTimeOffset / 1e3 || 0,
                                                                _ = e.mediaPresentationDuration || Pt.getDynamicTrackDuration(s.fromJS({
                                                                    availabilityStartTime: h,
                                                                    startNumber: p,
                                                                    fragmentDuration: d
                                                                })),
                                                                y = e.mediaPresentationDuration || _ - f - l,
                                                                v = Math.floor(_ / d),
                                                                g = "dynamic" !== e.type || e.mediaPresentationDuration ? 0 : 1,
                                                                m = g ? Math.max(0, v - C.initialConfig.maxPrecedingTime / d) : 0;
                                                            return Object.assign(t, {
                                                                baseURL: o,
                                                                isDynamic: g,
                                                                startNumber: p,
                                                                minBufferTime: l,
                                                                segmentTemplate: a,
                                                                fragmentDuration: d,
                                                                inbandEventStreams: i,
                                                                fragmentIndexOffset: m,
                                                                availabilityStartTime: h,
                                                                presentationTimeOffset: b,
                                                                numOfAvailableSegments: v,
                                                                suggestedPresentationDelay: f,
                                                                durationWithOffset: Ct(y, 2),
                                                                sourceURL: "" + o + u,
                                                                mimeType: n.mimeType,
                                                                duration: Ct(_, 2),
                                                                codecs: n.codecs,
                                                                type: e.type,
                                                                url: "" + o + c
                                                            })
                                                        }
                                                        var w = Math.min((t.SegmentList.duration / t.SegmentList.timescale).toFixed(2), e.maxSegmentDuration),
                                                            E = Ct(e.mediaPresentationDuration || r.duration, 2),
                                                            S = Array.isArray(t.SegmentList.SegmentURL) ? t.SegmentList.SegmentURL.length : 1;
                                                        return Object.assign(t, {
                                                            duration: E,
                                                            fragmentDuration: w,
                                                            inbandEventStreams: i,
                                                            numOfAvailableSegments: S,
                                                            mimeType: t.mimeType || n.mimeType,
                                                            sourceURL: t.SegmentList.Initialization.sourceURL
                                                        })
                                                    })))), o.push.apply(o, Qt(t.InbandEventStream))
                                                })), e.representations = i.sort((function(t, e) {
                                                    return +e.bandwidth - +t.bandwidth
                                                })), i.forEach((function(t) {
                                                    o.push.apply(o, t.inbandEventStreams)
                                                })), e.inbandEventStreams = o, a
                                            }(t.manifest)
                                        } catch (t) {} finally {
                                            if (!r) return;
                                            var n = r.MPD,
                                                i = n.representations,
                                                o = i.map((function(t) {
                                                    return t.bandwidth.toString()
                                                })),
                                                a = function(t) {
                                                    return t.map((function(t) {
                                                        var e;
                                                        return t.hasOwnProperty("SegmentList") ? e = function(t) {
                                                            return (Array.isArray(t.SegmentList.SegmentURL) ? t.SegmentList.SegmentURL : [t.SegmentList.SegmentURL]).map((function(t, e) {
                                                                return {
                                                                    url: t.media,
                                                                    data: null,
                                                                    index: e,
                                                                    endTime: -1,
                                                                    startTime: -1,
                                                                    isRequesting: !1,
                                                                    isBuffering: !1
                                                                }
                                                            }))
                                                        }(t) : t.hasOwnProperty("segmentTemplate") && (e = function(t) {
                                                            var e = [];
                                                            if (!t.segmentTemplate) return e;
                                                            for (var r = t.numOfAvailableSegments - 1; r >= t.fragmentIndexOffset; r--) e.unshift({
                                                                url: Tt(t.url, "Number", r),
                                                                data: null,
                                                                index: r,
                                                                endTime: -1,
                                                                startTime: -1,
                                                                isRequesting: !1,
                                                                isBuffering: !1
                                                            });
                                                            return e
                                                        }(t)), e
                                                    }))
                                                }(i),
                                                u = function(t) {
                                                    return t.map((function(t) {
                                                        return {
                                                            data: null,
                                                            url: t.sourceURL,
                                                            isRequesting: !1,
                                                            isBuffering: !1
                                                        }
                                                    }))
                                                }(i),
                                                c = i[0],
                                                h = n.UTCTiming,
                                                f = c.isDynamic || !1,
                                                l = f && h && h.length > 0,
                                                p = Array.isArray(n.Period.AdaptationSet) ? n.Period.AdaptationSet[0] : n.Period.AdaptationSet,
                                                d = !(!p || !p);
                                            Object.assign(t, {
                                                waitingServerTimeSync: l,
                                                UTCTiming: h,
                                                isDynamic: f,
                                                isEncrypted: d,
                                                suggestedPresentationDelay: c.suggestedPresentationDelay,
                                                numOfAvailableSegments: c.numOfAvailableSegments,
                                                availabilityStartTime: c.availabilityStartTime,
                                                presentationTimeOffset: c.presentationTimeOffset || 0,
                                                isRequestingManifest: !1,
                                                fragmentIndexOffset: c.fragmentIndexOffset || 0,
                                                durationWithOffset: c.durationWithOffset,
                                                inbandEventStreams: n.inbandEventStreams,
                                                dynamicTrackEnded: !f && void 0,
                                                fragmentDuration: c.fragmentDuration || c.SegmentList.duration / c.SegmentList.timescale,
                                                minBufferTime: c.minBufferTime,
                                                startNumber: c.startNumber || 0,
                                                bitrateList: o,
                                                fragmented: !0,
                                                duration: c.duration,
                                                type: n.type || c.type,
                                                bitrates: o.reduce((function(t, e) {
                                                    var r, n = o.indexOf(e);
                                                    return d && (r = (i[n].adapationSet.ContentProtection || []).filter((function(t) {
                                                        return te[t.schemeIdUri]
                                                    })).map((function(t) {
                                                        return {
                                                            initDataType: "cenc",
                                                            initData: Zt(t[te[t.schemeIdUri].initKey]["#text"]),
                                                            label: te[t.schemeIdUri].label,
                                                            isRequesting: !1,
                                                            isUpdating: !1,
                                                            data: null
                                                        }
                                                    })).reduce((function(t, e) {
                                                        return t[e.label] = e, t
                                                    }), {})), t[e] = {
                                                        needsInitFragment: !!u[n],
                                                        initialization: u[n],
                                                        urlTemplate: i[n].url,
                                                        fragments: a[n],
                                                        mimeType: i[n].mimeType,
                                                        codecs: i[n].codecs,
                                                        contentProtections: r
                                                    }, t
                                                }), {})
                                            }), t.startBitrate = function(t, e) {
                                                var r, n = e.getIn(["abr", "bandwidthBPS"]);
                                                if (n) r = Lt(t, n);
                                                else {
                                                    var i = e.getIn(["config", "abr", "rule"]),
                                                        o = t.bitrateList,
                                                        s = o.length - 1;
                                                    switch (i) {
                                                        case "fixed":
                                                            var a = e.getIn(["config", "abr", "audioQuality"]);
                                                            r = a < s && a >= 0 ? o[a] : o[s];
                                                            break;
                                                        default:
                                                            r = o[s]
                                                    }
                                                }
                                                return r
                                            }(t, e)
                                        }
                                    }(n, e)), n
                                }
                                var re = function(t) {
                                        return {
                                            type: "REMOVE_TRACK",
                                            payload: {
                                                trackId: t
                                            }
                                        }
                                    },
                                    ne = function(t) {
                                        return function(e) {
                                            var r = t.get("id"),
                                                n = Pt.getDynamicTrackDuration(t),
                                                i = Pt.getDynamicTrackDurationWithOffset(t),
                                                o = t.get("numOfAvailableSegments"),
                                                s = Math.floor(n / t.get("fragmentDuration"));
                                            if (s > o) {
                                                var a = {};
                                                t.get("bitrateList").forEach((function(e) {
                                                    for (var r = o, n = []; r < s;) n.push(Pt.getNewFragmentForDynamicTrack(t, e, r)), r++;
                                                    a[e] = n
                                                })), e({
                                                    type: "INCREASE_DYNAMIC_TRACK_DURATION",
                                                    payload: {
                                                        trackId: r,
                                                        availableDuration: n,
                                                        availableDurationWithOffset: i,
                                                        newNumOfAvailableSegments: s,
                                                        newFragmentsForBitrate: a
                                                    }
                                                })
                                            } else s < o && e({
                                                type: "DECREASE_DYNAMIC_TRACK_DURATION",
                                                payload: {
                                                    trackId: r,
                                                    availableDuration: n,
                                                    availableDurationWithOffset: i,
                                                    newNumOfAvailableSegments: s,
                                                    numOfFragsToBeRemoved: o - s
                                                }
                                            })
                                        }
                                    },
                                    ie = function(t) {
                                        return Date.parse(t)
                                    },
                                    oe = function(t, e) {
                                        return void 0 === e && (e = {}), e.timestamp = Date.now(), {
                                            type: "ERROR",
                                            payload: {
                                                error: t,
                                                extra: e
                                            }
                                        }
                                    },
                                    se = function(t, e) {
                                        return function(r, n) {
                                            if ("mpd" === t.get("extension") && t.get("url")) {
                                                var i = n().getIn(["config", "maxNetworkRetries"]),
                                                    o = t.get("id");
                                                return r({
                                                    type: "GET_MANIFEST_START",
                                                    payload: {
                                                        trackId: o
                                                    }
                                                }), lt({
                                                    url: t.get("url"),
                                                    resolver: "text"
                                                }, "text", i).subscribe((function(t) {
                                                    r({
                                                        type: "GET_MANIFEST_SUCCEED",
                                                        payload: {
                                                            trackId: o,
                                                            manifest: t,
                                                            lastIndexWithEMSG: e
                                                        }
                                                    })
                                                }), (function(t) {
                                                    r(oe("NETWORK_ERROR", {
                                                        error: t,
                                                        response: t.response
                                                    })), r({
                                                        type: "GET_MANIFEST_FAILED",
                                                        payload: {
                                                            trackId: o
                                                        }
                                                    })
                                                }))
                                            }
                                        }
                                    },
                                    ae = function(t) {
                                        return function(e) {
                                            var r = t.get("UTCTiming");
                                            if (r) {
                                                var n = t.get("id"),
                                                    i = r.last(),
                                                    o = i.get("value");
                                                switch (i.get("schemeIdUri")) {
                                                    case "urn:mpeg:dash:utc:http-iso:2014":
                                                    case "urn:mpeg:dash:utc:http-iso:2012":
                                                        return void e(function(t, e, r) {
                                                            return function(n, i) {
                                                                var o = i().getIn(["config", "maxNetworkRetries"]);
                                                                return n({
                                                                    type: "UTCTIMING_REQUEST",
                                                                    payload: {
                                                                        trackId: e
                                                                    }
                                                                }), lt({
                                                                    url: r
                                                                }, "text", o).subscribe((function(r) {
                                                                    n({
                                                                        type: "UTCTIMING_REQUESTED",
                                                                        payload: {
                                                                            trackId: e
                                                                        }
                                                                    });
                                                                    var i = Date.now(),
                                                                        o = t(r);
                                                                    n({
                                                                        type: "SET_SERVER_TIME_OFFSET",
                                                                        payload: {
                                                                            trackId: e,
                                                                            serverTimeOffset: (o - i) / 1e3
                                                                        }
                                                                    })
                                                                }), (function(t) {
                                                                    n(oe("NETWORK_ERROR", {
                                                                        error: t,
                                                                        response: t.response
                                                                    })), n({
                                                                        type: "UTCTIMING_REQUEST_FAILED",
                                                                        payload: {
                                                                            trackId: e
                                                                        }
                                                                    })
                                                                }))
                                                            }
                                                        }(ie, n, o));
                                                    default:
                                                        return
                                                }
                                            }
                                        }
                                    },
                                    ue = {
                                        open: function(t) {
                                            return {
                                                type: "MEDIA_SOURCE_OPENED",
                                                payload: {
                                                    trackId: t
                                                }
                                            }
                                        },
                                        closed: function(t) {
                                            return {
                                                type: "MEDIA_SOURCE_CLOSED",
                                                payload: {
                                                    trackId: t
                                                }
                                            }
                                        },
                                        ended: function(t) {
                                            return {
                                                type: "MEDIA_SOURCE_ENDED",
                                                payload: {
                                                    trackId: t
                                                }
                                            }
                                        },
                                        appending: function(t, e, r) {
                                            return {
                                                type: "BUFFER_APPENDING",
                                                payload: {
                                                    trackId: t.get("id"),
                                                    bitrate: e,
                                                    fragmentIndex: Pt.getIndexForFragment(t, r)
                                                }
                                            }
                                        },
                                        appended: function(t, e, r, n, i) {
                                            return {
                                                type: "BUFFER_APPENDED",
                                                payload: {
                                                    endTime: i,
                                                    fragment: r,
                                                    startTime: n,
                                                    trackId: t.get("id"),
                                                    bitrate: e,
                                                    fragmentIndex: Pt.getIndexForFragment(t, r)
                                                }
                                            }
                                        },
                                        rangesUpdated: function(t, e) {
                                            return {
                                                type: "BUFFER_RANGES_UPDATED",
                                                payload: {
                                                    trackId: t,
                                                    ranges: e
                                                }
                                            }
                                        }
                                    };

                                function ce(t) {
                                    return [].slice.call(arguments, 1).reduce((function(t, e) {
                                        return t.map((function(t) {
                                            return t.get(e)
                                        })).distinctUntilChanged()
                                    }), t)
                                }
                                var he = {
                                        propertyObservable: ce,
                                        truthyPropertyObservable: function(t) {
                                            return ce.apply(void 0, [t].concat([].slice.call(arguments, 1))).filter((function(t) {
                                                return t
                                            }))
                                        }
                                    },
                                    fe = function(t) {
                                        return "open" === t
                                    },
                                    le = function(t) {
                                        return "closed" === t
                                    },
                                    pe = {
                                        chrome: 48,
                                        safari: 10,
                                        firefox: 45,
                                        ie: 11,
                                        edge: 13,
                                        "DRM.chrome": 75,
                                        "DRM.firefox": 68
                                    },
                                    de = {
                                        chrome: /Chrome\/((?:\d+)(?:\.\d+)+)/i,
                                        safari: /Version\/((?:\d+)(?:\.\d+)+) Safari\//i,
                                        firefox: /Firefox\/((?:\d+)(?:\.\d+)+)/i,
                                        ie: /[Trident|MSIE].*; rv:((?:\d+)(?:\.\d+)+)/i,
                                        edge: /Edge\/((?:\d+)(?:\.\d+)+)/i
                                    },
                                    be = function() {
                                        function t() {}
                                        return t.getBrowserName = function() {
                                            switch (!0) {
                                                case /chrome/i.test(window.navigator.userAgent) && !/edge/i.test(window.navigator.userAgent):
                                                    return "chrome";
                                                case /safari/i.test(window.navigator.userAgent) && !/chrome/i.test(window.navigator.userAgent):
                                                    return "safari";
                                                case /Firefox/i.test(window.navigator.userAgent):
                                                    return "firefox";
                                                case /MSIE|Trident/i.test(window.navigator.userAgent):
                                                    return "ie";
                                                case /Edge/i.test(window.navigator.userAgent):
                                                    return "edge";
                                                default:
                                                    return "unknown"
                                            }
                                        }, t.getBrowserMajorVersion = function() {
                                            return t.getBrowserVersion()[0]
                                        }, t.getBrowserVersion = function() {
                                            var e = de[t.getBrowserName()];
                                            if (e) {
                                                var r = window.navigator.userAgent.match(e);
                                                return (r && r[1] ? r[1] : "0").split(".").map((function(t) {
                                                    return parseInt(t)
                                                }))
                                            }
                                            return [0]
                                        }, t.isLessThanVersion = function(e) {
                                            for (var r = t.getBrowserVersion(), n = e.split(".").map((function(t) {
                                                    return parseInt(t)
                                                })), i = 0; i < n.length; i++) {
                                                var o = r[i] || 0,
                                                    s = n[i] || 0;
                                                if (o > s) return !1;
                                                if (o < s) return !0
                                            }
                                            return !1
                                        }, t.isVersionSupported = function() {
                                            var e = pe[t.getBrowserName()];
                                            return !e || t.getBrowserMajorVersion() >= e
                                        }, t.isEMEVersionSupported = function() {
                                            var e = pe["DRM." + t.getBrowserName()];
                                            return !e || t.getBrowserMajorVersion() >= e
                                        }, t.isMobileBrowser = function() {
                                            return /Mobi|tablet|ipad|playbook|silk|android/i.test(window.navigator.userAgent)
                                        }, t.isChromeOS = function() {
                                            return /cros/i.test(window.navigator.userAgent)
                                        }, t
                                    }(),
                                    _e = {
                                        isVersionSupported: be.isVersionSupported,
                                        isEMEVersionSupported: be.isEMEVersionSupported,
                                        isLessThanVersion: be.isLessThanVersion,
                                        isMobileBrowser: be.isMobileBrowser,
                                        isChromeOS: be.isChromeOS,
                                        isChrome: function() {
                                            return "chrome" === be.getBrowserName()
                                        },
                                        isFirefox: function() {
                                            return "firefox" === be.getBrowserName()
                                        },
                                        isSafari: function() {
                                            return "safari" === be.getBrowserName()
                                        },
                                        isIE: function() {
                                            return "ie" === be.getBrowserName()
                                        },
                                        isEdge: function() {
                                            return "edge" === be.getBrowserName()
                                        }
                                    },
                                    ye = function(t, e) {
                                        void 0 === e && (e = 0);
                                        var r = t.getIn(["playback", "id"]),
                                            n = Pt.getCurrentTrack(t),
                                            i = t.getIn(["media", r, "audioEl"]);
                                        i.src = n && n.get("url"), _e.isSafari() || _e.isIE() ? o.Observable.fromEvent(i, "canplay").take(1).subscribe((function() {
                                            i.currentTime = e
                                        })) : i.currentTime = e, i.pause(), t.getIn(["playback", "playing"]) && i.play()
                                    },
                                    ve = function(t, e, r) {
                                        return function(n, i) {
                                            if (!t.get("waitingServerTimeSync")) {
                                                var o = i(),
                                                    s = t.get("id"),
                                                    a = Pt.getIndexForFragment(t, r),
                                                    u = o.getIn(["config", "maxNetworkRetries"]),
                                                    c = Date.now(),
                                                    h = t.get("isDynamic");
                                                return n({
                                                    type: "GET_FRAGMENT_START",
                                                    payload: {
                                                        trackId: s,
                                                        fragmentIndex: a,
                                                        bitrate: e
                                                    }
                                                }), lt({
                                                    url: r.get("url")
                                                }, "arrayBuffer", u).subscribe((function(t) {
                                                    var r = function(t, e, r) {
                                                        var n = Date.now() - t,
                                                            i = e.byteLength,
                                                            o = r.getIn(["network", "currentTrack"]),
                                                            s = o.get("requestTimeTotal") + n,
                                                            a = o.get("requestsCompleted"),
                                                            u = o.get("requestsSucceeded"),
                                                            c = ut(o.get("latencySucceedMean"), u, n),
                                                            h = ct(o.get("latencySucceedMeanSquared"), u, n),
                                                            f = ht(c, h),
                                                            l = r.getIn(["network", "session"]),
                                                            p = l.get("requestTimeTotal") + n,
                                                            d = l.get("requestsCompleted"),
                                                            b = l.get("requestsSucceeded"),
                                                            _ = ut(l.get("latencySucceedMean"), b, n),
                                                            y = ct(l.get("latencySucceedMeanSquared"), b, n),
                                                            v = ht(_, y);
                                                        return {
                                                            lastRequest: {
                                                                bitrate: 8 * i / (n / 1e3),
                                                                latency: n,
                                                                size: i,
                                                                time: new Date(t)
                                                            },
                                                            currentTrack: Object.assign(ft(o, n, i, a, s), {
                                                                requestsSucceeded: u + 1,
                                                                requestsCompleted: a + 1,
                                                                latencySucceedMean: c,
                                                                latencySucceedMeanSquared: h,
                                                                latencySucceedStDev: f
                                                            }),
                                                            session: Object.assign(ft(l, n, i, d, p), {
                                                                requestsSucceeded: b + 1,
                                                                requestsCompleted: d + 1,
                                                                latencySucceedMean: _,
                                                                latencySucceedMeanSquared: y,
                                                                latencySucceedStDev: v
                                                            })
                                                        }
                                                    }(c, t, i());
                                                    n({
                                                        type: "GET_FRAGMENT_SUCCEED",
                                                        payload: {
                                                            trackId: s,
                                                            fragmentIndex: a,
                                                            bitrate: e,
                                                            data: t,
                                                            metrics: r
                                                        }
                                                    })
                                                }), (function(t) {
                                                    var r = (new Error).stack,
                                                        o = function(t, e, r) {
                                                            var n = Date.now() - t,
                                                                i = e.response && JSON.stringify(e.response).length,
                                                                o = r.getIn(["network", "currentTrack"]),
                                                                s = o.get("requestTimeTotal") + n,
                                                                a = o.get("requestsCompleted"),
                                                                u = o.get("requestsFailed"),
                                                                c = ut(o.get("latencyFailMean"), u, n),
                                                                h = ct(o.get("latencyFailMeanSquared"), u, n),
                                                                f = ht(c, h),
                                                                l = r.getIn(["network", "session"]),
                                                                p = l.get("requestTimeTotal") + n,
                                                                d = l.get("requestsCompleted"),
                                                                b = l.get("requestsFailed"),
                                                                _ = ut(l.get("latencyFailMean"), b, n),
                                                                y = ct(l.get("latencyFailMeanSquared"), b, n),
                                                                v = ht(_, _);
                                                            return {
                                                                lastRequest: {
                                                                    bitrate: 8 * i / (n / 1e3),
                                                                    latency: n,
                                                                    size: i,
                                                                    time: new Date(t)
                                                                },
                                                                currentTrack: Object.assign(ft(o, n, i, a, s), {
                                                                    requestsFailed: u + 1,
                                                                    requestsCompleted: a + 1,
                                                                    latencyFailMean: c,
                                                                    latencyFailMeanSquared: h,
                                                                    latencyFailStDev: f
                                                                }),
                                                                session: Object.assign(ft(l, n, i, d, p), {
                                                                    requestsFailed: b + 1,
                                                                    requestsCompleted: d + 1,
                                                                    latencyFailMean: _,
                                                                    latencyFailMeanSquared: y,
                                                                    latencyFailStDev: v
                                                                })
                                                            }
                                                        }(c, t, i());
                                                    n(oe("NETWORK_ERROR", {
                                                        error: t,
                                                        stack: r,
                                                        response: t.response
                                                    })), n({
                                                        type: "GET_FRAGMENT_FAILED",
                                                        payload: {
                                                            trackId: s,
                                                            fragmentIndex: a,
                                                            bitrate: e,
                                                            metrics: o
                                                        }
                                                    }), h && t.response && 404 === t.response.status && n({
                                                        type: "END_DYNAMIC_TRACK",
                                                        payload: {
                                                            trackId: s
                                                        }
                                                    })
                                                }))
                                            }
                                        }
                                    };

                                function ge() {}

                                function me() {}
                                var we = function() {
                                        function t(t) {
                                            if (!t.getState().hasIn(["config", "abr", "audioQuality"])) throw new Error('The "audioQuality" is missing from the abr configuration')
                                        }
                                        return t.prototype.abort = function() {}, t
                                    }(),
                                    Ee = function(t) {
                                        return {
                                            type: "UPDATE_ABR",
                                            payload: {
                                                abr: {
                                                    bandwidthBPS: parseInt(t, 10)
                                                }
                                            }
                                        }
                                    },
                                    Se = function() {
                                        function t(t) {
                                            this.store = t, this.minBytes = 16e3, this.minTotalBytes = 128e3, this.samples = [], this.blackoutCounter = 0, this.bytesSampled = 0, this.minValue = 1 / 0, this.blackoutEndTime = Date.now(), this.factor = t.getState().getIn(["config", "abr", "factor"]), this.samplesSize = t.getState().getIn(["config", "abr", "samples"]), this.blackoutDuration = t.getState().getIn(["config", "abr", "blackoutDuration"]), this.blackoutMaxDuration = t.getState().getIn(["config", "abr", "blackoutMaxDuration"]), this.disposable$ = new o.Subject, this.onNewRequestCompleted$().takeUntil(this.disposable$).subscribe(), this.onStalled$().takeUntil(this.disposable$).subscribe()
                                        }
                                        var e = t.prototype;
                                        return e.sample = function(t) {
                                            if (!(t.get("size") < this.minBytes)) {
                                                var e = t.get("bitrate");
                                                this.samples.push(e), e < this.minValue && (this.minValue = e), this.samples.length > this.samplesSize && this.samples.shift() <= this.minValue && (this.minValue = [].concat(this.samples).sort((function(t, e) {
                                                    return t - e
                                                }))[0]), this.bytesSampled += e
                                            }
                                        }, e.getBandwidthEstimate = function(t) {
                                            return this.bytesSampled < this.minTotalBytes ? t : this.minValue
                                        }, e.abort = function() {
                                            this.disposable$.onNext(), this.disposable$.onCompleted()
                                        }, e.onNewRequestCompleted$ = function() {
                                            var t = this;
                                            return he.propertyObservable(this.store.stateObservable, "network", "lastRequest").filter((function(t) {
                                                return t
                                            })).do((function(e) {
                                                return t.sample(e)
                                            })).filter((function() {
                                                return Date.now() > t.blackoutEndTime
                                            })).do((function() {
                                                var e = t.factor * t.getBandwidthEstimate(0);
                                                e && (Date.now() > t.blackoutEndTime ? t.store.dispatch(Ee(e)) : t.store.dispatch({
                                                    type: "UPDATE_LATEST_ABR",
                                                    payload: {
                                                        abr: {
                                                            bandwidthBPS: parseInt(e, 10)
                                                        }
                                                    }
                                                }))
                                            }))
                                        }, e.onStalled$ = function() {
                                            var t = this;
                                            return he.propertyObservable(this.store.stateObservable, "playback", "stalled").filter((function(t) {
                                                return t
                                            })).filter((function() {
                                                var e = t.store.getState(),
                                                    r = e.getIn(["playback", "time"]),
                                                    n = e.getIn(["playback", "id"]),
                                                    i = e.getIn(["media", n, "ranges"]),
                                                    o = It.getRange(i, r);
                                                return !o || o.last() - r < .5
                                            })).do((function() {
                                                Date.now() > t.blackoutEndTime && (t.blackoutCounter = 0), t.blackoutCounter += 1, t.blackoutEndTime = Date.now() + 1e3 * Math.min(t.blackoutDuration * Math.pow(2, t.blackoutCounter), t.blackoutMaxDuration);
                                                var e = t.store.getState(),
                                                    r = Math.min(function(t) {
                                                        var e = Pt.getCurrentTrack(t);
                                                        if (!e || !t.getIn(["playback", "bitrate"])) return null;
                                                        var r = e.get("bitrateList"),
                                                            n = t.getIn(["playback", "bitrate"]);
                                                        return r.get(r.indexOf(n) + 1) || r.last()
                                                    }(e), e.getIn(["abr", "bandwidthBPS"]));
                                                t.store.dispatch(Ee(r)), t.store.dispatch(zt())
                                            }))
                                        }, t
                                    }(),
                                    Ie = function() {
                                        function t(t) {
                                            this.alpha = Math.exp(Math.log(.5) / t), this.estimate = 0, this.totalWeight = 0
                                        }
                                        var e = t.prototype;
                                        return e.sample = function(t, e) {
                                            var r = Math.pow(this.alpha, t),
                                                n = e * (1 - r) + r * this.estimate;
                                            isNaN(n) || (this.estimate = n, this.totalWeight += t)
                                        }, e.getEstimate = function() {
                                            var t = 1 - Math.pow(this.alpha, this.totalWeight);
                                            return this.estimate / t
                                        }, t
                                    }(),
                                    Te = function() {
                                        function t(t) {
                                            if (this.store = t, this.fast = new Ie(2), this.slow = new Ie(10), this.bytesSampled = 0, this.minTotalBytes = 128e3, this.minBytes = 16e3, this.factor = t.getState().getIn(["config", "abr", "factor"]), !this.factor) throw new Error('The "factor" is missing from the abr configuration');
                                            this.disposable$ = new o.Subject, this.onNewRequestCompleted$().takeUntil(this.disposable$).subscribe(), this.onStalled$().takeUntil(this.disposable$).subscribe()
                                        }
                                        var e = t.prototype;
                                        return e.sample = function(t) {
                                            if (!(t.get("size") < this.minBytes)) {
                                                var e = t.get("bitrate"),
                                                    r = t.get("latency") / 1e3;
                                                this.bytesSampled += t.get("size"), this.fast.sample(r, e), this.slow.sample(r, e)
                                            }
                                        }, e.getBandwidthEstimate = function(t) {
                                            return this.bytesSampled < this.minTotalBytes ? t : Math.min(this.fast.getEstimate(), this.slow.getEstimate())
                                        }, e.abort = function() {
                                            this.disposable$.onNext(), this.disposable$.onCompleted()
                                        }, e.onNewRequestCompleted$ = function() {
                                            var t = this;
                                            return he.propertyObservable(this.store.stateObservable, "network", "lastRequest").filter((function(t) {
                                                return t
                                            })).do((function(e) {
                                                return t.sample(e)
                                            })).do((function() {
                                                var e = t.factor * t.getBandwidthEstimate(0);
                                                e && t.store.dispatch(Ee(e))
                                            }))
                                        }, e.onStalled$ = function() {
                                            var t = this;
                                            return he.propertyObservable(this.store.stateObservable, "playback", "stalled").filter((function(t) {
                                                return t
                                            })).filter((function() {
                                                var e = t.store.getState(),
                                                    r = e.getIn(["playback", "time"]),
                                                    n = e.getIn(["playback", "id"]),
                                                    i = e.getIn(["media", n, "ranges"]),
                                                    o = It.getRange(i, r);
                                                return !o || o.last() - r < .5
                                            })).do((function() {
                                                return t.store.dispatch(zt())
                                            }))
                                        }, t
                                    }();

                                function Ce(t, e) {
                                    return Object.assign(document.createElement(t), e)
                                }
                                var ke = {
                                    createElement: Ce,
                                    createDebugPanel: function() {
                                        return Ce("div", {
                                            id: "maestroDebugPannel"
                                        })
                                    },
                                    createPlayerStatus: function() {
                                        var t = Ce("div", {
                                            className: "playerStatus"
                                        });
                                        return ["bitrate", "bufferRange", "lastBufferedIndex", "numOfAvailableSegments"].forEach((function(e) {
                                            t.appendChild(Ce("li", {
                                                id: e,
                                                innerHTML: e
                                            }))
                                        })), t
                                    },
                                    createStreamingStatus: function() {
                                        var t = Ce("div", {
                                                className: "streamingStatus"
                                            }),
                                            e = Ce("div", {
                                                innerHTML: " blue - appended, green - appending, yellow - waiting for appending, orange - requesting, red - waiting for requesting  "
                                            });
                                        return t.appendChild(e), t.style.marginBottom = "10px", t.style.height = "100px", t
                                    },
                                    createPropertyWatcher: function() {
                                        var t = Ce("span", {
                                            className: "propertyWatcher"
                                        });
                                        return t.appendChild(Ce("input", {
                                            id: "keyPath"
                                        })), t.appendChild(Ce("button", {
                                            innerHTML: "submit"
                                        })), t.appendChild(Ce("span", {
                                            innerHTML: " for example: playback "
                                        })), t
                                    },
                                    createCloseDebugPanel: function() {
                                        var t = Ce("span", {
                                            id: "closeDebugPanel",
                                            innerHTML: "&#10006;"
                                        });
                                        return t.style.right = "20px", t.style.position = "absolute", t
                                    }
                                };
                                return {
                                    Player: function() {
                                        function t() {
                                            var t;
                                            this.store = function() {
                                                var t = vt.apply(void 0, [].slice.call(arguments));
                                                return t.stateObservable = gt(t), t
                                            }(), !!window.MSMediaKeys && !window.navigator.requestMediaKeySystemAccess && (window.HTMLAudioElement.prototype.setMediaKeys = window.HTMLAudioElement.prototype.setMediaKeys || function(t) {
                                                this.msSetMediaKeys(t), this.mediaKeys = t
                                            }, window.navigator.__emePolyfilled = !0, window.navigator.requestMediaKeySystemAccess = function(t, e) {
                                                for (var r, n = !0, i = wt(e); !(r = i()).done;)
                                                    for (var o, s = wt(r.value.audioCapabilities); !(o = s()).done;) n && (n = window.MSMediaKeys.isTypeSupported(t, o.value.contentType));
                                                return n ? Promise.resolve({
                                                    createMediaKeys: function() {
                                                        return Promise.resolve(new window.MSMediaKeys(t))
                                                    }
                                                }) : Promise.reject()
                                            }), this.ABREngine = function(t) {
                                                if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                var e, r = new o.Subject,
                                                    n = ["min", "ewma", "fixed"],
                                                    i = t.getState().getIn(["config", "abr", "rule"]) || n[0];
                                                if (-1 === n.indexOf(i)) throw new Error("Incorrect abr rule. Expected values: (" + n.join(", ") + ")");
                                                return t.stateObservable.map((function(t) {
                                                    return t.getIn(["config", "abr", "rule"])
                                                })).filter((function(t) {
                                                    return !!t
                                                })).distinctUntilChanged().do((function(r) {
                                                    switch (e && e.abort && e.abort(), r) {
                                                        case "fixed":
                                                            e = new we(t);
                                                            break;
                                                        case "min":
                                                            e = new Se(t);
                                                            break;
                                                        case "ewma":
                                                            e = new Te(t)
                                                    }
                                                })).takeUntil(r).subscribe(), {
                                                    dispose: function() {
                                                        r.onNext(), r.onCompleted()
                                                    }
                                                }
                                            }(this.store), this.streamingEngine = function(t) {
                                                if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                var e = function(t) {
                                                    var e = [],
                                                        r = t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "bitrate"])
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "bitrate"])
                                                        })),
                                                        n = t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).filter((function(t) {
                                                            var e = Pt.getCurrentTrack(t);
                                                            return e && e.get("fragmented")
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })),
                                                        i = t.stateObservable.distinctUntilChanged((function(t) {
                                                            return t.getIn(["network", "online"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["network", "online"])
                                                        })),
                                                        s = t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).map((function(t) {
                                                            return Pt.getCurrentTrack(t)
                                                        })).filter((function(t) {
                                                            return t
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.get("waitingServerTimeSync")
                                                        })).filter((function(t) {
                                                            return !t.get("waitingServerTimeSync")
                                                        })).map((function() {
                                                            return t.getState()
                                                        }));
                                                    return e.push(o.Observable.merge(n, r, i, s).filter((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })).filter((function(t) {
                                                        var e = Pt.getCurrentTrack(t);
                                                        return e && e.get("fragmented")
                                                    })).subscribe((function(e) {
                                                        var r = e.getIn(["playback", "time"]),
                                                            n = Pt.getCurrentTrack(e),
                                                            i = e.getIn(["playback", "bitrate"]),
                                                            o = Pt.getInitFragment(n, i),
                                                            s = n.get("id"),
                                                            a = e.getIn(["media", s, "ranges"]),
                                                            u = Pt.getNextFragmentToFetch(n, i, a, r);
                                                        Pt.isFragmentRequestable(o) && t.dispatch(ve(n, i, o)), Pt.isFragmentRequestable(u, n.get("fragmentDuration"), a) && t.dispatch(ve(n, i, u))
                                                    }))), e.push(o.Observable.merge(t.stateObservable, i, s).filter((function(t) {
                                                        return t.getIn(["playback", "id"])
                                                    })).filter((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })).filter((function(t) {
                                                        var e = Pt.getCurrentTrack(t);
                                                        return e && e.get("fragmented")
                                                    })).distinctUntilChanged((function(t) {
                                                        return Pt.getCurrentTrack(t).get("bitrates")
                                                    })).map((function(t) {
                                                        return {
                                                            track: Pt.getCurrentTrack(t),
                                                            bitrate: t.getIn(["playback", "bitrate"]),
                                                            time: t.getIn(["playback", "time"])
                                                        }
                                                    })).filter((function(t) {
                                                        return t.time > 0
                                                    })).filter((function(t) {
                                                        return !Pt.isRequestingAFragment(t.track, t.bitrate)
                                                    })).map((function(e) {
                                                        var r = e.track,
                                                            n = e.bitrate,
                                                            i = e.time,
                                                            o = r.get("isDynamic") ? r.get("suggestedPresentationDelay") : t.getState().getIn(["config", "secondsToPrefetchAhead"]),
                                                            s = r.get("id"),
                                                            a = t.getState().getIn(["media", s, "ranges"]);
                                                        return {
                                                            fragment: Pt.getNextFragmentToFetch(r, n, a, i, o),
                                                            track: r,
                                                            bitrate: n
                                                        }
                                                    })).filter((function(t) {
                                                        return t.fragment
                                                    })).subscribe((function(e) {
                                                        t.dispatch(ve(e.track, e.bitrate, e.fragment))
                                                    }))), e.push(o.Observable.merge(t.stateObservable, i, s).filter((function(t) {
                                                        return t.getIn(["playback", "id"])
                                                    })).filter((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })).filter((function(t) {
                                                        var e = Pt.getCurrentTrack(t);
                                                        return e && e.get("fragmented")
                                                    })).distinctUntilChanged((function(t) {
                                                        return t.getIn(["playback", "time"])
                                                    })).map((function(t) {
                                                        return {
                                                            track: Pt.getCurrentTrack(t),
                                                            bitrate: t.getIn(["playback", "bitrate"]),
                                                            time: t.getIn(["playback", "time"]),
                                                            seeking: t.getIn(["playback", "seeking"])
                                                        }
                                                    })).filter((function(t) {
                                                        var e = Pt.isRequestingAFragment(t.track, t.bitrate);
                                                        return t.seeking || !e
                                                    })).map((function(e) {
                                                        var r = e.track,
                                                            n = e.bitrate,
                                                            i = e.time,
                                                            o = t.getState().getIn(["config", "secondsToPrefetchAhead"]),
                                                            s = r.get("id"),
                                                            a = t.getState().getIn(["media", s, "ranges"]);
                                                        return {
                                                            fragment: Pt.getNextFragmentToFetch(r, n, a, i, o),
                                                            track: r,
                                                            bitrate: n
                                                        }
                                                    })).filter((function(t) {
                                                        return t.fragment
                                                    })).subscribe((function(e) {
                                                        t.dispatch(ve(e.track, e.bitrate, e.fragment))
                                                    }))), e
                                                }(t);
                                                return {
                                                    dispose: function() {
                                                        for (var t, r = wt(e); !(t = r()).done;) t.value.dispose()
                                                    }
                                                }
                                            }(this.store), this.cacheEngine = function(t) {
                                                if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                var e = function(t) {
                                                    var e = [],
                                                        r = t.stateObservable.distinctUntilChanged((function(t) {
                                                            return t.getIn(["network", "online"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["network", "online"])
                                                        })),
                                                        n = o.Observable.merge(t.stateObservable, r).filter((function(t) {
                                                            return t.getIn(["network", "online"])
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.getIn(["cache", "trackIds"])
                                                        })).map((function(t) {
                                                            return t.getIn(["cache", "trackIds"])
                                                        })).flatMapLatest((function(e) {
                                                            var r, n = [];
                                                            return e.forEach((function(e) {
                                                                n.push(t.stateObservable.distinctUntilChanged((function() {
                                                                    return t.getState().getIn(["cache", e, "isRequestingManifest"])
                                                                })).skip(1).filter((function() {
                                                                    return !t.getState().getIn(["cache", e, "isRequestingManifest"])
                                                                })).distinctUntilChanged((function() {
                                                                    return t.getState().getIn(["cache", e, "manifest"])
                                                                })).map((function() {
                                                                    return t.getState().getIn(["cache", e])
                                                                })))
                                                            })), (r = o.Observable).merge.apply(r, n)
                                                        }));
                                                    return e.push(he.propertyObservable(t.stateObservable, "cache", "trackIds").subscribe((function(e) {
                                                        var r = t.getState().getIn(["config", "cacheSize"]);
                                                        if (e.size > r) {
                                                            var n = t.getState().getIn(["playback", "id"]),
                                                                i = e.first();
                                                            t.dispatch(re(n === i ? e.get(1) : i))
                                                        }
                                                    }))), e.push(o.Observable.merge(t.stateObservable, r).filter((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })).map((function(t) {
                                                        return t.getIn(["cache", "trackIds"])
                                                    })).subscribe((function(e) {
                                                        var r = t.getState(),
                                                            n = r.getIn(["cache", e.last()]);
                                                        if (n && n.get("fragmented")) {
                                                            var i = Pt.getBitrate(n, r),
                                                                o = Pt.getInitFragment(n, i);
                                                            Pt.isFragmentRequestable(o) && t.dispatch(ve(n, i, o))
                                                        }
                                                    }))), e.push(o.Observable.merge(t.stateObservable, r).filter((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })).distinctUntilChanged((function(t) {
                                                        return t.get("cache")
                                                    })).subscribe((function(e) {
                                                        var r = e.getIn(["cache", "trackIds"]),
                                                            n = e.getIn(["playback", "id"]);
                                                        r.map((function(r) {
                                                            var i = e.getIn(["cache", r]);
                                                            if (r !== n && i && i.get("fragmented")) {
                                                                var o = Pt.getBitrate(i, e);
                                                                if (!Pt.isRequestingAFragment(i, o)) {
                                                                    var s = e.getIn(["media", r, "ranges"]),
                                                                        a = i.get("isDynamic") ? i.get("suggestedPresentationDelay") : e.getIn(["config", "secondsToPrefetch"]),
                                                                        u = Pt.getNextFragmentToFetch(i, o, s, 0, a),
                                                                        c = i.get("fragmentDuration");
                                                                    Pt.isFragmentRequestable(u, c, s) && t.dispatch(ve(i, o, u))
                                                                }
                                                            }
                                                            return !0
                                                        }))
                                                    }))), e.push(he.propertyObservable(t.stateObservable, "playback", "id").scan((function(t, e) {
                                                        return {
                                                            prev: t.curr,
                                                            curr: e
                                                        }
                                                    }), {
                                                        curr: void 0
                                                    }).map((function(t) {
                                                        return t.prev
                                                    })).filter((function(t) {
                                                        return t
                                                    })).subscribe((function(e) {
                                                        var r, n = t.getState().getIn(["cache", e]);
                                                        n && n.get("fragmented") && t.dispatch((r = n.get("id"), function(t, e) {
                                                            var n = e().getIn(["cache", r]);
                                                            n && n.get("fragmented") && (n.get("bitrateList").forEach((function(t) {
                                                                n = n.setIn(["bitrates", t, "needsInitFragment"], !0).setIn(["bitrates", t, "initialization", "isBuffering"], !1).setIn(["bitrates", t, "fragments"], n.getIn(["bitrates", t, "fragments"]).map((function(t) {
                                                                    return t.set("isBuffering", !1)
                                                                })))
                                                            })), t({
                                                                type: "RESET_TRACK",
                                                                payload: {
                                                                    track: n
                                                                }
                                                            }))
                                                        }))
                                                    }))), e.push(o.Observable.interval(1e3).subscribe((function() {
                                                        var e = t.getState(),
                                                            r = Pt.getCurrentTrack(e);
                                                        r && r.get("isDynamic") && !r.get("waitingServerTimeSync") && fe(Pt.getMediaReadyState(r.get("id"), e)) && t.dispatch(ne(r))
                                                    }))), e.push(n.subscribe((function(e) {
                                                        t.dispatch(function(t) {
                                                            return function(e, r) {
                                                                if (s.Map.isMap(t)) {
                                                                    var n = r();
                                                                    t = ee(t = t.toJS(), r()), t = s.fromJS(t);
                                                                    var i = Pt.getDynamicTrackDurationWithOffset(t),
                                                                        o = {
                                                                            bitrate: Pt.getBitrate(t, n),
                                                                            time: t.get("isDynamic") ? i : n.getIn(["playback", "time"])
                                                                        };
                                                                    e({
                                                                        type: "UPDATE_TRACK",
                                                                        payload: {
                                                                            track: t,
                                                                            playback: o
                                                                        }
                                                                    })
                                                                }
                                                            }
                                                        }(e))
                                                    }))), e.push(n.filter((function(t) {
                                                        return !t.get("isDynamic")
                                                    })).filter((function(e) {
                                                        return e.get("id") === t.getState().getIn(["playback", "id"])
                                                    })).filter((function(e) {
                                                        var r = e.get("id"),
                                                            n = t.getState().getIn(["media", r, "ranges"]),
                                                            i = e.get("duration") + e.get("presentationTimeOffset");
                                                        return It.getRange(n, i)
                                                    })).flatMapLatest((function(e) {
                                                        return t.stateObservable.map((function(t) {
                                                            return Pt.getMediaReadyState(e.get("id"), t)
                                                        })).filter((function(t) {
                                                            return fe(t)
                                                        })).map((function() {
                                                            return e.get("id")
                                                        })).filter((function(e) {
                                                            return !t.getState().getIn(["media", e, "mediaSource", "sourceBuffer", "updating"])
                                                        }))
                                                    })).subscribe((function(e) {
                                                        t.dispatch(ue.ended(e))
                                                    }))), e.push(o.Observable.merge(t.stateObservable, r).filter((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })).distinctUntilChanged((function(t) {
                                                        return t.getIn(["cache", "trackIds"])
                                                    })).map((function(t) {
                                                        return t.getIn(["cache", "trackIds"])
                                                    })).flatMapLatest((function(e) {
                                                        var r, n = [];
                                                        return e.forEach((function(e) {
                                                            n.push(t.stateObservable.distinctUntilChanged((function() {
                                                                return t.getState().getIn(["cache", e, "waitingServerTimeSync"])
                                                            })).filter((function() {
                                                                return t.getState().getIn(["cache", e, "waitingServerTimeSync"])
                                                            })).map((function() {
                                                                return t.getState().getIn(["cache", e])
                                                            })))
                                                        })), (r = o.Observable).merge.apply(r, n)
                                                    })).subscribe((function(e) {
                                                        e.get("isRequestingUTCTiming") || t.dispatch(ae(e))
                                                    }))), e.push(o.Observable.merge(t.stateObservable, r).filter((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })).distinctUntilChanged((function(t) {
                                                        return t.getIn(["cache", "trackIds"])
                                                    })).subscribe((function(e) {
                                                        e.getIn(["cache", "trackIds"]).forEach((function(r) {
                                                            var n = e.getIn(["cache", r]);
                                                            n.get("waitingServerTimeSync") && !n.get("isRequestingUTCTiming") && t.dispatch(ae(n))
                                                        }))
                                                    }))), e.push(o.Observable.merge(t.stateObservable).distinctUntilChanged((function(t) {
                                                        return t.getIn(["cache", "trackIds"])
                                                    })).map((function(t) {
                                                        return t.getIn(["cache", "trackIds"])
                                                    })).flatMapLatest((function(e) {
                                                        var r, n = [];
                                                        return e.forEach((function(e) {
                                                            n.push(t.stateObservable.distinctUntilChanged((function(t) {
                                                                return t.getIn(["cache", e, "serverTimeOffset"])
                                                            })).filter((function(t) {
                                                                return !isNaN(t.getIn(["cache", e, "serverTimeOffset"]))
                                                            })).map((function(t) {
                                                                return t.getIn(["cache", e])
                                                            })))
                                                        })), (r = o.Observable).merge.apply(r, n)
                                                    })).subscribe((function(e) {
                                                        t.dispatch(ne(e)), t.dispatch({
                                                            type: "SERVER_TIME_SYNC_COMPLETED",
                                                            payload: {
                                                                trackId: e.get("id")
                                                            }
                                                        })
                                                    }))), e
                                                }(t);
                                                return {
                                                    dispose: function() {
                                                        e.map((function(t) {
                                                            return t.dispose()
                                                        }))
                                                    }
                                                }
                                            }(this.store), this.networkEngine = function(t) {
                                                if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                window.navigator.onLine ? t.dispatch({
                                                    type: "NETWORK_ONLINE"
                                                }) : t.dispatch({
                                                    type: "NETWORK_OFFLINE"
                                                });
                                                var e = function(t) {
                                                    var e = [],
                                                        r = o.Observable.fromEvent(window, "online"),
                                                        n = o.Observable.fromEvent(window, "offline");
                                                    return e.push(r.subscribe((function() {
                                                        t.dispatch({
                                                            type: "NETWORK_ONLINE"
                                                        })
                                                    }))), e.push(n.subscribe((function() {
                                                        t.dispatch({
                                                            type: "NETWORK_OFFLINE"
                                                        })
                                                    }))), e
                                                }(t);
                                                return {
                                                    dispose: function() {
                                                        for (var t, r = wt(e); !(t = r()).done;) t.value.dispose()
                                                    }
                                                }
                                            }(this.store), this.manifestEngine = function(t) {
                                                if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                var e = function(t) {
                                                    var e = [],
                                                        r = t.stateObservable.distinctUntilChanged((function(t) {
                                                            return t.getIn(["network", "online"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["network", "online"])
                                                        }));
                                                    return e.push(o.Observable.merge(t.stateObservable, r).filter((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })).distinctUntilChanged((function(t) {
                                                        return t.getIn(["media"])
                                                    })).map((function(t) {
                                                        return t.getIn(["cache", "trackIds"])
                                                    })).flatMapLatest((function(e) {
                                                        var r, n = [];
                                                        return e.forEach((function(e) {
                                                            n.push(t.stateObservable.distinctUntilChanged((function() {
                                                                return t.getState().getIn(["media", e, "lastBufferedIndex"])
                                                            })).filter((function() {
                                                                return t.getState().getIn(["media", e, "lastBufferedIndex"]) >= 0
                                                            })).map((function() {
                                                                return t.getState().getIn(["cache", e])
                                                            })))
                                                        })), (r = o.Observable).merge.apply(r, n)
                                                    })).subscribe((function(e) {
                                                        if (e && e.get("fragmented")) {
                                                            var r = e.get("id"),
                                                                n = t.getState().getIn(["media", r, "lastBufferedIndex"]),
                                                                i = t.getState().getIn(["media", r, "lastBufferedData"]),
                                                                o = i && n !== e.get("lastIndexWithEMSG") ? Pt.getEMSGEvents(e, i) : null;
                                                            o && o.forEach((function(r) {
                                                                "urn:mpeg:dash:event:2012" === r.schemeIdUri && "1" === r.value && !e.get("isRequestingManifest") && t.dispatch(se(e, n))
                                                            }))
                                                        }
                                                    }))), e
                                                }(t);
                                                return {
                                                    dispose: function() {
                                                        for (var t, r = wt(e); !(t = r()).done;) t.value.dispose()
                                                    }
                                                }
                                            }(this.store), this.playbackEngine = function(t) {
                                                if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                var e = t.stateObservable.filter((function(t) {
                                                        return t.getIn(["playback", "id"])
                                                    })).filter((function(t) {
                                                        var e = Pt.getCurrentTrack(t);
                                                        return e && e.get("fragmented")
                                                    })).distinctUntilChanged((function(t) {
                                                        return t.getIn(["playback", "id"])
                                                    })),
                                                    r = he.truthyPropertyObservable(t.stateObservable, "playback", "playing"),
                                                    n = t.stateObservable.distinctUntilChanged((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })).filter((function(t) {
                                                        return t.getIn(["network", "online"])
                                                    })),
                                                    i = [],
                                                    s = [],
                                                    a = t.stateObservable.distinctUntilChanged((function(t) {
                                                        return t.getIn(["playback", "id"])
                                                    })).filter((function(t) {
                                                        return t.getIn(["playback", "id"])
                                                    }));
                                                return a.subscribe((function(u) {
                                                    var c = u.getIn(["playback", "id"]),
                                                        h = u.getIn(["media", c, "audioEl"]);
                                                    i.map((function(t) {
                                                        return t.dispose()
                                                    })), s.map((function(t) {
                                                        return t.dispose()
                                                    })), i = function(t, i) {
                                                        var s = t.stateObservable,
                                                            u = [];
                                                        return u.push(r.flatMapLatest((function() {
                                                            var r = t.getState(),
                                                                n = r.getIn(["playback", "id"]),
                                                                i = r.getIn(["cache", n, "extension"]);
                                                            return r.getIn(["cache", n, "fragmented"]) || "mpd" !== i ? o.Observable.just() : e.take(1)
                                                        })).subscribe((function() {
                                                            var e = i.play();
                                                            e && "undefined" != typeof Promise && e instanceof Promise && e.catch((function(e) {
                                                                e && "NotAllowedError" === e.name && (t.dispatch({
                                                                    type: "PLAYBACK_PAUSE"
                                                                }), t.dispatch(oe("PLAY_NOT_AUTHORIZED")))
                                                            }))
                                                        }))), u.push(r.filter((function() {
                                                            return !t.getState().getIn(["playback", "started"])
                                                        })).flatMapLatest((function() {
                                                            var e = t.getState().getIn(["playback", "id"]);
                                                            return he.propertyObservable(t.stateObservable, "media", e, "ranges").catch((function() {
                                                                return o.Observable.empty()
                                                            }))
                                                        })).flatMapLatest((function(e) {
                                                            var r = t.getState().getIn(["playback", "time"]);
                                                            if (0 === r) {
                                                                var n = e.first();
                                                                if (n) return r = n.first(), o.Observable.just(r)
                                                            }
                                                            return o.Observable.empty()
                                                        })).subscribe((function(t) {
                                                            t > 0 && t < 1 && (i.currentTime = t)
                                                        }))), u.push(he.truthyPropertyObservable(s, "playback", "paused").subscribe((function() {
                                                            i.pause()
                                                        }))), u.push(he.propertyObservable(s, "playback", "muted").subscribe((function(t) {
                                                            i.muted = t
                                                        }))), u.push(t.stateObservable.distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "volume"])
                                                        })).subscribe((function(t) {
                                                            var e = t.getIn(["playback", "volume"]);
                                                            i.volume = e, t.getIn(["media", "_freeAudioEls"]).forEach((function(t) {
                                                                return t.volume = e
                                                            }))
                                                        }))), u.push(he.propertyObservable(s, "playback", "ended").filter((function(t) {
                                                            return t
                                                        })).subscribe((function() {
                                                            t.getState().getIn(["playback", "repeating"]) && (t.dispatch(jt(0)), t.dispatch({
                                                                type: "PLAYBACK_PLAY"
                                                            }))
                                                        }))), u.push(t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "time"])
                                                        })).flatMap((function(e) {
                                                            var r = e.getIn(["playback", "id"]);
                                                            return e.getIn(["media", r, "ranges"]).size > 0 ? o.Observable.just() : t.stateObservable.filter((function(t) {
                                                                return t.getIn(["media", r, "ranges"]).size > 0
                                                            })).take(1)
                                                        })).subscribe((function() {
                                                            var e = t.getState().get("playback").get("time");
                                                            Ut(e, i.currentTime) && (i.currentTime = e)
                                                        }))), u.push(t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "started"])
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "seeking"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "seeking"])
                                                        })).flatMapLatest((function() {
                                                            return i.volume = 0, t.stateObservable.filter((function(t) {
                                                                return !t.getIn(["playback", "seeking"])
                                                            })).delay(100).take(1)
                                                        })).subscribe((function(t) {
                                                            var e = t.getIn(["playback", "volume"]);
                                                            i.volume = e
                                                        }))), u.push(t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "seeking"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "seeking"])
                                                        })).flatMapLatest((function() {
                                                            return o.Observable.merge(o.Observable.fromEvent(i, "playing"), o.Observable.fromEvent(i, "seeked")).take(1)
                                                        })).subscribe((function() {
                                                            t.dispatch({
                                                                type: "PLAYBACK_SEEK_COMPLETED"
                                                            }), _e.isSafari() && _e.isLessThanVersion("10.1") && i.currentTime > 0 && (i.currentTime = i.currentTime, i.pause(), i.play())
                                                        }))), u.push(s.filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).map((function(t) {
                                                            return Pt.getCurrentTrack(t)
                                                        })).filter((function(t) {
                                                            return t
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.get("duration")
                                                        })).subscribe((function(e) {
                                                            var r = e.get("duration");
                                                            r && t.dispatch(qt(r))
                                                        }))), u.push(a.filter((function(t) {
                                                            return Pt.getCurrentTrack(t)
                                                        })).flatMapLatest((function() {
                                                            return Number.isFinite(i.duration) ? o.Observable.just(i.duration) : o.Observable.fromEvent(i, "durationchange").take(1)
                                                        })).subscribe((function() {
                                                            Number.isFinite(i.duration) && t.dispatch(qt(i.duration))
                                                        }))), u.push(t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).map((function(t) {
                                                            return Pt.getCurrentTrack(t)
                                                        })).filter((function(t) {
                                                            return t && t.get("isDynamic")
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.get("durationWithOffset")
                                                        })).subscribe((function(e) {
                                                            var r = t.getState().getIn(["playback", "time"]),
                                                                n = e.get("durationWithOffset");
                                                            r + 5 < n && t.dispatch(Bt(n))
                                                        }))), u.push(t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "playing"])
                                                        })).distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "codecs"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "codecs"])
                                                        })).skip(1).flatMap((function() {
                                                            return t.stateObservable.map((function(t) {
                                                                return Pt.getCurrentMediaReadyState(t)
                                                            })).distinctUntilChanged().filter((function(t) {
                                                                return fe(t)
                                                            })).take(1)
                                                        })).subscribe((function() {
                                                            var e = t.getState(),
                                                                r = e.getIn(["playback", "time"]),
                                                                n = i.currentTime;
                                                            0 === n && n !== r && (i.currentTime = e.getIn(["playback", "time"]))
                                                        }))), u.push(he.truthyPropertyObservable(s, "playback", "stalled").flatMapLatest((function() {
                                                            return o.Observable.merge(o.Observable.fromEvent(i, "playing").filter((function() {
                                                                return !t.getState().getIn(["playback", "seeking"])
                                                            })), o.Observable.fromEvent(i, "durationchange"), t.stateObservable.filter((function() {
                                                                return _e.isEdge() || _e.isIE()
                                                            })).filter((function(t) {
                                                                var e = Pt.getCurrentTrack(t);
                                                                return e && !e.get("isDynamic")
                                                            })).distinctUntilChanged((function(t) {
                                                                var e = t.getIn(["playback", "id"]);
                                                                return t.getIn(["media", e, "audioEl"]).currentTime
                                                            })).skip(1).filter((function(t) {
                                                                return !t.getIn(["playback", "seeking"])
                                                            }))).take(1)
                                                        })).subscribe((function() {
                                                            var e = t.getState(),
                                                                r = Pt.getCurrentTrack(e),
                                                                n = e.getIn(["playback", "time"]);
                                                            t.dispatch({
                                                                type: "PLAYBACK_STALL_COMPLETED"
                                                            }), r && r.get("isDynamic") && Ut(n, i.currentTime) && (i.currentTime = n)
                                                        }))), u.push(t.stateObservable.distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "time"])
                                                        })).filter((function(t) {
                                                            return !t.getIn(["playback", "ended"])
                                                        })).filter((function(t) {
                                                            var e = t.getIn(["playback", "duration"]),
                                                                r = t.getIn(["playback", "time"]);
                                                            return r < e && r + .01 >= e
                                                        })).subscribe((function() {
                                                            return t.dispatch({
                                                                type: "PLAYBACK_ENDED"
                                                            })
                                                        }))), _e.isSafari() && _e.isLessThanVersion("10.1") && u.push(t.stateObservable.distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "stalled"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "stalled"])
                                                        })).flatMapLatest((function(e) {
                                                            var r = e.getIn(["playback", "id"]),
                                                                n = e.getIn(["media", r, "ranges"]);
                                                            return t.stateObservable.distinctUntilChanged((function(t) {
                                                                var e = t.getIn(["media", r, "ranges"]);
                                                                return n === e
                                                            })).takeUntil(t.stateObservable.distinctUntilChanged((function(t) {
                                                                return t.getIn(["playback", "stalled"])
                                                            })).filter((function(t) {
                                                                return !t.getIn(["playback", "stalled"])
                                                            })))
                                                        })).subscribe((function(t) {
                                                            var e = t.getIn(["playback", "time"]);
                                                            i.currentTime = e, i.pause(), i.play()
                                                        }))), u.push(t.stateObservable.filter((function(t) {
                                                            var e = Pt.getCurrentTrack(t);
                                                            return e && "mpd" !== e.get("extension")
                                                        })).filter((function(t) {
                                                            return !t.getIn(["network", "online"])
                                                        })).flatMapLatest((function() {
                                                            return n.filter((function(t) {
                                                                return t.getIn(["playback", "stalled"])
                                                            })).map((function(t) {
                                                                var e = t.getIn(["playback", "id"]);
                                                                return t.getIn(["media", e, "audioEl"]).currentTime
                                                            })).take(1)
                                                        })).subscribe((function(e) {
                                                            ye(t.getState(), e)
                                                        }))), u.push(n.filter((function(t) {
                                                            var e = Pt.getCurrentTrack(t);
                                                            return e && "mpd" !== e.get("extension")
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "playing"])
                                                        })).filter((function(t) {
                                                            return !t.getIn(["playback", "started"])
                                                        })).subscribe((function(t) {
                                                            var e = t.getIn(["playback", "time"]);
                                                            ye(t, e)
                                                        }))), u
                                                    }(t, h), s = function(t, e, r) {
                                                        var n = [];
                                                        return n.push(o.Observable.fromEvent(e, "playing").map((function() {
                                                            return t.getState()
                                                        })).filter((function(t) {
                                                            return !t.getIn(["playback", "started"])
                                                        })).subscribe((function() {
                                                            t.dispatch({
                                                                type: "PLAYBACK_STARTED"
                                                            }), t.dispatch(ue.rangesUpdated(r, It.bufferToRanges(e)))
                                                        }))), n.push(o.Observable.fromEvent(e, "ended").map((function() {
                                                            return t.getState()
                                                        })).filter((function(t) {
                                                            return !t.getIn(["playback", "ended"])
                                                        })).subscribe((function(e) {
                                                            !_e.isSafari() || e.getIn(["network", "online"]) || function(t) {
                                                                var e = Pt.getCurrentTrack(t),
                                                                    r = t.getIn(["playback", "duration"]) - t.getIn(["playback", "time"]) < 1;
                                                                return e && "mpd" !== e.get("extension") && r
                                                            }(e) ? t.dispatch({
                                                                type: "PLAYBACK_ENDED"
                                                            }) : t.dispatch({
                                                                type: "PLAYBACK_STALLED"
                                                            })
                                                        }))), n.push(o.Observable.fromEvent(e, "progress").map((function() {
                                                            return t.getState()
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "started"])
                                                        })).subscribe((function() {
                                                            t.dispatch(Bt(e.currentTime)), t.dispatch(ue.rangesUpdated(r, It.bufferToRanges(e)))
                                                        }))), n.push(o.Observable.fromEvent(e, "timeupdate").map((function() {
                                                            return t.getState()
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "playing"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "started"])
                                                        })).distinctUntilChanged((function(t) {
                                                            var e = t.getIn(["playback", "id"]);
                                                            return t.getIn(["media", e, "audioEl"]).currentTime
                                                        })).filter((function(t) {
                                                            return !t.getIn(["playback", "bitrate"]) || !le(Pt.getCurrentMediaReadyState(t))
                                                        })).subscribe((function() {
                                                            t.dispatch(Bt(e.currentTime))
                                                        }))), n.push(o.Observable.fromEvent(e, "error").subscribe((function(r) {
                                                            var n = (new Error).stack,
                                                                i = e.error,
                                                                o = "AUDIO_ERROR";
                                                            if (i) switch (i.code) {
                                                                case i.MEDIA_ERR_ABORTED:
                                                                    o = "MEDIA_ERR_ABORTED";
                                                                    break;
                                                                case i.MEDIA_ERR_NETWORK:
                                                                    o = "MEDIA_ERR_NETWORK", t.dispatch({
                                                                        type: "PLAYBACK_STALLED"
                                                                    });
                                                                    break;
                                                                case i.MEDIA_ERR_DECODE:
                                                                    o = "MEDIA_ERR_DECODE", t.dispatch({
                                                                        type: "PLAYBACK_STALLED"
                                                                    });
                                                                    break;
                                                                case i.MEDIA_ERR_SRC_NOT_SUPPORTED:
                                                                    o = "MEDIA_ERR_SRC_NOT_SUPPORTED";
                                                                    break;
                                                                default:
                                                                    o = "AUDIO_ERROR"
                                                            }
                                                            t.dispatch(oe(o, {
                                                                error: r,
                                                                stack: n,
                                                                audioError: i
                                                            }))
                                                        }))), n.push(o.Observable.fromEvent(e, "waiting").map((function() {
                                                            return t.getState()
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "started"])
                                                        })).filter((function(t) {
                                                            return !t.getIn(["playback", "seeking"])
                                                        })).filter((function() {
                                                            return e.currentTime > 0
                                                        })).filter((function(t) {
                                                            var e = t.getIn(["playback", "duration"]);
                                                            return t.getIn(["playback", "time"]) < e
                                                        })).subscribe((function() {
                                                            t.dispatch(Bt(e.currentTime)), t.dispatch({
                                                                type: "PLAYBACK_STALLED"
                                                            })
                                                        }))), n.push(o.Observable.fromEvent(e, "waiting").map((function() {
                                                            return t.getState()
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "started"])
                                                        })).filter((function(t) {
                                                            return !t.getIn(["playback", "seeking"])
                                                        })).filter((function(t) {
                                                            return !t.getIn(["playback", "ended"])
                                                        })).filter((function(t) {
                                                            var e = t.getIn(["playback", "duration"]);
                                                            return t.getIn(["playback", "time"]) >= e
                                                        })).subscribe((function() {
                                                            t.dispatch({
                                                                type: "PLAYBACK_ENDED"
                                                            })
                                                        }))), n
                                                    }(t, h, c)
                                                })), a.filter((function(t) {
                                                    return !Pt.getCurrentTrack(t).get("fragmented")
                                                })).subscribe((function(e) {
                                                    var r = e.getIn(["playback", "id"]),
                                                        n = e.getIn(["media", r, "audioEl"]);
                                                    t.dispatch(ue.rangesUpdated(r, It.bufferToRanges(n)))
                                                })), {
                                                    dispose: function() {
                                                        i.map((function(t) {
                                                            return t.dispose()
                                                        })), s.map((function(t) {
                                                            return t.dispose()
                                                        }))
                                                    }
                                                }
                                            }(this.store), this.mediaEngine = function(t) {
                                                if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                var e = new Map,
                                                    r = t.stateObservable.distinctUntilChanged((function(t) {
                                                        return t.getIn(["cache", "trackIds"])
                                                    })).subscribe((function(r) {
                                                        var n = r.getIn(["cache", "trackIds"]);
                                                        n.forEach((function(r) {
                                                            if (!e.get(r)) {
                                                                var n = new Set;
                                                                n.add(function(t, e) {
                                                                    if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                                    if ("string" != typeof e) throw new Error("Expected the trackId to be a string.");
                                                                    var r, n = [],
                                                                        i = he.propertyObservable(t.stateObservable, "playback", "id").filter((function(t) {
                                                                            return t
                                                                        })).filter((function(t) {
                                                                            return t === e
                                                                        })).flatMapLatest((function() {
                                                                            return t.stateObservable.distinctUntilChanged((function(t) {
                                                                                return t.getIn(["playback", "codecs"])
                                                                            })).map((function(t) {
                                                                                return t.getIn(["playback", "id"])
                                                                            })).filter((function(t) {
                                                                                return t === e
                                                                            })).distinctUntilChanged().skip(1)
                                                                        })),
                                                                        s = t.stateObservable.filter((function(t) {
                                                                            return t.getIn(["cache", e])
                                                                        })).distinctUntilChanged((function(t) {
                                                                            return t.getIn(["cache", e, "fragmented"])
                                                                        })),
                                                                        a = t.stateObservable.filter((function(t) {
                                                                            return t.getIn(["cache", e])
                                                                        })).distinctUntilChanged((function(t) {
                                                                            return t.getIn(["cache", e, "url"])
                                                                        }));
                                                                    return n.push(o.Observable.merge(o.Observable.just(), a).filter((function() {
                                                                        return t.getState().getIn(["cache", e])
                                                                    })).filter((function() {
                                                                        return "mpd" !== t.getState().getIn(["cache", e, "extension"])
                                                                    })).subscribe((function() {
                                                                        var n = t.getState(),
                                                                            i = Pt.getTrack(e, n),
                                                                            o = n.getIn(["media", e, "audioEl"]);
                                                                        r = null, o.src = i.get("url"), o.preload = _e.isChrome() && !_e.isLessThanVersion("58.0.3029.81") && _e.isLessThanVersion("59.0.3071.86") ? "none" : "auto"
                                                                    }))), n.push(a.filter((function() {
                                                                        return t.getState().getIn(["playback", "id"]) === e
                                                                    })).filter((function() {
                                                                        return "mpd" !== t.getState().getIn(["cache", e, "extension"])
                                                                    })).subscribe((function() {
                                                                        var n = t.getState(),
                                                                            i = Pt.getTrack(e, n),
                                                                            o = n.getIn(["media", e, "audioEl"]),
                                                                            s = n.getIn(["playback", "playing"]),
                                                                            a = n.getIn(["playback", "stalled"]);
                                                                        r = null, o.src = i.get("url"), o.currentTime = n.getIn(["playback", "time"]), (s || a) && o.play()
                                                                    }))), n.push(o.Observable.merge(s, i).filter((function() {
                                                                        return t.getState().getIn(["cache", e])
                                                                    })).filter((function() {
                                                                        return "mpd" === t.getState().getIn(["cache", e, "extension"])
                                                                    })).subscribe((function() {
                                                                        var n = t.getState(),
                                                                            i = Pt.getTrack(e, n).get("fragmented"),
                                                                            s = n.getIn(["media", e, "audioEl"]);
                                                                        r && r.dispose && r.dispose(), i && (r = function(t, e, r) {
                                                                            if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                                            if ("object" != typeof e) throw new Error("Expected the audioElement to be an object.");
                                                                            if ("string" != typeof r) throw new Error("Expected the trackID to be a string.");
                                                                            var n, i = e._mediaSource,
                                                                                s = e.src,
                                                                                a = [];
                                                                            return a.push(t.stateObservable.distinctUntilChanged((function(t) {
                                                                                return Pt.getMediaReadyState(r, t)
                                                                            })).filter((function(t) {
                                                                                return fe(Pt.getMediaReadyState(r, t))
                                                                            })).filter((function(t) {
                                                                                return t.getIn(["cache", r, "fragmented"])
                                                                            })).do((function(e) {
                                                                                var s = Pt.getTrack(r, e);
                                                                                i.duration = s.get("duration");
                                                                                var a = Pt.getBitrate(r, e),
                                                                                    u = i.addSourceBuffer(Pt.getMimeType(s, a));
                                                                                n = function(t, e, r, n) {
                                                                                    if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                                                    if ("string" != typeof e) throw new Error("Expected the trackId to be a string.");
                                                                                    if ("object" != typeof r) throw new Error("Expected the sourceBuffer to be an object.");
                                                                                    if ("object" != typeof n) throw new Error("Expected the mediaSource to be an object.");
                                                                                    var i = function(t, r) {
                                                                                        var n = [],
                                                                                            i = o.Observable.fromEvent(r, "error"),
                                                                                            s = o.Observable.fromEvent(r, "updateend");
                                                                                        n.push(i.subscribe((function(e) {
                                                                                            var r = (new Error).stack;
                                                                                            t.dispatch(oe("SOURCE_BUFFER_ERROR", {
                                                                                                error: e,
                                                                                                stack: r
                                                                                            }))
                                                                                        })));
                                                                                        var a = t.getState(),
                                                                                            u = o.Observable.merge(o.Observable.just(a), t.stateObservable),
                                                                                            c = u.flatMap((function(t) {
                                                                                                var r = t.getIn(["cache", e]),
                                                                                                    n = Pt.getBitrate(r, t);
                                                                                                if (r.getIn(["bitrates", n, "needsInitFragment"])) {
                                                                                                    var i = Pt.getInitFragment(r, n);
                                                                                                    if (i.get("data") && !i.get("isBuffering")) return o.Observable.just(i)
                                                                                                }
                                                                                                return o.Observable.empty()
                                                                                            })),
                                                                                            h = u.flatMap((function(t) {
                                                                                                var r = t.getIn(["cache", e]),
                                                                                                    n = Pt.getBitrate(r, t);
                                                                                                if (!r.getIn(["bitrates", n, "needsInitFragment"])) {
                                                                                                    var i = t.getIn(["media", e]),
                                                                                                        s = t.getIn(["playback", "id"]),
                                                                                                        a = r.get("fragmentDuration"),
                                                                                                        u = {
                                                                                                            fragments: Pt.getFragmentsForBitrate(r, n),
                                                                                                            lastBufferedIndex: i.get("lastBufferedIndex"),
                                                                                                            fragmentIndexOffset: r.get("fragmentIndexOffset")
                                                                                                        };
                                                                                                    return s === e ? (u.time = t.getIn(["playback", "time"]), u.ranges = i.get("ranges"), u.fragmentDuration = a, o.Observable.just(Pt.getCurrentNextFragmentToAppend(u))) : (u.defaultStartIndex = r.get("isDynamic") ? Math.floor(r.get("durationWithOffset") / a) : 0, o.Observable.just(Pt.getNextFragmentToAppend(u)))
                                                                                                }
                                                                                                return o.Observable.empty()
                                                                                            })),
                                                                                            f = o.Observable.merge(c, h).pausableBuffered(new o.Subject),
                                                                                            l = f.filter((function() {
                                                                                                return !r.updating
                                                                                            })).filter((function(t) {
                                                                                                return t && !t.get("isBuffering")
                                                                                            })).distinctUntilChanged((function(t) {
                                                                                                return t.get("url")
                                                                                            })).flatMap((function(n) {
                                                                                                f.pause();
                                                                                                var i = t.getState(),
                                                                                                    a = i.getIn(["cache", e]),
                                                                                                    u = Pt.getBitrate(a, i);
                                                                                                return t.dispatch(ue.appending(a, u, n)),
                                                                                                    function(t, e, r) {
                                                                                                        return o.Observable.create((function(n) {
                                                                                                            var i = r.take(1).subscribe((function() {
                                                                                                                n.onNext(), n.onCompleted()
                                                                                                            }));
                                                                                                            try {
                                                                                                                t.appendBuffer(e)
                                                                                                            } catch (t) {
                                                                                                                n.onError(t)
                                                                                                            }
                                                                                                            return function() {
                                                                                                                return i.dispose()
                                                                                                            }
                                                                                                        }))
                                                                                                    }(r, n.get("data"), s).map((function() {
                                                                                                        return n
                                                                                                    })).retryWhen((function(t) {
                                                                                                        return t.delay(5e3)
                                                                                                    }))
                                                                                            })).subscribe((function(n) {
                                                                                                var i = t.getState(),
                                                                                                    o = i.getIn(["cache", e]),
                                                                                                    s = Pt.getBitrate(o, i),
                                                                                                    a = It.bufferToRanges(r),
                                                                                                    u = Pt.getFragmentStartTime(n.get("data")),
                                                                                                    c = Pt.getFragmentEndTime(a);
                                                                                                o.get("isEncrypted") || void 0 === n.get("index") || -1 !== u || t.dispatch(oe("SEGMENT_INDEX_NOT_AVAILABLE")), t.dispatch(ue.rangesUpdated(e, a)), t.dispatch(ue.appended(o, s, n, u, c)), f.resume()
                                                                                            }), (function(e) {
                                                                                                var r = e && e.name,
                                                                                                    n = e && e.message,
                                                                                                    i = (new Error).stack;
                                                                                                t.dispatch(oe("QuotaExceededError" === r ? "SOURCE_BUFFER_QUOTA_EXCEEDED" : "SOURCE_BUFFER_ERROR", {
                                                                                                    message: n,
                                                                                                    stack: i
                                                                                                }))
                                                                                            }));
                                                                                        return n.push(l), f.resume(), n
                                                                                    }(t, r);
                                                                                    return {
                                                                                        dispose: function() {
                                                                                            i.map((function(t) {
                                                                                                return t.dispose()
                                                                                            })), fe(n.readyState) && r.abort(), le(n.readyState) || r.remove(0, 1 / 0)
                                                                                        }
                                                                                    }
                                                                                }(t, r, u, i)
                                                                            })).catch((function(e) {
                                                                                var r = e && e.name,
                                                                                    n = e && e.message,
                                                                                    i = (new Error).stack;
                                                                                t.dispatch(oe("InvalidAccessError" === r ? "MEDIA_SOURCE_CODECS_NOT_SUPPORTED" : "InvalidStateError" === r ? "MEDIA_SOURCE_NOT_OPEN" : "NotSupportedError" === r ? "MEDIA_SOURCE_CODECS_NOT_SUPPORTED" : "QuotaExceededError" === r ? "MEDIA_SOURCE_QUOTA_EXCEEDED" : "MEDIA_SOURCE_ERROR", {
                                                                                    message: n,
                                                                                    stack: i
                                                                                }))
                                                                            })).take(1).subscribe()), a.push(t.stateObservable.filter((function(t) {
                                                                                return !t.getIn(["cache", r, "isDynamic"])
                                                                            })).map((function(t) {
                                                                                return Pt.getMediaReadyState(r, t)
                                                                            })).filter((function(t) {
                                                                                return fe(t)
                                                                            })).filter((function() {
                                                                                return !t.getState().getIn(["media", r, "mediaSource", "sourceBuffer", "updating"])
                                                                            })).map((function() {
                                                                                var e = t.getState(),
                                                                                    n = e.getIn(["playback", "bitrate"]);
                                                                                return e.getIn(["cache", r, "bitrates", n, "fragments", -1])
                                                                            })).filter((function(t) {
                                                                                return t
                                                                            })).filter((function(e) {
                                                                                var n = e.get("endTime"),
                                                                                    i = t.getState().getIn(["media", r, "ranges"]);
                                                                                return Pt.isFragmentInBufferedRanges(-1, n, i)
                                                                            })).subscribe((function() {
                                                                                t.dispatch(ue.ended(r))
                                                                            }))), a.push(t.stateObservable.map((function(t) {
                                                                                return t.getIn(["cache", r])
                                                                            })).filter((function(t) {
                                                                                return t.get("isDynamic")
                                                                            })).distinctUntilChanged((function(t) {
                                                                                return t.get("dynamicTrackEnded")
                                                                            })).filter((function(t) {
                                                                                return t.get("dynamicTrackEnded")
                                                                            })).subscribe((function() {
                                                                                t.dispatch(ue.ended(r))
                                                                            }))), a.push(t.stateObservable.map((function(t) {
                                                                                return Pt.getMediaReadyState(r, t)
                                                                            })).distinctUntilChanged().filter((function(t) {
                                                                                return function(t) {
                                                                                    return "ended" === t
                                                                                }(t)
                                                                            })).do((function() {
                                                                                return i.endOfStream()
                                                                            })).subscribe(ge, (function(e) {
                                                                                var r = e && e.name,
                                                                                    n = e && e.message,
                                                                                    i = (new Error).stack;
                                                                                t.dispatch(oe("InvalidAccessError" === r ? "MEDIA_SOURCE_STREAM_ENDED" : "MEDIA_SOURCE_ERROR", {
                                                                                    message: n,
                                                                                    stack: i
                                                                                }))
                                                                            }))), a = a.concat(function(t, e) {
                                                                                var n = [];
                                                                                return t.dispatch(ue[e.readyState](r)), n.push(o.Observable.fromEvent(e, "sourceopen").subscribe((function() {
                                                                                    return t.dispatch(ue.open(r))
                                                                                }))), n.push(o.Observable.fromEvent(e, "sourceclose").subscribe((function() {
                                                                                    return t.dispatch(ue.closed(r))
                                                                                }))), n.push(o.Observable.fromEvent(e, "error").subscribe((function(e) {
                                                                                    var r = (new Error).stack;
                                                                                    t.dispatch(oe("MEDIA_SOURCE_ERROR", {
                                                                                        error: e,
                                                                                        stack: r
                                                                                    }))
                                                                                }))), n.push(o.Observable.just().delay(1e3).filter((function() {
                                                                                    return le(e.readyState)
                                                                                })).subscribe((function() {
                                                                                    t.dispatch(oe("MEDIA_SOURCE_UNOPENED", {}))
                                                                                }))), n
                                                                            }(t, i)), {
                                                                                dispose: function() {
                                                                                    n && n.dispose(), a.forEach((function(t) {
                                                                                        return t.dispose()
                                                                                    }));
                                                                                    var e = t.getState();
                                                                                    le(Pt.getMediaReadyState(r, e)) || t.dispatch(ue.closed(r)), URL.revokeObjectURL(s)
                                                                                },
                                                                                mediaSource: i,
                                                                                objectURL: s
                                                                            }
                                                                        }(t, s, e))
                                                                    }))), {
                                                                        dispose: function() {
                                                                            r && r.dispose && r.dispose(), n.forEach((function(t) {
                                                                                return t.dispose()
                                                                            }))
                                                                        },
                                                                        _getMediaSource: function() {
                                                                            return r ? r.mediaSource : null
                                                                        }
                                                                    }
                                                                }(t, r)), n.add(function(t, e) {
                                                                    if ("object" != typeof t) throw new Error("Expected the store to be an object.");
                                                                    if ("string" != typeof e) throw new Error("Expected the trackId to be a string.");
                                                                    var r = new o.Subject,
                                                                        n = new o.ReplaySubject(1);
                                                                    return t.stateObservable.filter((function(t) {
                                                                        return t.getIn(["cache", e])
                                                                    })).distinctUntilChanged((function(t) {
                                                                        return t.getIn(["cache", e, "isEncrypted"])
                                                                    })).filter((function(t) {
                                                                        return t.getIn(["cache", e, "isEncrypted"])
                                                                    })).take(1).flatMap((function(t) {
                                                                        var r = t.getIn(["media", e, "audioEl"]);
                                                                        return o.Observable.merge(o.Observable.fromEvent(r, "encrypted"), o.Observable.fromEvent(r, "msneedkey").filter((function(t) {
                                                                            return t.initData
                                                                        }))).take(1)
                                                                    })).flatMap((function(r) {
                                                                        var i = t.getState(),
                                                                            s = Pt.getTrack(e, i),
                                                                            a = Pt.getBitrate(s, i),
                                                                            u = s.getIn(["bitrates", a, "contentProtections"]),
                                                                            c = r.target;
                                                                        return function(e, r, n, i) {
                                                                            var s = e.toList();
                                                                            return o.Observable.just().flatMap((function() {
                                                                                var t = s.first();
                                                                                return s = s.shift(), o.Observable.defer((function() {
                                                                                    return function(t, e, r) {
                                                                                        var n = t.get("label"),
                                                                                            i = [{
                                                                                                initDataTypes: ["cenc"],
                                                                                                audioCapabilities: [{
                                                                                                    contentType: e,
                                                                                                    robustness: "SW_SECURE_CRYPTO"
                                                                                                }]
                                                                                            }];
                                                                                        return _e.isChromeOS() && (i[0].videoCapabilities = [{
                                                                                            contentType: 'video/mp4; codecs="avc1.4d401f"',
                                                                                            robustness: "SW_SECURE_DECODE"
                                                                                        }]), navigator.requestMediaKeySystemAccess(n, i).then((function(t) {
                                                                                            return !_e.isIE() && r.mediaKeys ? Promise.resolve() : t.createMediaKeys().then((function(t) {
                                                                                                return r.setMediaKeys(t)
                                                                                            }))
                                                                                        }))
                                                                                    }(t, Pt.getMimeType(r, n), i)
                                                                                })).map((function() {
                                                                                    return t
                                                                                }))
                                                                            })).retryWhen((function(t) {
                                                                                return t.scan((function(t, e) {
                                                                                    if (s.size > 0) return t + 1;
                                                                                    throw e
                                                                                }), 0)
                                                                            })).catch((function() {
                                                                                return t.dispatch(oe("NO_KEY_SYSTEM_SUPPORTED")), o.Observable.of(null)
                                                                            })).filter((function(t) {
                                                                                return t
                                                                            })).take(1)
                                                                        }(u, s, a, c).do((function(r) {
                                                                            t.dispatch(function(t, e) {
                                                                                return {
                                                                                    type: "SET_CONTENT_PROTECTION_LABEL",
                                                                                    payload: {
                                                                                        trackId: t,
                                                                                        label: e
                                                                                    }
                                                                                }
                                                                            }(e, r.get("label")))
                                                                        })).map((function() {
                                                                            var t = window.navigator.__emePolyfilled ? [Pt.getMimeType(s, a), new Uint8Array(r.initData)] : [];
                                                                            return c.mediaKeys.createSession.apply(c.mediaKeys, t)
                                                                        })).do((function(t) {
                                                                            window.navigator.__emePolyfilled || t.generateRequest("cenc", r.initData)
                                                                        })).do((function(t) {
                                                                            n.onNext(t)
                                                                        }))
                                                                    })).takeUntil(r).subscribe(), n.filter((function(t) {
                                                                        return t
                                                                    })).flatMap((function(t) {
                                                                        return o.Observable.merge(o.Observable.fromEvent(t, "message"), o.Observable.fromEvent(t, "mskeymessage").filter((function(t) {
                                                                            return !t.messageType || "license-request" === t.messageType
                                                                        })))
                                                                    })).do((function(r) {
                                                                        var n = t.getState(),
                                                                            i = Pt.getTrack(e, t.getState());
                                                                        ! function(e, r, n, i) {
                                                                            var s = t.getState(),
                                                                                a = s.getIn(["config", "drm", i, "licenseServerUrl"]),
                                                                                u = s.getIn(["config", "drm", i, "licenseServerRequestInterceptor"]),
                                                                                c = Object.assign({
                                                                                    url: a,
                                                                                    method: "POST",
                                                                                    body: e.message,
                                                                                    resolver: "arrayBuffer",
                                                                                    headers: {}
                                                                                });
                                                                            c = Object.assign({}, c, "com.microsoft.playready" === i ? function(t) {
                                                                                for (var e = function(t, e, r) {
                                                                                        if (!t) return "";
                                                                                        var n;
                                                                                        if (t instanceof ArrayBuffer) n = t;
                                                                                        else {
                                                                                            var i = new Uint8Array(t.byteLength);
                                                                                            i.set(new Uint8Array(t)), n = i.buffer
                                                                                        }
                                                                                        for (var o = Math.floor(t.byteLength / 2), s = new Uint16Array(o), a = new DataView(n), u = 0; u < o; u++) s[u] = a.getUint16(2 * u, !0);
                                                                                        return function(t) {
                                                                                            for (var e = "", r = 0; r < t.length; r += 16e3) {
                                                                                                var n = t.subarray(r, r + 16e3);
                                                                                                e += String.fromCharCode.apply(null, n)
                                                                                            }
                                                                                            return e
                                                                                        }(s)
                                                                                    }(t.body), r = (new DOMParser).parseFromString(e, "application/xml"), n = Object.assign({}, t), i = r.getElementsByTagName("HttpHeader"), o = 0; o < i.length; ++o) {
                                                                                    var s = i[o].querySelector("name"),
                                                                                        a = i[o].querySelector("value");
                                                                                    n.headers[s.textContent] = a.textContent
                                                                                }
                                                                                var u = r.querySelector("Challenge");
                                                                                return n.body = Zt(u.textContent).buffer, n
                                                                            }(c) : {}), c = u ? u(c, r) : c, t.dispatch(function(t, e, r, n) {
                                                                                return function(i, s) {
                                                                                    var a = s(),
                                                                                        u = a.getIn(["config", "maxNetworkRetries"]);
                                                                                    i({
                                                                                        type: "GET_LICENSE_START",
                                                                                        payload: {
                                                                                            trackId: e,
                                                                                            bitrate: r,
                                                                                            label: n
                                                                                        }
                                                                                    }), lt(t, t.resolver, u).flatMap((function(t) {
                                                                                        var e = a.getIn(["config", "drm", n, "licenseServerResponseInterceptor"]);
                                                                                        return o.Observable.of(e ? e(t) : t)
                                                                                    })).subscribe((function(t) {
                                                                                        i({
                                                                                            type: "GET_LICENSE_SUCCEED",
                                                                                            payload: {
                                                                                                trackId: e,
                                                                                                bitrate: r,
                                                                                                label: n,
                                                                                                data: t
                                                                                            }
                                                                                        })
                                                                                    }), (function(t) {
                                                                                        i(oe("NETWORK_ERROR", {
                                                                                            error: t,
                                                                                            response: t.response
                                                                                        })), i({
                                                                                            type: "GET_LICENSE_FAILED",
                                                                                            payload: {
                                                                                                trackId: e,
                                                                                                bitrate: r,
                                                                                                label: n
                                                                                            }
                                                                                        })
                                                                                    }))
                                                                                }
                                                                            }(c, r, n, i))
                                                                        }(r, i.get("id"), Pt.getBitrate(i, n), i.get("supportedContentProtection"))
                                                                    })).takeUntil(r).subscribe(), t.stateObservable.distinctUntilChanged((function(t) {
                                                                        return t.getIn(["cache", e, "supportedContentProtection"])
                                                                    })).filter((function(t) {
                                                                        return t.getIn(["cache", e, "supportedContentProtection"])
                                                                    })).flatMap((function() {
                                                                        return t.stateObservable.filter((function(t) {
                                                                            return Pt.getTrack(e, t)
                                                                        })).filter((function(t) {
                                                                            var r = Pt.getTrack(e, t),
                                                                                n = Pt.getTrackContentProtection(r, Pt.getBitrate(r, t));
                                                                            return n && n.get("data")
                                                                        })).distinctUntilChanged((function(t) {
                                                                            var r = Pt.getTrack(e, t);
                                                                            return Pt.getTrackContentProtection(r, Pt.getBitrate(r, t)).get("data")
                                                                        }))
                                                                    })).flatMap((function(r) {
                                                                        return n.filter((function(t) {
                                                                            return t
                                                                        })).flatMap((function(n) {
                                                                            var i = Pt.getTrack(e, r),
                                                                                s = Pt.getBitrate(i, r),
                                                                                a = Pt.getTrackContentProtection(i, s);
                                                                            return t.dispatch(function(t, e, r) {
                                                                                return {
                                                                                    type: "SESSION_UPDATE_START",
                                                                                    payload: {
                                                                                        trackId: t,
                                                                                        bitrate: e,
                                                                                        label: r
                                                                                    }
                                                                                }
                                                                            }(i.get("id"), s, a.get("label"))), o.Observable.fromPromise(n.update(new Uint8Array(a.get("data")))).do((function() {
                                                                                t.dispatch(function(t, e, r) {
                                                                                    return {
                                                                                        type: "SESSION_UPDATE_SUCCEED",
                                                                                        payload: {
                                                                                            trackId: t,
                                                                                            bitrate: e,
                                                                                            label: r
                                                                                        }
                                                                                    }
                                                                                }(i.get("id"), s, a.get("label")))
                                                                            }))
                                                                        }))
                                                                    })).takeUntil(r).subscribe(), r.flatMap((function() {
                                                                        return n.filter((function(t) {
                                                                            return t
                                                                        })).do((function(t) {
                                                                            var e = t.close();
                                                                            void 0 !== e && e.catch(me)
                                                                        }))
                                                                    })).take(1).subscribe(), {
                                                                        dispose: function() {
                                                                            r.onNext(), r.onCompleted()
                                                                        }
                                                                    }
                                                                }(t, r)), e.set(r, n)
                                                            }
                                                        }));
                                                        for (var i, s = wt(e.keys()); !(i = s()).done;) {
                                                            var a = i.value;
                                                            n.includes(a) || (e.get(a).forEach((function(t) {
                                                                return t.dispose()
                                                            })), e.get(a).clear(), e.delete(a))
                                                        }
                                                    }));
                                                return {
                                                    dispose: function() {
                                                        r.dispose(), e.clear()
                                                    },
                                                    localCache: e
                                                }
                                            }(this.store), C.getDebugMode() && (this.debugPanel = (t = function(t) {
                                                var e = document.body,
                                                    r = ke.createDebugPanel(),
                                                    n = function(t, e) {
                                                        var r = ke.createPropertyWatcher();
                                                        e.appendChild(r);
                                                        var n = r.querySelector("button"),
                                                            i = [];
                                                        return n.addEventListener("click", (function() {
                                                            var e = r.querySelector("input").value.replace(/\s/g, "").split(","),
                                                                n = document.querySelector(".propertyWatcher"),
                                                                o = ke.createElement("li", {
                                                                    innerHTML: e
                                                                });
                                                            n.appendChild(o), i.push(t.stateObservable.distinctUntilChanged((function(t) {
                                                                return t.getIn(e)
                                                            })).map((function(t) {
                                                                return t.getIn(e)
                                                            })).subscribe((function(t) {
                                                                o.innerHTML = e + " is " + t
                                                            })))
                                                        })), {
                                                            dispose: function() {
                                                                i.map((function(t) {
                                                                    return t.dispose()
                                                                }))
                                                            }
                                                        }
                                                    }(t, r);
                                                r.appendChild(ke.createCloseDebugPanel());
                                                var i = function(t, e) {
                                                        var r = ke.createPlayerStatus(),
                                                            n = [];

                                                        function i(e) {
                                                            return t.stateObservable.filter((function(t) {
                                                                return t.getIn(["playback", "id"])
                                                            })).filter((function(t) {
                                                                var e = Pt.getCurrentTrack(t);
                                                                return e && e.get("fragmented")
                                                            })).map((function(t) {
                                                                return t.getIn(e)
                                                            })).filter((function(t) {
                                                                return t
                                                            })).distinctUntilChanged()
                                                        }
                                                        return e.appendChild(r), n.push(t.stateObservable.map((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).filter((function(t) {
                                                            return t
                                                        })).distinctUntilChanged().flatMap((function(t) {
                                                            return i(["media", t, "lastBufferedIndex"])
                                                        })).subscribe((function(t) {
                                                            r.querySelector("#lastBufferedIndex").innerHTML = "lastBufferedIndex is " + t
                                                        }))), n.push(t.stateObservable.map((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).filter((function(t) {
                                                            return t
                                                        })).distinctUntilChanged().flatMap((function(t) {
                                                            return i(["media", t, "ranges"])
                                                        })).subscribe((function(t) {
                                                            var e = r.querySelector("#bufferRange"),
                                                                n = "bufferRange: ";
                                                            t.forEach((function(t) {
                                                                n += t.get(0) + " to " + t.get(1) + " "
                                                            })), e.innerHTML = n
                                                        }))), n.push(t.stateObservable.map((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).filter((function(t) {
                                                            return t
                                                        })).distinctUntilChanged().flatMap((function(t) {
                                                            return i(["cache", t, "numOfAvailableSegments"])
                                                        })).subscribe((function(t) {
                                                            r.querySelector("#numOfAvailableSegments").innerHTML = "numOfAvailableSegments is " + t
                                                        }))), n.push(i(["playback", "bitrate"]).subscribe((function(t) {
                                                            r.querySelector("#bitrate").innerHTML = "bitrate is " + t
                                                        }))), {
                                                            dispose: function() {
                                                                n.map((function(t) {
                                                                    return t.dispose()
                                                                }))
                                                            }
                                                        }
                                                    }(t, r),
                                                    s = function(t, e) {
                                                        var r = [];
                                                        return r.push(t.stateObservable.distinctUntilChanged((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).map((function(t) {
                                                            return Pt.getCurrentTrack(t)
                                                        })).filter((function(t) {
                                                            return t && t.get("fragmented") && !t.get("isDynamic")
                                                        })).subscribe((function(t) {
                                                            var r = document.querySelector(".streamingStatus");
                                                            r && e.removeChild(r);
                                                            var n = Math.min(t.get("numOfAvailableSegments"), 500);
                                                            r = ke.createStreamingStatus(), t.get("bitrateList").forEach((function(t) {
                                                                for (var e = 0; e < n;) {
                                                                    var i = ke.createElement("canvas", {
                                                                        id: t + "_" + e
                                                                    });
                                                                    i.style.width = Ct(100 / n, 2) + "%", i.style.height = "20%", i.style.float = "left", r.appendChild(i), e++
                                                                }
                                                                r.appendChild(ke.createElement("br"))
                                                            })), e.appendChild(r)
                                                        }))), r.push(t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).map((function(t) {
                                                            return Pt.getCurrentTrack(t)
                                                        })).distinctUntilChanged((function(t) {
                                                            return t && t.get("fragmented") && t.get("isDynamic")
                                                        })).filter((function(t) {
                                                            return t && t.get("fragmented") && t.get("isDynamic")
                                                        })).subscribe((function(t) {
                                                            var r = document.querySelector(".streamingStatus");
                                                            r && e.removeChild(r);
                                                            var n = t.get("numOfAvailableSegments");
                                                            r = ke.createStreamingStatus(), t.get("bitrateList").forEach((function(t) {
                                                                for (var e = n; e < n + 50;) {
                                                                    var i = ke.createElement("canvas", {
                                                                        id: t + "_" + e
                                                                    });
                                                                    i.style.width = Ct(2, 2) + "%", i.style.height = "20%", i.style.float = "left", r.appendChild(i), e++
                                                                }
                                                                r.appendChild(ke.createElement("br"))
                                                            })), e.appendChild(r)
                                                        }))), r.push(t.stateObservable.filter((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).filter((function(t) {
                                                            var e = Pt.getCurrentTrack(t);
                                                            return e && e.get("fragmented")
                                                        })).map((function(t) {
                                                            return t.getIn(["playback", "id"])
                                                        })).distinctUntilChanged().flatMapLatest((function(e) {
                                                            var r, n = [];
                                                            return Pt.getTrack(e, t.getState()).get("bitrateList").forEach((function(r) {
                                                                n.push(function(t, e, r) {
                                                                    return t.stateObservable.map((function(t) {
                                                                        return Pt.getTrack(e, t)
                                                                    })).filter((function(t) {
                                                                        return t
                                                                    })).flatMap((function() {
                                                                        var n = ["cache", e, "bitrates", r];
                                                                        return t.stateObservable.distinctUntilChanged((function(t) {
                                                                            return t.getIn(n)
                                                                        })).filter((function(t) {
                                                                            return t.getIn(n)
                                                                        })).map((function(t) {
                                                                            return {
                                                                                fragmentDuration: t.getIn(["cache", e, "fragmentDuration"]),
                                                                                fragments: t.getIn(n).get("fragments"),
                                                                                bitrate: r,
                                                                                ranges: t.getIn(["media", e, "ranges"])
                                                                            }
                                                                        }))
                                                                    }))
                                                                }(t, e, r))
                                                            })), (r = o.Observable).merge.apply(r, n)
                                                        })).subscribe((function(t) {
                                                            var e, r;
                                                            e = t.ranges, r = t.bitrate, t.fragments.forEach((function(t) {
                                                                ! function(t, e, r, n) {
                                                                    var i, o = document.getElementById(n + "_" + t.index);
                                                                    o && (i = Pt.isFragmentInBufferedRanges(t.startTime, t.endTime, r) ? "blue" : t.data && t.isBuffering ? "green" : t.data && !t.isBuffering ? "yellow" : t.isRequesting ? "orange" : "red", o.style.backgroundColor = i)
                                                                }(t.toJS(), 0, e, r)
                                                            }))
                                                        }))), {
                                                            dispose: function() {
                                                                r.map((function(t) {
                                                                    return t.dispose()
                                                                }))
                                                            }
                                                        }
                                                    }(t, r);
                                                return e.insertBefore(r, e.firstChild), {
                                                    dispose: function() {
                                                        n.dispose(), i.dispose(), s.dispose()
                                                    }
                                                }
                                            }(this.store), document.querySelector("#closeDebugPanel").addEventListener("click", (function() {
                                                t.dispose(), document.body.removeChild(document.querySelector("#maestroDebugPannel"))
                                            })), {
                                                dispose: function() {
                                                    return t.dispose()
                                                }
                                            })), this._listeners = {
                                                paused: [],
                                                error: [],
                                                ended: [],
                                                started: [],
                                                timeupdate: [],
                                                buffertime: [],
                                                bitratechange: [],
                                                canplay: [],
                                                stalled: [],
                                                seeking: [],
                                                resumed: [],
                                                expired: [],
                                                fragmentLatency: []
                                            }, this.listenerObservables = this._setupEventListeners(), this.load = this.load.bind(this), this.play = this.play.bind(this), this.resume = this.resume.bind(this), this.pause = this.pause.bind(this), this.mute = this.mute.bind(this), this.repeat = this.repeat.bind(this), this.seekTo = this.seekTo.bind(this), this.volume = this.volume.bind(this), this.setConfig = this.setConfig.bind(this), this.isPlaying = this.isPlaying.bind(this), this.isPaused = this.isPaused.bind(this), this.isEnded = this.isEnded.bind(this), this.isCached = this.isCached.bind(this), this.isStalled = this.isStalled.bind(this), this.isSeeking = this.isSeeking.bind(this), this.getCurrentTime = this.getCurrentTime.bind(this), this.getCurrentBitrate = this.getCurrentBitrate.bind(this), this.getBufferedTime = this.getBufferedTime.bind(this), this.getDuration = this.getDuration.bind(this), this.getAudioElement = this.getAudioElement.bind(this), this.getVolume = this.getVolume.bind(this), this.addEventListener = this.addEventListener.bind(this), this.removeEventListener = this.removeEventListener.bind(this), this.decreaseBitrate = this.decreaseBitrate.bind(this), this.increaseBitrate = this.increaseBitrate.bind(this), this.destroy = this.destroy.bind(this), this.getNetworkMetrics = this.getNetworkMetrics.bind(this), this.getCurrentState = this.getCurrentState.bind(this), this.getLatestError = this.getLatestError.bind(this)
                                        }
                                        var e = t.prototype;
                                        return e.load = function(t) {
                                            return this.store.dispatch(function(t) {
                                                return function(e, r) {
                                                    var n = r().getIn(["cache", t.id]);
                                                    if (n) {
                                                        var i = function(t, e) {
                                                            var r = e(),
                                                                n = r.getIn(["cache", t.id]);
                                                            if (n.get("fragmented")) return n.get("isDynamic") ? function(t, e, r) {
                                                                e.manifest = t.get("manifest");
                                                                var n = ee(e, r);
                                                                return n.waitingServerTimeSync = t.get("waitingServerTimeSync"), (t = t.merge(n)).get("bitrateList").forEach((function(e) {
                                                                    t = t.setIn(["bitrates", e, "needsInitFragment"], !1)
                                                                })), t
                                                            }(n, t, e()) : function(t, e, r) {
                                                                e.manifest = e.manifest || t.get("manifest");
                                                                var n = ee(e, r);
                                                                return t.get("bitrateList").forEach((function(e) {
                                                                    var r = ["bitrates", e, "initialization", "url"],
                                                                        i = ["bitrates", e, "fragments"];
                                                                    t.getIn(r) && (t = t.setIn(r, n.bitrates[e].initialization.url)), t = t.setIn(i, t.getIn(i).map((function(t) {
                                                                        return t.set("url", n.bitrates[e].fragments[t.get("index")].url)
                                                                    }))).set("expireAt", n.expireAt).set("addedAt", Date.now())
                                                                })), t
                                                            }(n, t, e());
                                                            var i = n.get("url") !== t.url,
                                                                o = Pt.isFullyBuffered(t.id, r);
                                                            if (i && !o) {
                                                                var s = {};
                                                                return t.url && (s.url = t.url, s.expireAt = t.expiration || n.get("expireAt")), n.merge(s)
                                                            }
                                                            return n
                                                        }(t, r);
                                                        i !== n && e({
                                                            type: "REPLACE_TRACK",
                                                            payload: {
                                                                track: i
                                                            }
                                                        })
                                                    } else e({
                                                        type: "ADD_TRACK",
                                                        payload: {
                                                            track: ee(t, r())
                                                        }
                                                    })
                                                }
                                            }(t)), (t = Pt.getTrack(t.id, this.store.getState())).get("manifest") || this.store.dispatch(se(t)), this
                                        }, e.play = function(t, e) {
                                            void 0 === e && (e = 0);
                                            var r = Pt.getTrack(t, this.store.getState()),
                                                n = r.get("isDynamic") ? Pt.getDynamicTrackDurationWithOffset(r) : e;
                                            return this.store.dispatch({
                                                type: "PLAYBACK_PAUSE"
                                            }), this.store.dispatch(function(t, e) {
                                                return void 0 === e && (e = 0),
                                                    function(r, n) {
                                                        var i, o, s = n(),
                                                            a = s.getIn(["cache", t]);
                                                        s.getIn(["playback", "id"]) === t ? (i = s.getIn(["playback", "bitrate"]), o = s.getIn(["playback", "codecs"])) : (i = Pt.getBitrate(t, s), o = a.getIn(["bitrates", i, "codecs"])), r({
                                                            type: "PLAYBACK_SET",
                                                            payload: {
                                                                trackId: t,
                                                                bitrate: i,
                                                                codecs: o,
                                                                time: e
                                                            }
                                                        })
                                                    }
                                            }(t, n)), this.store.dispatch({
                                                type: "PLAYBACK_PLAY"
                                            }), this
                                        }, e.remove = function(t) {
                                            return this.store.dispatch(re(t)), this
                                        }, e.resume = function() {
                                            return this.store.dispatch({
                                                type: "PLAYBACK_PLAY"
                                            }), this
                                        }, e.pause = function() {
                                            return this.store.dispatch({
                                                type: "PLAYBACK_PAUSE"
                                            }), this
                                        }, e.mute = function() {
                                            return this.store.dispatch({
                                                type: "PLAYBACK_TOGGLE_MUTE"
                                            }), this
                                        }, e.repeat = function() {
                                            return this.store.dispatch({
                                                type: "PLAYBACK_TOGGLE_REPEAT"
                                            }), this
                                        }, e.seekTo = function(t) {
                                            return this.store.dispatch(jt(t)), this
                                        }, e.volume = function(t) {
                                            return this.store.dispatch({
                                                type: "PLAYBACK_SET_VOLUME",
                                                payload: {
                                                    volume: t
                                                }
                                            }), this
                                        }, e.setConfig = function(t) {
                                            return this.store.dispatch(function(t) {
                                                return {
                                                    type: "UPDATE_CONFIG",
                                                    payload: {
                                                        config: t
                                                    }
                                                }
                                            }(t)), this
                                        }, e.isPlaying = function() {
                                            return this.store.getState().getIn(["playback", "playing"])
                                        }, e.isPaused = function() {
                                            return this.store.getState().getIn(["playback", "paused"])
                                        }, e.isEnded = function() {
                                            return this.store.getState().getIn(["playback", "ended"])
                                        }, e.isCached = function(t) {
                                            return this.store.getState().get("cache").has(t)
                                        }, e.isStalled = function() {
                                            return this.store.getState().getIn(["playback", "stalled"])
                                        }, e.isSeeking = function() {
                                            return this.store.getState().getIn(["playback", "seeking"])
                                        }, e.getCacheList = function() {
                                            return this.store.getState().getIn(["cache", "trackIds"]).toArray()
                                        }, e.isCurrentTrackId = function(t) {
                                            var e = Pt.getCurrentTrack(this.store.getState());
                                            return !!e && e.get("id") === t
                                        }, e.getCurrentTrackId = function() {
                                            var t = Pt.getCurrentTrack(this.store.getState());
                                            return t ? t.get("id") : null
                                        }, e.getCurrentTime = function() {
                                            return this.store.getState().getIn(["playback", "time"])
                                        }, e.getCurrentBitrate = function() {
                                            return this.store.getState().getIn(["playback", "bitrate"])
                                        }, e.getBufferedTime = function() {
                                            var t = this.store.getState(),
                                                e = Pt.getCurrentTrack(t),
                                                r = this.getCurrentTime();
                                            if (!e) return r;
                                            var n = t.getIn(["media", e.get("id"), "ranges"]),
                                                i = It.getRange(n, r);
                                            return i ? i.get(1) : r
                                        }, e.getDuration = function() {
                                            return this.store.getState().getIn(["playback", "duration"])
                                        }, e.getAudioElement = function() {
                                            var t = this.store.getState(),
                                                e = Pt.getCurrentTrack(t);
                                            if (e) return t.getIn(["media", e.get("id"), "audioEl"])
                                        }, e.getNetworkMetrics = function(t) {
                                            var e = this.store.getState().get("network");
                                            return t ? e.get(t).toJS() : e.toJS()
                                        }, e.getBandwidthBPS = function() {
                                            return this.store.getState().getIn(["abr", "bandwidthBPS"])
                                        }, e.getLatestBandwidthBPS = function() {
                                            return this.store.getState().getIn(["abr", "latestBandwidthBPS"])
                                        }, e.getVolume = function() {
                                            return this.store.getState().getIn(["playback", "volume"])
                                        }, e.getCurrentState = function() {
                                            return this.store.getState()
                                        }, e.getLatestError = function() {
                                            var t = this.store.getState().getIn(["errors", "list"]).last();
                                            return t ? t.toJS() : null
                                        }, e.getPlaybackTimestamps = function() {
                                            return this.store.getState().getIn(["playbackTimestamps"]).toJS()
                                        }, t.isSupported = function(t) {
                                            var e, r = !!window.Audio && !!window.MediaSource;
                                            e = t ? r && MediaSource.isTypeSupported(t) : r;
                                            var n = _e.isVersionSupported();
                                            return e && n
                                        }, t.isEMESupported = function(t, e) {
                                            var r = _e.isEMEVersionSupported() && (!!window.MSMediaKeys || !!window.MediaKeys && !!window.navigator && !!window.navigator.requestMediaKeySystemAccess && !!window.MediaKeySystemAccess && !!window.MediaKeySystemAccess.prototype.getConfiguration);
                                            return t ? r ? window.navigator.requestMediaKeySystemAccess(t, e) : Promise.reject() : r
                                        }, e.addEventListener = function(t, e) {
                                            var r = this._listeners[t];
                                            return r && r.push(e), this
                                        }, e.removeEventListener = function(t, e) {
                                            var r = this._listeners[t];
                                            if (r) {
                                                var n = r.indexOf(e);
                                                n >= 0 && r.splice(n, 1)
                                            }
                                            return this
                                        }, e._setupEventListeners = function() {
                                            var t = this,
                                                e = [];
                                            e.push(he.propertyObservable(this.store.stateObservable, "playback", "time").subscribe((function(e) {
                                                t._listeners.timeupdate.forEach((function(t) {
                                                    return t(e)
                                                }))
                                            }))), e.push(he.propertyObservable(this.store.stateObservable, "playback", "bitrate").subscribe((function(e) {
                                                t._listeners.bitratechange.forEach((function(t) {
                                                    return t(e)
                                                }))
                                            }))), e.push(he.truthyPropertyObservable(this.store.stateObservable, "playback", "started").subscribe((function() {
                                                t._listeners.started.forEach((function(t) {
                                                    return t()
                                                }))
                                            }))), e.push(this.store.stateObservable.distinctUntilChanged((function(t) {
                                                return t.getIn(["playback", "ended"])
                                            })).filter((function(t) {
                                                return t.getIn(["playback", "ended"])
                                            })).subscribe((function() {
                                                t._listeners.ended.forEach((function(t) {
                                                    return t()
                                                }))
                                            }))), e.push(this.store.stateObservable.distinctUntilChanged((function(t) {
                                                return t.getIn(["playback", "stalled"])
                                            })).filter((function(t) {
                                                return t.getIn(["playback", "started"])
                                            })).subscribe((function(e) {
                                                var r = e.getIn(["playback", "stalled"]),
                                                    n = e.getIn(["playback", "bitrate"]);
                                                t._listeners.stalled.forEach((function(t) {
                                                    return t(r, n)
                                                }))
                                            }))), e.push(this.store.stateObservable.distinctUntilChanged((function(t) {
                                                return t.getIn(["playback", "paused"])
                                            })).filter((function(t) {
                                                return t.getIn(["playback", "started"])
                                            })).filter((function(t) {
                                                return t.getIn(["playback", "paused"])
                                            })).subscribe((function() {
                                                t._listeners.paused.forEach((function(t) {
                                                    return t()
                                                }))
                                            }))), e.push(this.store.stateObservable.distinctUntilChanged((function(t) {
                                                return t.getIn(["playback", "paused"])
                                            })).filter((function(t) {
                                                return t.getIn(["playback", "started"])
                                            })).filter((function(t) {
                                                return !t.getIn(["playback", "paused"])
                                            })).subscribe((function() {
                                                t._listeners.resumed.forEach((function(t) {
                                                    return t()
                                                }))
                                            }))), e.push(this.store.stateObservable.distinctUntilChanged((function(t) {
                                                return t.getIn(["playback", "seeking"])
                                            })).filter((function(t) {
                                                return t.getIn(["playback", "started"])
                                            })).subscribe((function(e) {
                                                var r = e.getIn(["playback", "seeking"]);
                                                t._listeners.seeking.forEach((function(t) {
                                                    return t(r)
                                                }))
                                            }))), e.push(this.store.stateObservable.distinctUntilChanged((function(t) {
                                                return t.getIn(["playback", "id"])
                                            })).filter((function(t) {
                                                return t.getIn(["playback", "id"])
                                            })).flatMapLatest((function(e) {
                                                var r = e.getIn(["playback", "id"]),
                                                    n = e.getIn(["media", r, "ranges"]);
                                                return n && n.size > 0 ? o.Observable.just() : t.store.stateObservable.map((function(t) {
                                                    return t.getIn(["media", r, "ranges"])
                                                })).filter((function(t) {
                                                    return t && t.size >= 1
                                                })).take(1)
                                            })).subscribe((function() {
                                                t._listeners.canplay.forEach((function(t) {
                                                    return t()
                                                }))
                                            }))), e.push(he.propertyObservable(this.store.stateObservable, "errors", "list").subscribe((function(e) {
                                                var r = e.last();
                                                r && t._listeners.error.forEach((function(t) {
                                                    return t(r.get("error"), r.get("extra").toJS())
                                                }))
                                            }))), e.push(this.store.stateObservable.filter((function(t) {
                                                return t.getIn(["playback", "id"])
                                            })).filter((function(t) {
                                                return t.getIn(["playback", "started"])
                                            })).distinctUntilChanged((function(t) {
                                                var e = t.getIn(["playback", "id"]);
                                                return t.getIn(["media", e, "ranges"])
                                            })).map((function(t) {
                                                var e = t.getIn(["playback", "id"]),
                                                    r = t.getIn(["media", e, "ranges"]),
                                                    n = t.getIn(["playback", "time"]);
                                                return It.bufferedAheadOf(r, n)
                                            })).subscribe((function(e) {
                                                t._listeners.buffertime.forEach((function(t) {
                                                    return t(e)
                                                }))
                                            })));
                                            var r = this.store.stateObservable.filter((function(t) {
                                                    var e = Pt.getCurrentTrack(t);
                                                    return e && e.get("expireAt")
                                                })).distinctUntilChanged((function(t) {
                                                    return Pt.getCurrentTrack(t).get("expireAt")
                                                })),
                                                n = this.store.stateObservable.distinctUntilChanged((function(t) {
                                                    return t.getIn(["playback", "id"])
                                                })).filter((function(t) {
                                                    var e = Pt.getCurrentTrack(t);
                                                    return e && e.get("expireAt")
                                                }));
                                            return e.push(o.Observable.merge(n, r).flatMapLatest((function(t) {
                                                var e = Pt.getCurrentTrack(t),
                                                    r = t.getIn(["config", "secondsToRetryManifest"]),
                                                    n = t.getIn(["config", "secondsToRetryManifestJitter"]),
                                                    i = e.get("expireAt"),
                                                    s = Math.random() * n;
                                                return o.Observable.just().delay(i - Date.now() - 1e3 * (r + s))
                                            })).subscribe((function() {
                                                t._listeners.expired.forEach((function(t) {
                                                    return t()
                                                }))
                                            }))), e.push(this.store.stateObservable.map((function(t) {
                                                return t.getIn(["network", "lastRequest"])
                                            })).filter((function(t) {
                                                return t
                                            })).distinctUntilChanged((function(t) {
                                                return t.get("time")
                                            })).subscribe((function(e) {
                                                t._listeners.fragmentLatency.forEach((function(t) {
                                                    return t(e.get("latency"), e.get("time"))
                                                }))
                                            }))), e
                                        }, e.decreaseBitrate = function() {
                                            return this.store.dispatch((function(t, e) {
                                                var r = e(),
                                                    n = Pt.getCurrentTrack(r);
                                                if (n) {
                                                    var i = n.get("bitrateList"),
                                                        o = r.getIn(["playback", "bitrate"]),
                                                        s = i.get(i.indexOf(o) + 1);
                                                    s && t({
                                                        type: "PLAYBACK_DECREASE_BITRATE",
                                                        payload: {
                                                            bitrate: s,
                                                            codecs: n.getIn(["bitrates", s, "codecs"])
                                                        }
                                                    })
                                                }
                                            })), this
                                        }, e.increaseBitrate = function() {
                                            return this.store.dispatch((function(t, e) {
                                                var r = e(),
                                                    n = Pt.getCurrentTrack(r);
                                                if (n) {
                                                    var i = n.get("bitrateList"),
                                                        o = r.getIn(["playback", "bitrate"]),
                                                        s = i.indexOf(o) - 1 >= 0 ? i.get(i.indexOf(o) - 1) : null;
                                                    s && t({
                                                        type: "PLAYBACK_INCREASE_BITRATE",
                                                        payload: {
                                                            bitrate: s,
                                                            codecs: n.getIn(["bitrates", s, "codecs"])
                                                        }
                                                    })
                                                }
                                            })), this
                                        }, e.destroy = function() {
                                            return this.ABREngine.dispose(), this.playbackEngine.dispose(), this.streamingEngine.dispose(), this.cacheEngine.dispose(), this.networkEngine.dispose(), this.mediaEngine.dispose(), this.manifestEngine.dispose(), this.createDebugPanel && this.createDebugPanel.dispose(), this.store.unsubscribe(), this.listenerObservables.forEach((function(t) {
                                                return t.dispose()
                                            })), this
                                        }, t
                                    }(),
                                    Config: C
                                }
                            }()
                        }))),
                        o = n((function(t, e) {
                            ! function(t) {
                                var e = function() {
                                    return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
                                };

                                function r(t) {
                                    var r = t.appName,
                                        n = t.appVersion,
                                        i = e() + "-" + e() + "-" + r.substring(0, 4) + "-" + e() + "-" + (e() + Math.floor(16 * (1 + Math.random())).toString(16).substring(1));
                                    return "Maestro/1.0 " + r + "/" + n + " (" + i + ")"
                                }

                                function n(t, e) {
                                    var r = [],
                                        n = e,
                                        i = Array.isArray(n),
                                        o = 0;
                                    for (n = i ? n : n[Symbol.iterator]();;) {
                                        var s;
                                        if (i) {
                                            if (o >= n.length) break;
                                            s = n[o++]
                                        } else {
                                            if ((o = n.next()).done) break;
                                            s = o.value
                                        }
                                        var a = s;
                                        t.hasOwnProperty(a) && t[a] || r.push(a)
                                    }
                                    if (r.length > 0) throw "the configuration is missing the following keys: " + r.join(", ")
                                }
                                var i = {
                                        UK: "music.amazon.co.uk",
                                        DE: "music.amazon.de",
                                        CH: "music.amazon.de",
                                        AT: "music.amazon.de",
                                        FR: "music.amazon.fr",
                                        IT: "music.amazon.it",
                                        JP: "music.amazon.co.jp",
                                        ES: "music.amazon.es",
                                        IN: "music.amazon.in",
                                        MX: "music.amazon.com.mx",
                                        CA: "music.amazon.ca",
                                        AU: "music.amazon.com.au",
                                        NZ: "music.amazon.com.au",
                                        BR: "music.amazon.com.br"
                                    },
                                    o = {
                                        US: "NA",
                                        CA: "NA",
                                        MX: "NA",
                                        BR: "NA",
                                        AR: "NA",
                                        BO: "NA",
                                        CL: "NA",
                                        CO: "NA",
                                        CR: "NA",
                                        DO: "NA",
                                        EC: "NA",
                                        SV: "NA",
                                        GT: "NA",
                                        HN: "NA",
                                        NI: "NA",
                                        PA: "NA",
                                        PY: "NA",
                                        PE: "NA",
                                        UY: "NA",
                                        GB: "EU",
                                        DE: "EU",
                                        CH: "EU",
                                        AT: "EU",
                                        FR: "EU",
                                        IT: "EU",
                                        ES: "EU",
                                        IN: "EU",
                                        IE: "EU",
                                        BE: "EU",
                                        BG: "EU",
                                        CY: "EU",
                                        CZ: "EU",
                                        EE: "EU",
                                        FI: "EU",
                                        GR: "EU",
                                        HU: "EU",
                                        IS: "EU",
                                        LV: "EU",
                                        LI: "EU",
                                        LT: "EU",
                                        LU: "EU",
                                        MT: "EU",
                                        NL: "EU",
                                        PL: "EU",
                                        PT: "EU",
                                        SK: "EU",
                                        SE: "EU",
                                        JP: "FE",
                                        AU: "FE",
                                        NZ: "FE"
                                    },
                                    s = ["api"];

                                function a(t) {
                                    var e = t.musicTerritory,
                                        r = t.api,
                                        a = t.hostname,
                                        u = t.protocol,
                                        c = void 0 === u ? "https:" : u;
                                    n({
                                        api: r
                                    }, s);
                                    var h = function(t) {
                                        return void 0 === t && (t = "US"), o[t] || "NA"
                                    }(e);
                                    return c + "//" + (a || function(t) {
                                        return void 0 === t && (t = "US"), i[t] || "music.amazon.com"
                                    }(e)) + "/" + h + "/api/" + r + "/"
                                }
                                var u = {},
                                    c = function(t, e) {
                                        return function() {
                                            for (var r = new Array(arguments.length), n = 0; n < r.length; n++) r[n] = arguments[n];
                                            return t.apply(e, r)
                                        }
                                    };

                                function h(t) {
                                    return !!t.constructor && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t)
                                }
                                var f = Object.prototype.toString;

                                function l(t) {
                                    return "[object Array]" === f.call(t)
                                }

                                function p(t) {
                                    return null !== t && "object" == typeof t
                                }

                                function d(t) {
                                    return "[object Function]" === f.call(t)
                                }

                                function b(t, e) {
                                    if (null != t)
                                        if ("object" != typeof t && (t = [t]), l(t))
                                            for (var r = 0, n = t.length; r < n; r++) e.call(null, t[r], r, t);
                                        else
                                            for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.call(null, t[i], i, t)
                                }
                                var _ = {
                                        isArray: l,
                                        isArrayBuffer: function(t) {
                                            return "[object ArrayBuffer]" === f.call(t)
                                        },
                                        isBuffer: function(t) {
                                            return null != t && (h(t) || function(t) {
                                                return "function" == typeof t.readFloatLE && "function" == typeof t.slice && h(t.slice(0, 0))
                                            }(t) || !!t._isBuffer)
                                        },
                                        isFormData: function(t) {
                                            return "undefined" != typeof FormData && t instanceof FormData
                                        },
                                        isArrayBufferView: function(t) {
                                            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer && t.buffer instanceof ArrayBuffer
                                        },
                                        isString: function(t) {
                                            return "string" == typeof t
                                        },
                                        isNumber: function(t) {
                                            return "number" == typeof t
                                        },
                                        isObject: p,
                                        isUndefined: function(t) {
                                            return void 0 === t
                                        },
                                        isDate: function(t) {
                                            return "[object Date]" === f.call(t)
                                        },
                                        isFile: function(t) {
                                            return "[object File]" === f.call(t)
                                        },
                                        isBlob: function(t) {
                                            return "[object Blob]" === f.call(t)
                                        },
                                        isFunction: d,
                                        isStream: function(t) {
                                            return p(t) && d(t.pipe)
                                        },
                                        isURLSearchParams: function(t) {
                                            return "undefined" != typeof URLSearchParams && t instanceof URLSearchParams
                                        },
                                        isStandardBrowserEnv: function() {
                                            return ("undefined" == typeof navigator || "ReactNative" !== navigator.product) && "undefined" != typeof window && "undefined" != typeof document
                                        },
                                        forEach: b,
                                        merge: function t() {
                                            var e = {};

                                            function r(r, n) {
                                                e[n] = "object" == typeof e[n] && "object" == typeof r ? t(e[n], r) : r
                                            }
                                            for (var n = 0, i = arguments.length; n < i; n++) b(arguments[n], r);
                                            return e
                                        },
                                        extend: function(t, e, r) {
                                            return b(e, (function(e, n) {
                                                t[n] = r && "function" == typeof e ? c(e, r) : e
                                            })), t
                                        },
                                        trim: function(t) {
                                            return t.replace(/^\s*/, "").replace(/\s*$/, "")
                                        }
                                    },
                                    y = function(t, e, r, n, i) {
                                        return function(t, e, r, n, i) {
                                            return t.config = e, r && (t.code = r), t.request = n, t.response = i, t
                                        }(new Error(t), e, r, n, i)
                                    };

                                function v(t) {
                                    return encodeURIComponent(t).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
                                }
                                var g = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"],
                                    m = _.isStandardBrowserEnv() ? function() {
                                        var t, e = /(msie|trident)/i.test(navigator.userAgent),
                                            r = document.createElement("a");

                                        function n(t) {
                                            var n = t;
                                            return e && (r.setAttribute("href", n), n = r.href), r.setAttribute("href", n), {
                                                href: r.href,
                                                protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
                                                host: r.host,
                                                search: r.search ? r.search.replace(/^\?/, "") : "",
                                                hash: r.hash ? r.hash.replace(/^#/, "") : "",
                                                hostname: r.hostname,
                                                port: r.port,
                                                pathname: "/" === r.pathname.charAt(0) ? r.pathname : "/" + r.pathname
                                            }
                                        }
                                        return t = n(window.location.href),
                                            function(e) {
                                                var r = _.isString(e) ? n(e) : e;
                                                return r.protocol === t.protocol && r.host === t.host
                                            }
                                    }() : function() {
                                        return !0
                                    };

                                function w() {
                                    this.message = "String contains an invalid character"
                                }(w.prototype = new Error).code = 5, w.prototype.name = "InvalidCharacterError";
                                var E = _.isStandardBrowserEnv() ? {
                                        write: function(t, e, r, n, i, o) {
                                            var s = [];
                                            s.push(t + "=" + encodeURIComponent(e)), _.isNumber(r) && s.push("expires=" + new Date(r).toGMTString()), _.isString(n) && s.push("path=" + n), _.isString(i) && s.push("domain=" + i), !0 === o && s.push("secure"), document.cookie = s.join("; ")
                                        },
                                        read: function(t) {
                                            var e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
                                            return e ? decodeURIComponent(e[3]) : null
                                        },
                                        remove: function(t) {
                                            this.write(t, "", Date.now() - 864e5)
                                        }
                                    } : {
                                        write: function() {},
                                        read: function() {
                                            return null
                                        },
                                        remove: function() {}
                                    },
                                    S = "undefined" != typeof window && window.btoa && window.btoa.bind(window) || function(t) {
                                        for (var e, r, n = String(t), i = "", o = 0, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="; n.charAt(0 | o) || (s = "=", o % 1); i += s.charAt(63 & e >> 8 - o % 1 * 8)) {
                                            if ((r = n.charCodeAt(o += .75)) > 255) throw new w;
                                            e = e << 8 | r
                                        }
                                        return i
                                    },
                                    I = {
                                        "Content-Type": "application/x-www-form-urlencoded"
                                    };

                                function T(t, e) {
                                    !_.isUndefined(t) && _.isUndefined(t["Content-Type"]) && (t["Content-Type"] = e)
                                }
                                var C, k = {
                                    adapter: (("undefined" != typeof XMLHttpRequest || void 0 !== {}) && (C = function(t) {
                                        return new Promise((function(e, r) {
                                            var n = t.data,
                                                i = t.headers;
                                            _.isFormData(n) && delete i["Content-Type"];
                                            var o = new XMLHttpRequest,
                                                s = "onreadystatechange",
                                                a = !1;
                                            if ("undefined" == typeof window || !window.XDomainRequest || "withCredentials" in o || m(t.url) || (o = new window.XDomainRequest, s = "onload", a = !0, o.onprogress = function() {}, o.ontimeout = function() {}), t.auth && (i.Authorization = "Basic " + S((t.auth.username || "") + ":" + (t.auth.password || ""))), o.open(t.method.toUpperCase(), function(t, e, r) {
                                                    if (!e) return t;
                                                    var n;
                                                    if (r) n = r(e);
                                                    else if (_.isURLSearchParams(e)) n = e.toString();
                                                    else {
                                                        var i = [];
                                                        _.forEach(e, (function(t, e) {
                                                            null != t && (_.isArray(t) ? e += "[]" : t = [t], _.forEach(t, (function(t) {
                                                                _.isDate(t) ? t = t.toISOString() : _.isObject(t) && (t = JSON.stringify(t)), i.push(v(e) + "=" + v(t))
                                                            })))
                                                        })), n = i.join("&")
                                                    }
                                                    return n && (t += (-1 === t.indexOf("?") ? "?" : "&") + n), t
                                                }(t.url, t.params, t.paramsSerializer), !0), o.timeout = t.timeout, o[s] = function() {
                                                    if (o && (4 === o.readyState || a) && (0 !== o.status || o.responseURL && 0 === o.responseURL.indexOf("file:"))) {
                                                        var n, i, s, u, c, h = "getAllResponseHeaders" in o ? (n = o.getAllResponseHeaders(), c = {}, n ? (_.forEach(n.split("\n"), (function(t) {
                                                            if (u = t.indexOf(":"), i = _.trim(t.substr(0, u)).toLowerCase(), s = _.trim(t.substr(u + 1)), i) {
                                                                if (c[i] && g.indexOf(i) >= 0) return;
                                                                c[i] = "set-cookie" === i ? (c[i] ? c[i] : []).concat([s]) : c[i] ? c[i] + ", " + s : s
                                                            }
                                                        })), c) : c) : null;
                                                        ! function(t, e, r) {
                                                            var n = r.config.validateStatus;
                                                            r.status && n && !n(r.status) ? e(y("Request failed with status code " + r.status, r.config, null, r.request, r)) : t(r)
                                                        }(e, r, {
                                                            data: t.responseType && "text" !== t.responseType ? o.response : o.responseText,
                                                            status: 1223 === o.status ? 204 : o.status,
                                                            statusText: 1223 === o.status ? "No Content" : o.statusText,
                                                            headers: h,
                                                            config: t,
                                                            request: o
                                                        }), o = null
                                                    }
                                                }, o.onerror = function() {
                                                    r(y("Network Error", t, null, o)), o = null
                                                }, o.ontimeout = function() {
                                                    r(y("timeout of " + t.timeout + "ms exceeded", t, "ECONNABORTED", o)), o = null
                                                }, _.isStandardBrowserEnv()) {
                                                var u = E,
                                                    c = (t.withCredentials || m(t.url)) && t.xsrfCookieName ? u.read(t.xsrfCookieName) : void 0;
                                                c && (i[t.xsrfHeaderName] = c)
                                            }
                                            if ("setRequestHeader" in o && _.forEach(i, (function(t, e) {
                                                    void 0 === n && "content-type" === e.toLowerCase() ? delete i[e] : o.setRequestHeader(e, t)
                                                })), t.withCredentials && (o.withCredentials = !0), t.responseType) try {
                                                o.responseType = t.responseType
                                            } catch (e) {
                                                if ("json" !== t.responseType) throw e
                                            }
                                            "function" == typeof t.onDownloadProgress && o.addEventListener("progress", t.onDownloadProgress), "function" == typeof t.onUploadProgress && o.upload && o.upload.addEventListener("progress", t.onUploadProgress), t.cancelToken && t.cancelToken.promise.then((function(t) {
                                                o && (o.abort(), r(t), o = null)
                                            })), void 0 === n && (n = null), o.send(n)
                                        }))
                                    }), C),
                                    transformRequest: [function(t, e) {
                                        return function(t, e) {
                                            _.forEach(t, (function(e, r) {
                                                "Content-Type" !== r && r.toUpperCase() === "Content-Type".toUpperCase() && (t["Content-Type"] = e, delete t[r])
                                            }))
                                        }(e), _.isFormData(t) || _.isArrayBuffer(t) || _.isBuffer(t) || _.isStream(t) || _.isFile(t) || _.isBlob(t) ? t : _.isArrayBufferView(t) ? t.buffer : _.isURLSearchParams(t) ? (T(e, "application/x-www-form-urlencoded;charset=utf-8"), t.toString()) : _.isObject(t) ? (T(e, "application/json;charset=utf-8"), JSON.stringify(t)) : t
                                    }],
                                    transformResponse: [function(t) {
                                        if ("string" == typeof t) try {
                                            t = JSON.parse(t)
                                        } catch (t) {}
                                        return t
                                    }],
                                    timeout: 0,
                                    xsrfCookieName: "XSRF-TOKEN",
                                    xsrfHeaderName: "X-XSRF-TOKEN",
                                    maxContentLength: -1,
                                    validateStatus: function(t) {
                                        return t >= 200 && t < 300
                                    },
                                    headers: {
                                        common: {
                                            Accept: "application/json, text/plain, */*"
                                        }
                                    }
                                };
                                _.forEach(["delete", "get", "head"], (function(t) {
                                    k.headers[t] = {}
                                })), _.forEach(["post", "put", "patch"], (function(t) {
                                    k.headers[t] = _.merge(I)
                                }));
                                var x = k;

                                function A() {
                                    this.handlers = []
                                }
                                A.prototype.use = function(t, e) {
                                    return this.handlers.push({
                                        fulfilled: t,
                                        rejected: e
                                    }), this.handlers.length - 1
                                }, A.prototype.eject = function(t) {
                                    this.handlers[t] && (this.handlers[t] = null)
                                }, A.prototype.forEach = function(t) {
                                    _.forEach(this.handlers, (function(e) {
                                        null !== e && t(e)
                                    }))
                                };
                                var O = A,
                                    D = function(t, e, r) {
                                        return _.forEach(r, (function(r) {
                                            t = r(t, e)
                                        })), t
                                    },
                                    R = function(t) {
                                        return !(!t || !t.__CANCEL__)
                                    };

                                function N(t) {
                                    t.cancelToken && t.cancelToken.throwIfRequested()
                                }
                                var M = function(t) {
                                    var e, r;
                                    return N(t), t.baseURL && !/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t.url) && (t.url = (e = t.baseURL, (r = t.url) ? e.replace(/\/+$/, "") + "/" + r.replace(/^\/+/, "") : e)), t.headers = t.headers || {}, t.data = D(t.data, t.headers, t.transformRequest), t.headers = _.merge(t.headers.common || {}, t.headers[t.method] || {}, t.headers || {}), _.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (function(e) {
                                        delete t.headers[e]
                                    })), (t.adapter || x.adapter)(t).then((function(e) {
                                        return N(t), e.data = D(e.data, e.headers, t.transformResponse), e
                                    }), (function(e) {
                                        return R(e) || (N(t), e && e.response && (e.response.data = D(e.response.data, e.response.headers, t.transformResponse))), Promise.reject(e)
                                    }))
                                };

                                function F(t) {
                                    this.defaults = t, this.interceptors = {
                                        request: new O,
                                        response: new O
                                    }
                                }
                                F.prototype.request = function(t) {
                                    "string" == typeof t && (t = _.merge({
                                        url: arguments[0]
                                    }, arguments[1])), (t = _.merge(x, {
                                        method: "get"
                                    }, this.defaults, t)).method = t.method.toLowerCase();
                                    var e = [M, void 0],
                                        r = Promise.resolve(t);
                                    for (this.interceptors.request.forEach((function(t) {
                                            e.unshift(t.fulfilled, t.rejected)
                                        })), this.interceptors.response.forEach((function(t) {
                                            e.push(t.fulfilled, t.rejected)
                                        })); e.length;) r = r.then(e.shift(), e.shift());
                                    return r
                                }, _.forEach(["delete", "get", "head", "options"], (function(t) {
                                    F.prototype[t] = function(e, r) {
                                        return this.request(_.merge(r || {}, {
                                            method: t,
                                            url: e
                                        }))
                                    }
                                })), _.forEach(["post", "put", "patch"], (function(t) {
                                    F.prototype[t] = function(e, r, n) {
                                        return this.request(_.merge(n || {}, {
                                            method: t,
                                            url: e,
                                            data: r
                                        }))
                                    }
                                }));
                                var P = F;

                                function U(t) {
                                    this.message = t
                                }
                                U.prototype.toString = function() {
                                    return "Cancel" + (this.message ? ": " + this.message : "")
                                }, U.prototype.__CANCEL__ = !0;
                                var L = U;

                                function B(t) {
                                    if ("function" != typeof t) throw new TypeError("executor must be a function.");
                                    var e;
                                    this.promise = new Promise((function(t) {
                                        e = t
                                    }));
                                    var r = this;
                                    t((function(t) {
                                        r.reason || (r.reason = new L(t), e(r.reason))
                                    }))
                                }
                                B.prototype.throwIfRequested = function() {
                                    if (this.reason) throw this.reason
                                }, B.source = function() {
                                    var t;
                                    return {
                                        token: new B((function(e) {
                                            t = e
                                        })),
                                        cancel: t
                                    }
                                };
                                var j = B;

                                function q(t) {
                                    var e = new P(t),
                                        r = c(P.prototype.request, e);
                                    return _.extend(r, P.prototype, e), _.extend(r, e), r
                                }
                                var z = q(x);
                                z.Axios = P, z.create = function(t) {
                                    return q(_.merge(x, t))
                                }, z.Cancel = L, z.CancelToken = j, z.isCancel = R, z.all = function(t) {
                                    return Promise.all(t)
                                }, z.spread = function(t) {
                                    return function(e) {
                                        return t.apply(null, e)
                                    }
                                };
                                var K = z;
                                K.default = z;
                                var V = K;

                                function W(t, e) {
                                    var r = {
                                        "Content-Encoding": "amz-1.0",
                                        "Content-Type": "application/json"
                                    };
                                    if (e && (r["X-Amz-Target"] = e), t.oAuthToken && (r.Authorization = "Bearer " + t.oAuthToken), t.csrf && (r["csrf-rnd"] = t.csrf.rnd, r["csrf-token"] = t.csrf.token, r["csrf-ts"] = t.csrf.ts), t.cookie) try {
                                        r.Cookie = t.cookie
                                    } catch (t) {
                                        console.warn(t)
                                    }
                                    return r
                                }
                                var H = ["method", "hostname", "api"];

                                function G(t) {
                                    n(t, H);
                                    var e = Object.assign({}, u, t),
                                        r = W(e, e.target),
                                        i = {
                                            method: e.method,
                                            url: a(e),
                                            dataType: "json",
                                            headers: r
                                        };
                                    return e.body && (i.data = e.body), V(i)
                                }
                                var Y = ["hostname", "api"],
                                    J = ["deviceType", "deviceId"];

                                function $(t) {
                                    n(t, J), t.sessionId = t.sessionId || "111-1111111-1111111";
                                    var e = {
                                        customerId: t.customerId,
                                        deviceId: t.deviceId,
                                        deviceType: t.deviceType,
                                        sessionId: t.sessionId,
                                        musicTerritory: t.musicTerritory
                                    };
                                    return t.customerId && (e.customerId = t.customerId), e
                                }
                                var X = ["actionName", "timestamp"],
                                    Q = ["deviceId", "deviceType", "hostname", "musicTerritory"],
                                    Z = ["appVersion", "specificEventVersion", "musicTerritory"];

                                function tt(t, e) {
                                    t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t.__proto__ = e
                                }
                                var et = function(t) {
                                        return t < 10 ? "0" + t : t
                                    },
                                    rt = ["actionName", "appVersion", "specificEventVersion", "musicTerritory"],
                                    nt = ["csSessionId"],
                                    it = function(t) {
                                        var e, r, n, i = this;
                                        if (!t.actionName) throw new Error("Cirrus metric Events must have a name");
                                        this.additionalDetails = {
                                            baseEventVersion: "3",
                                            specificEventVersion: t.specificEventVersion,
                                            deviceTimeZone: (e = new Date, r = e.getTimezoneOffset() > 0 ? "-" : "+", n = Math.abs(e.getTimezoneOffset()), "" + r + et(Math.floor(n / 60)) + ":" + et(n % 60)),
                                            appVersion: t.appVersion,
                                            musicTerritory: t.musicTerritory
                                        }, this.timestamp = Date.now() / 1e3, this.actionName = t.actionName, t.sessionId && (t.csSessionId = t.sessionId), rt.forEach((function(e) {
                                            if (!t[e]) throw new Error("Base Metric Events require " + e + " to be passed in")
                                        })), nt.forEach((function(e) {
                                            void 0 !== t[e] && (i.additionalDetails[e] = t[e] + "")
                                        }))
                                    },
                                    ot = ["asin", "cdObjectId", "platformName", "subDeviceId", "subDeviceId", "subDeviceStreamMedium", "selectionSourceId", "selectionSourceType", "selectionSourceSessionId"],
                                    st = ["asin", "bitrates", "campaignId", "cdObjectId", "externalId", "initialPlaybackDelaySeconds", "locale", "mediaPlayerName", "metricsContext", "platformName", "scrobblingStatus", "selectionSourceId", "selectionSourceSessionId", "selectionSourceSubType", "subDeviceId", "subDeviceStreamMedium", "trackCount", "transferSpeedBPS", "url", "cdnType"],
                                    at = ["asin", "bytesExpected", "bytesReceived", "campaignId", "cdObjectId", "durationSeconds", "initialPlaybackDelayMilliseconds", "initialPlaybackDelaySeconds", "alexaTtsIpdMilliseconds", "mediaPlayerName", "percentageCompleted", "selectionSourceId", "selectionSourceSubType", "selectionSourceSessionId", "subDeviceId", "subDeviceStreamMedium", "transferSpeedBPS"],
                                    ut = ["asin", "campaignId", "cdObjectId", "contentSubscriptionMode", "externalId", "initialPlaybackDelaySeconds", "linkedAmznAccountId", "locale", "metricsContext", "platformName", "resourceType", "scrobblingStatus", "selectionSourceSubType", "speakerId", "subDeviceId", "subDeviceStreamMedium", "trackCount", "isVoiceInitiated", "isDirectedPlay"],
                                    ct = ["associateTag", "detailPageItemId", "detailPageItemIdType", "loadTimeMilliseconds", "pageSubType", "referer", "refMarker", "region", "viewType"],
                                    ht = ["entityId", "entityIdType", "entityPos", "entityType", "interactionType", "pageType", "pageSubType", "refMarker", "url"],
                                    ft = ["contentInfoInstId", "contentSrc"],
                                    lt = ["actionType"],
                                    pt = ["flexEventName", "strings", "numbers"],
                                    dt = {
                                        StreamingInitiatedMetric: function(t) {
                                            function e(e) {
                                                var r;
                                                void 0 === e && (e = {}), e.actionName = "streamingInitiated", e.specificEventVersion = "1";
                                                var n = e.contentSubscriptionMode,
                                                    i = void 0 === n ? "NONE" : n,
                                                    o = e.isDirectedPlay,
                                                    s = void 0 === o ? "false" : o,
                                                    a = e.isExplicitLanguageFilterOn,
                                                    u = void 0 === a ? "false" : a,
                                                    c = e.isShufflePlay,
                                                    h = void 0 === c ? "false" : c,
                                                    f = e.locale,
                                                    l = void 0 === f ? "en_US" : f,
                                                    p = e.mediaPlayerName,
                                                    d = void 0 === p ? "MAESTRO" : p,
                                                    b = e.resourceType,
                                                    _ = void 0 === b ? null : b,
                                                    y = e.source,
                                                    v = void 0 === y ? "WIFI" : y,
                                                    g = e.streamOrDRMTech;
                                                if ((r = t.call(this, e) || this).additionalDetails = Object.assign({}, r.additionalDetails, {
                                                        contentSubscriptionMode: i,
                                                        isDirectedPlay: s,
                                                        isExplicitLanguageFilterOn: u,
                                                        isShufflePlay: h,
                                                        locale: l,
                                                        mediaPlayerName: d,
                                                        resourceType: _,
                                                        source: v,
                                                        streamOrDRMTech: g
                                                    }), ot.forEach((function(t) {
                                                        void 0 !== e[t] && (r.additionalDetails[t] = e[t] + "")
                                                    })), !r.additionalDetails.asin && !r.additionalDetails.cdObjectId) throw new Error("Streaming Initiated Metrics must have an asin or cdObjectId");
                                                return r
                                            }
                                            return tt(e, t), e
                                        }(it),
                                        StreamingTerminatedMetric: function(t) {
                                            function e(e) {
                                                var r;
                                                void 0 === e && (e = {}), e.actionName = "streamingTerminated", e.specificEventVersion = "4";
                                                var n = e.cacheHitStatus,
                                                    i = void 0 === n ? "UNKNOWN" : n,
                                                    o = e.durationSeconds,
                                                    s = e.initialPlaybackDelayMilliseconds,
                                                    a = e.isDirectedPlay,
                                                    u = void 0 === a ? "false" : a,
                                                    c = e.isExplicitLanguageFilterOn,
                                                    h = void 0 === c ? "false" : c,
                                                    f = e.contentSubscriptionMode,
                                                    l = void 0 === f ? "NONE" : f,
                                                    p = e.isShufflePlay,
                                                    d = void 0 === p ? "false" : p,
                                                    b = e.pageType,
                                                    _ = e.rebufferCount,
                                                    y = void 0 === _ ? "0" : _,
                                                    v = e.resourceType,
                                                    g = e.selectionSourceType,
                                                    m = e.source,
                                                    w = void 0 === m ? "WIFI" : m,
                                                    E = e.streamOrDRMTech,
                                                    S = e.terminationReason;
                                                if ((r = t.call(this, e) || this).additionalDetails = Object.assign({}, r.additionalDetails, {
                                                        cacheHitStatus: i,
                                                        durationSeconds: o,
                                                        initialPlaybackDelayMilliseconds: s,
                                                        isDirectedPlay: u,
                                                        isExplicitLanguageFilterOn: h,
                                                        contentSubscriptionMode: l,
                                                        isShufflePlay: d,
                                                        pageType: b,
                                                        rebufferCount: y,
                                                        resourceType: v,
                                                        selectionSourceType: g,
                                                        source: w,
                                                        streamOrDRMTech: E,
                                                        terminationReason: S
                                                    }), st.forEach((function(t) {
                                                        void 0 !== e[t] && (r.additionalDetails[t] = e[t] + "")
                                                    })), !r.additionalDetails.asin && !r.additionalDetails.cdObjectId) throw new Error("Streaming Terminated Metrics must have an asin or cdObjectId");
                                                return r
                                            }
                                            return tt(e, t), e
                                        }(it),
                                        StreamingRequiredRebufferingMetric: function(t) {
                                            function e(e) {
                                                var r;
                                                e.actionName = "streamingRequiredReBuffering", e.specificEventVersion = "3";
                                                var n = e.bitrates,
                                                    i = e.cacheHitStatus,
                                                    o = void 0 === i ? "UNKNOWN" : i,
                                                    s = e.contentSubscriptionMode,
                                                    a = void 0 === s ? "NONE" : s,
                                                    u = e.durationMilliseconds,
                                                    c = e.isExplicitLanguageFilterOn,
                                                    h = void 0 !== c && c,
                                                    f = e.loadTimeMilliseconds,
                                                    l = e.selectionSourceType,
                                                    p = void 0 === l ? "AUTO_PLAYLIST" : l,
                                                    d = e.source,
                                                    b = void 0 === d ? "WIFI" : d,
                                                    _ = e.streamOrDRMTech;
                                                if ((r = t.call(this, e) || this).additionalDetails = Object.assign(r.additionalDetails, {
                                                        bitrates: n,
                                                        cacheHitStatus: o,
                                                        contentSubscriptionMode: a,
                                                        durationMilliseconds: u,
                                                        isExplicitLanguageFilterOn: h,
                                                        loadTimeMilliseconds: f,
                                                        selectionSourceType: p,
                                                        source: b,
                                                        streamOrDRMTech: _
                                                    }), at.forEach((function(t) {
                                                        void 0 !== e[t] && (r.additionalDetails[t] = e[t] + "")
                                                    })), !r.additionalDetails.asin && !r.additionalDetails.cdObjectId) throw new Error("Streaming Initiated Metrics must have an asin or cdObjectId");
                                                return r
                                            }
                                            return tt(e, t), e
                                        }(it),
                                        TrackStreamedMetric: function(t) {
                                            function e(e) {
                                                var r;
                                                void 0 === e && (e = {}), e.actionName = "trackStreamed", e.specificEventVersion = "3";
                                                var n = e.selectionSourceId,
                                                    i = void 0 === n ? "" : n,
                                                    o = e.selectionSourceType,
                                                    s = void 0 === o ? "" : o,
                                                    a = e.subDeviceId,
                                                    u = void 0 === a ? "UNKNOWN" : a,
                                                    c = e.trackProgress,
                                                    h = void 0 === c ? "0" : c;
                                                return (r = t.call(this, e) || this).additionalDetails = Object.assign({}, r.additionalDetails, {
                                                    selectionSourceId: i,
                                                    selectionSourceType: s,
                                                    subDeviceId: u,
                                                    trackProgress: h
                                                }), ut.forEach((function(t) {
                                                    void 0 !== e[t] && (r.additionalDetails[t] = e[t])
                                                })), r.additionalDetails.asin || r.additionalDetails.cdObjectId || (r.additionalDetails.asin = "o", r.additionalDetails.cdObjectId = "o"), r
                                            }
                                            return tt(e, t), e
                                        }(it),
                                        UIPageViewMetric: function(t) {
                                            function e(e) {
                                                var r;
                                                if (void 0 === e && (e = {}), !e.pageType) throw new Error("UIPageView Metrics must have a pageType");
                                                return e.actionName = "uiPageView", e.specificEventVersion = "2", (r = t.call(this, e) || this).additionalDetails = Object.assign({}, r.additionalDetails, {
                                                    pageType: e.pageType
                                                }), ct.forEach((function(t) {
                                                    void 0 !== e[t] && (r.additionalDetails[t] = e[t] + "")
                                                })), r
                                            }
                                            return tt(e, t), e
                                        }(it),
                                        UIClickMetric: function(t) {
                                            function e(e) {
                                                var r;
                                                void 0 === e && (e = {}), lt.forEach((function(t) {
                                                    if (!e[t]) throw new Error("UIClick Metrics must have a " + t)
                                                })), e.actionName = "uiClick", e.specificEventVersion = "4", (r = t.call(this, e) || this).additionalDetails = Object.assign({}, r.additionalDetails, {
                                                    actionType: e.actionType
                                                });
                                                var n = {};
                                                return ft.forEach((function(t) {
                                                    void 0 !== e[t] && (n[t] = "" + e[t])
                                                })), Object.keys(n).length && (r.contentInfo = [n]), ht.forEach((function(t) {
                                                    void 0 !== e[t] && (r.additionalDetails[t] = "" + e[t])
                                                })), r
                                            }
                                            return tt(e, t), e
                                        }(it),
                                        FlexMetric: function(t) {
                                            function e(e) {
                                                var r;
                                                if (void 0 === e && (e = {}), pt.forEach((function(t) {
                                                        if (!e[t]) throw new Error("UIClick Metrics must have a " + t)
                                                    })), e.strings.length > 4) throw new Error("You cannot have more than 4 flex strings reported");
                                                if (e.numbers.length > 4) throw new Error("You cannot have more than 4 flex numbers reported");
                                                return e.actionName = "flexEvent", e.specificEventVersion = "1", e.baseEventVersion = "2", (r = t.call(this, e) || this).additionalDetails = Object.assign({}, r.additionalDetails, {
                                                    flexEventName: e.flexEventName
                                                }), e.strings.reduce((function(t, e, r) {
                                                    return t["flexStr" + (r + 1)] = e.toString(), t
                                                }), r.additionalDetails), e.numbers.reduce((function(t, e, r) {
                                                    return t["flexNum" + (r + 1)] = e.toString(), t
                                                }), r.additionalDetails), r
                                            }
                                            return tt(e, t), e
                                        }(it)
                                    },
                                    bt = ["customerId", "deviceId", "deviceType", "oAuthToken", "musicTerritory"],
                                    _t = ["customerId", "deviceTypeId", "deviceId", "clientId"];

                                function yt(t) {
                                    return n(t, _t), {
                                        customerId: t.customerId,
                                        deviceToken: {
                                            deviceTypeId: t.deviceTypeId,
                                            deviceId: t.deviceId
                                        },
                                        appMetadata: {
                                            https: "true"
                                        },
                                        clientMetadata: {
                                            clientId: t.clientId
                                        }
                                    }
                                }
                                var vt = ["musicTerritory"];

                                function gt(t, e, r, i) {
                                    void 0 === i && (i = {}), console.warn("getDashManifest has been deprecated in favor of getDashManifestsV2"), n(i = Object.assign({}, u, i, {
                                        api: "dmls"
                                    }), vt);
                                    var o = W(i, "com.amazon.digitalmusiclocator.DigitalMusicLocatorServiceExternal.getDashManifests"),
                                        s = Object.assign({}, yt(i), {
                                            contentIdList: [{
                                                identifier: t,
                                                identifierType: "ASIN"
                                            }],
                                            bitRateList: r,
                                            mpegDashVersion: "V1"
                                        });
                                    return V({
                                        method: "post",
                                        url: a(i),
                                        data: s,
                                        headers: o
                                    })
                                }
                                var mt = ["appName", "appVersion", "musicTerritory"],
                                    wt = ["LOW", "MEDIUM", "HIGH"],
                                    Et = ["musicTerritory"],
                                    St = ["customerId", "deviceTypeId", "deviceId", "clientId", "ipAddress", "musicTerritory"];

                                function It(t) {
                                    return n(t, St), {
                                        Operation: "com.amazon.amazonmusicaudiolocatorservice.model.getondemandstreamingurls#GetOnDemandStreamingURLs",
                                        Service: "com.amazon.amazonmusicaudiolocatorservice.model#AmazonMusicAudioLocatorServiceExternal",
                                        Input: {
                                            customerId: t.customerId,
                                            deviceToken: {
                                                deviceTypeId: t.deviceTypeId,
                                                deviceId: t.deviceId
                                            },
                                            appMetadata: {
                                                appId: t.clientId
                                            },
                                            clientMetadata: {
                                                clientId: t.deviceTypeId,
                                                clientIpAddress: t.ipAddress
                                            }
                                        }
                                    }
                                }
                                var Tt = [],
                                    Ct = [],
                                    kt = ["deviceType", "deviceId"];

                                function xt(t) {
                                    n(t, kt), t.sessionId = t.sesionId || "111-1111111-1111111";
                                    var e = {
                                        deviceType: t.deviceType,
                                        deviceId: t.deviceId,
                                        sessionId: t.sessionId
                                    };
                                    return t.customerId && (e.customerId = t.customerId), e
                                }
                                var At = ["customerId", "deviceType", "musicTerritory"],
                                    Ot = ["musicTerritory"],
                                    Dt = ["x-amzn-application-version", "x-amzn-device-family", "x-amzn-device-height", "x-amzn-device-width", "x-amzn-device-id", "x-amzn-device-language", "x-amzn-device-model", "x-amzn-device-time-zone", "x-amzn-os-version", "x-amzn-request-id", "x-amzn-timestamp", "x-amzn-authentication"];
                                t.Utils = {
                                    getMusicAgent: r,
                                    getRequestUrl: a
                                }, t.defaults = u, t.get = function(t) {
                                    return n(t, Y), G(Object.assign({}, t, {
                                        method: "GET"
                                    }))
                                }, t.post = function(t) {
                                    return n(t, [].concat(Y, ["body"])), G(Object.assign({}, t, {
                                        method: "POST"
                                    }))
                                }, t.put = function(t) {
                                    return n(t, [].concat(Y, ["body"])), G(Object.assign({}, t, {
                                        method: "PUT"
                                    }))
                                }, t.reportClientActions = function(t, e) {
                                    void 0 === t && (t = []), void 0 === e && (e = {}), n(e = Object.assign({}, u, e, {
                                        api: "cirrus/v3"
                                    }), Q), t.forEach((function(t) {
                                        return n(t, X)
                                    })), t.forEach((function(t) {
                                        return n(t.additionalDetails, Z)
                                    }));
                                    var r = W(e, "com.amazon.cirrus.libraryservice.v3.CirrusLibraryServiceExternalV3.reportClientActions"),
                                        i = Object.assign({}, $(e), {
                                            clientActionList: t
                                        });
                                    return V({
                                        method: "post",
                                        url: a(e),
                                        data: i,
                                        headers: r
                                    })
                                }, t.metrics = dt, t.getLibraryCounts = function(t) {
                                    void 0 === t && (t = {}), n(t = Object.assign({}, u, t, {
                                        api: "cirrus/v3"
                                    }), bt);
                                    var e = W(t, "com.amazon.cirrus.libraryservice.v3.CirrusLibraryServiceExternalV3.getLibraryCounts"),
                                        r = Object.assign({}, $(t), {
                                            counts: t.counts
                                        });
                                    return V({
                                        method: "post",
                                        url: a(t),
                                        data: r,
                                        headers: e,
                                        responseType: "json"
                                    })
                                }, t.getDashManifests = gt, t.getDashManifestsV2 = function(t, e, i) {
                                    void 0 === e && (e = wt), void 0 === i && (i = {}), n(i = Object.assign({}, u, i, {
                                        api: "dmls"
                                    }), mt);
                                    var o = W(i, "com.amazon.digitalmusiclocator.DigitalMusicLocatorServiceExternal.getDashManifestsV2"),
                                        s = Object.assign({}, yt(i), {
                                            contentIdList: [{
                                                identifier: t,
                                                identifierType: "ASIN"
                                            }],
                                            bitrateTypeList: e,
                                            musicDashVersionList: ["V1", "V2"],
                                            appInfo: {
                                                musicAgent: r(i)
                                            }
                                        });
                                    return V({
                                        method: "post",
                                        responseType: "json",
                                        url: a(i),
                                        data: s,
                                        headers: o
                                    })
                                }, t.getDashManifestByAsin = function(t, e, r) {
                                    return void 0 === r && (r = {}), gt(t, 0, e, r)
                                }, t.getRestrictedStreamingURL = function(t, e, r) {
                                    void 0 === r && (r = {}), n(r = Object.assign({}, u, r, {
                                        api: "dmls"
                                    }), Et);
                                    var i = W(r, "com.amazon.digitalmusiclocator.DigitalMusicLocatorServiceExternal.getRestrictedStreamingURL"),
                                        o = Object.assign({}, yt(r), {
                                            contentId: {
                                                identifier: t,
                                                identifierType: e
                                            },
                                            bitRate: "HIGH"
                                        });
                                    return V({
                                        method: "post",
                                        url: a(r),
                                        data: o,
                                        headers: i
                                    })
                                }, t.getLiveStreamingURL = function(t, e, r) {
                                    void 0 === e && (e = "DASH"), void 0 === r && (r = {}), n(r = Object.assign({}, u, r, {
                                        api: "amals"
                                    }), Tt);
                                    var i = W(r, "com.amazon.amazonmusicaudiolocatorservice.model.AmazonMusicAudioLocatorServiceExternal.GetLiveStreamingURLs"),
                                        o = Object.assign({}, It(r), {
                                            Operation: "com.amazon.amazonmusicaudiolocatorservice.model.getlivestreamingurls#GetLiveStreamingURLs"
                                        });
                                    return o.Input = Object.assign({}, o.Input, {
                                        contentIdList: [{
                                            identifier: t,
                                            identifierType: "MCID"
                                        }],
                                        protocol: e
                                    }), delete i["Content-Encoding"], V({
                                        method: "post",
                                        responseType: "json",
                                        url: a(r) + "getLiveStreamingURL",
                                        data: o,
                                        headers: i
                                    })
                                }, t.getOnDemandStreamingURL = function(t, e, r) {
                                    void 0 === e && (e = "DASH"), void 0 === r && (r = {}), n(r = Object.assign({}, u, r, {
                                        api: "amals"
                                    }), Ct);
                                    var i = W(r, "com.amazon.amazonmusicaudiolocatorservice.model.AmazonMusicAudioLocatorServiceExternal.GetOnDemandStreamingURLs"),
                                        o = Object.assign({}, It(r), {
                                            Operation: "com.amazon.amazonmusicaudiolocatorservice.model.getondemandstreamingurls#GetOnDemandStreamingURLs"
                                        });
                                    return o.Input = Object.assign({}, o.Input, {
                                        contentIdList: [{
                                            identifier: t,
                                            identifierType: "MCID"
                                        }],
                                        protocol: e
                                    }), delete i["Content-Encoding"], V({
                                        method: "post",
                                        responseType: "json",
                                        url: a(r) + "getOnDemandStreamingURLs",
                                        data: o,
                                        headers: i
                                    })
                                }, t.acceptTermsOfUse = function() {
                                    return console.log("acceptTermsOfUse")
                                }, t.retrieveAccount = function(t) {
                                    n(t = Object.assign({}, u, t, {
                                        api: "stratus"
                                    }), At);
                                    var e = W(t, "com.amazon.stratus.StratusServiceExternal.retrieveAccount"),
                                        r = Object.assign({}, xt(t), {
                                            responseFilters: ["BENEFITS", "HISTORY", "LOCATION", "STORAGE", "TERMSOFUSE", "VERIFIED"]
                                        });
                                    return V({
                                        method: "post",
                                        url: a(t),
                                        dataType: "json",
                                        data: r,
                                        headers: e
                                    })
                                }, t.retrieveCustomerHome = function(t) {
                                    n(t = Object.assign({}, u, t, {
                                        api: "stratus"
                                    }), Ot);
                                    var e = W(t, "com.amazon.stratus.StratusServiceExternal.retrieveCustomerHome"),
                                        r = xt(t);
                                    return V({
                                        method: "post",
                                        url: a(t),
                                        dataType: "json",
                                        data: r,
                                        headers: e
                                    })
                                }, t.skyfire = function(t, e) {
                                    return void 0 === e && (e = {}), e["x-amzn-device-id"] = e["x-amzn-device-id"] || u.deviceId, e["x-amzn-authentication"] = e["x-amzn-authentication"] || u.oAuthToken, n(e, Dt), V({
                                        url: "https://na.tv.music.a2z.com/" + t,
                                        responseType: "json",
                                        method: "get",
                                        headers: e
                                    })
                                }, Object.defineProperty(t, "__esModule", {
                                    value: !0
                                })
                            }(e)
                        })),
                        s = function(t) {
                            for (const e of [].slice.call(arguments, 1))
                                if (e)
                                    for (const r of Object.keys(e)) {
                                        const n = e[r];
                                        void 0 !== n && (t[r] = n)
                                    }
                            return t
                        },
                        a = t => "" + (t => "boolean" == typeof t ? t : "true" === t)(t),
                        u = t => isNaN(t) ? "" : "" + t;
                    class c {
                        now() {
                            return Date.now()
                        }
                    }

                    function h() {
                        return localStorage && "true" === localStorage.getItem("DEBUG")
                    }
                    var f = function() {
                            h() && console.log([].slice.call(arguments))
                        },
                        l = (t, e) => {
                            const r = [];
                            for (const n of e) t.hasOwnProperty(n) && t[n] || r.push(n);
                            if (r.length > 0) throw "the configuration is missing the following keys: " + r.join(", ")
                        };
                    const p = ["LOW", "MEDIUM", "HIGH"];
                    var d = function(t) {
                        var e = [].slice.call(arguments, 1);
                        return e.length ? function() {
                            for (var r = [].slice.call(arguments), n = [], i = 0; i < e.length; i++) {
                                var o = e[i];
                                n[i] = void 0 === o ? r.shift() : o
                            }
                            return t.apply(this, n.concat(r))
                        } : t
                    };
                    const b = [{
                        dmlsName: "WIDEVINE",
                        keySystem: "com.widevine.alpha",
                        supportedConfiguration: [{
                            initDataTypes: ["cenc"],
                            audioCapabilities: [{
                                contentType: 'audio/mp4;codecs="mp4a.40.2"'
                            }]
                        }]
                    }, {
                        dmlsName: "PLAYREADY",
                        keySystem: "com.microsoft.playready",
                        supportedConfiguration: [{
                            initDataTypes: ["cenc"],
                            audioCapabilities: [{
                                contentType: 'audio/mp4;codecs="mp4a.40.2"'
                            }]
                        }]
                    }];

                    function _(t, e, r) {
                        r.resolver = "json", r.credentials = "same-origin", r.headers = Object.assign({
                            "content-type": "application/json",
                            "X-Amz-Target": "com.amazon.digitalmusiclocator.DigitalMusicLocatorServiceExternal.getLicenseForPlaybackV2",
                            "X-Requested-With": "XMLHttpRequest",
                            "Content-Encoding": "amz-1.0"
                        }, r.headers), e.oAuthToken && (r.headers.Authorization = "Bearer " + e.oAuthToken), e.csrf && (r.headers["csrf-rnd"] = e.csrf.rnd, r.headers["csrf-token"] = e.csrf.token, r.headers["csrf-ts"] = e.csrf.ts), delete r.headers["Content-Type"], delete r.headers.SOAPAction;
                        let n = {
                            DrmType: t,
                            licenseChallenge: btoa(String.fromCharCode.apply(null, new Uint8Array(r.body))),
                            customerId: e.customerId,
                            deviceToken: {
                                deviceTypeId: e.deviceTypeId,
                                deviceId: e.deviceId
                            },
                            appInfo: {
                                musicAgent: o.Utils.getMusicAgent(e)
                            }
                        };
                        return e.oAuthToken && (n.Authorization = "Bearer " + e.oAuthToken), r.body = JSON.stringify(n), r
                    }

                    function y(t) {
                        for (var e = window.atob(t.license), r = e.length, n = new Uint8Array(r), i = 0; i < r; i++) n[i] = e.charCodeAt(i);
                        return n.buffer
                    }
                    var v = t => {
                            let e = {};
                            for (const r of b) e[r.keySystem] = {
                                licenseServerUrl: o.Utils.getRequestUrl({
                                    api: "dmls",
                                    hostname: t.hostname,
                                    musicTerritory: t.musicTerritory
                                }),
                                licenseServerRequestInterceptor: d(_, r.dmlsName, t),
                                licenseServerResponseInterceptor: y
                            };
                            return e
                        },
                        g = () => !!window.navigator.platform.match(/iPhone|iPod|iPad/);
                    class m {
                        constructor({
                            appVersion: t,
                            contentSubscriptionMode: e,
                            customerId: r,
                            locale: n,
                            musicTerritory: i,
                            resourceType: o,
                            source: s
                        } = {}) {
                            this.appVersion = t, this.contentSubscriptionMode = e, this.customerId = r, this.locale = n, this.musicTerritory = i, this.resourceType = o, this.source = s
                        }
                    }
                    class w {
                        constructor({
                            hasEnded: t = !1,
                            id: e,
                            initiatedAt: r = null,
                            isDirectedPlay: n = !1,
                            isExplicitLanguageFilterOn: i = !1,
                            isShufflePlay: o = !1,
                            isCached: s = !1,
                            pageType: a,
                            rebufferCount: u = 0,
                            selectionSourceId: c,
                            selectionSourceType: h,
                            selectionSourceSessionId: f,
                            stalledAt: l = null,
                            startedAt: p = null,
                            type: d
                        } = {}) {
                            this.applyUpdates({
                                hasEnded: t,
                                id: e,
                                initiatedAt: r,
                                isDirectedPlay: n,
                                isExplicitLanguageFilterOn: i,
                                isShufflePlay: o,
                                isCached: s,
                                pageType: a,
                                rebufferCount: u,
                                selectionSourceId: c,
                                selectionSourceType: h,
                                selectionSourceSessionId: f,
                                stalledAt: l,
                                startedAt: p,
                                type: d
                            })
                        }
                        applyUpdates(t) {
                            return Object.keys(t).forEach(e => {
                                this[e] = t[e]
                            }), this
                        }
                        getMetricsBaseAttributes(t) {
                            const {
                                appVersion: e,
                                contentSubscriptionMode: r,
                                customerId: n,
                                locale: i,
                                musicTerritory: o,
                                resourceType: s,
                                source: a
                            } = t.getConfig();
                            return new m({
                                appVersion: e,
                                contentSubscriptionMode: r,
                                customerId: n,
                                locale: i,
                                musicTerritory: o,
                                resourceType: s,
                                source: a
                            })
                        }
                        getMetricsBitrates(t) {
                            const e = t.getCurrentBitrate();
                            return e >= 256e3 ? "AutoHigh" : e > 128e3 ? "AutoMedium" : "AutoLow"
                        }
                        getMetricsCacheHitStatus(t) {
                            return this.isCached ? t.getBufferedTime() < t.getDuration() ? "PARTIAL" : "COMPLETE" : "NONE"
                        }
                        getMetricsStreamOrDRMTech(t) {
                            switch (this.type) {
                                case "asin":
                                    return t.getConfig().flags.drm ? "DASH_DRM" : "DASH";
                                case "coid":
                                case "https":
                                    return "PROG";
                                case "livemcid":
                                    return g() ? "HLS" : "DASH";
                                case "staticmcid":
                                    return "DASH";
                                default:
                                    return null
                            }
                        }
                        getMetricsTrackIdentifier() {
                            switch (this.type) {
                                case "asin":
                                    return {
                                        asin: this.id
                                    };
                                case "coid":
                                default:
                                    return {
                                        cdObjectId: this.id
                                    }
                            }
                        }
                        asStreamingInitiatedMetric({
                            player: t,
                            overrides: e
                        }) {
                            const r = {
                                isDirectedPlay: a(this.isDirectedPlay),
                                isExplicitLanguageFilterOn: a(this.isExplicitLanguageFilterOn),
                                isShufflePlay: a(this.isShufflePlay),
                                selectionSourceId: this.selectionSourceId,
                                selectionSourceSessionId: this.selectionSourceSessionId,
                                selectionSourceType: this.selectionSourceType,
                                streamOrDRMTech: this.getMetricsStreamOrDRMTech(t)
                            };
                            return new o.metrics.StreamingInitiatedMetric(s({}, this.getMetricsBaseAttributes(t), r, this.getMetricsTrackIdentifier(), e))
                        }
                        asStreamingRequiredRebufferingMetric({
                            clock: t,
                            player: e,
                            overrides: r
                        }) {
                            const n = {
                                bitrates: this.getMetricsBitrates(e),
                                cacheHitStatus: this.getMetricsCacheHitStatus(e),
                                durationMilliseconds: u(t.now() - this.stalledAt),
                                initialPlaybackDelayMilliseconds: u(this.startedAt - this.initiatedAt),
                                isExplicitLanguageFilterOn: a(this.isExplicitLanguageFilterOn),
                                loadTimeMilliseconds: u(this.stalledAt),
                                selectionSourceId: this.selectionSourceId,
                                selectionSourceSessionId: this.selectionSourceSessionId,
                                selectionSourceType: this.selectionSourceType,
                                streamOrDRMTech: this.getMetricsStreamOrDRMTech(e),
                                cdnType: this.cdnType
                            };
                            return new o.metrics.StreamingRequiredRebufferingMetric(s({}, this.getMetricsBaseAttributes(e), n, this.getMetricsTrackIdentifier(), r))
                        }
                        asStreamingTerminatedMetric({
                            clock: t,
                            overrides: e,
                            player: r
                        }) {
                            const n = {
                                bitrates: this.getMetricsBitrates(r),
                                cacheHitStatus: this.getMetricsCacheHitStatus(r),
                                durationSeconds: u(Math.floor((t.now() - this.startedAt) / 1e3)),
                                initialPlaybackDelayMilliseconds: u(this.startedAt - this.initiatedAt),
                                isDirectedPlay: a(this.isDirectedPlay),
                                isExplicitLanguageFilterOn: a(this.isExplicitLanguageFilterOn),
                                isShufflePlay: a(this.isShufflePlay),
                                pageType: this.pageType,
                                rebufferCount: u(this.rebufferCount),
                                selectionSourceId: this.selectionSourceId,
                                selectionSourceSessionId: this.selectionSourceSessionId,
                                selectionSourceType: this.selectionSourceType,
                                streamOrDRMTech: this.getMetricsStreamOrDRMTech(r),
                                terminationReason: this.terminationReason,
                                cdnType: this.cdnType
                            };
                            return new o.metrics.StreamingTerminatedMetric(s({}, this.getMetricsBaseAttributes(r), n, this.getMetricsTrackIdentifier(), e))
                        }
                        asTrackStreamedMetric({
                            overrides: t,
                            player: e
                        }) {
                            const r = {
                                selectionSourceId: this.selectionSourceId,
                                selectionSourceType: this.selectionSourceType,
                                trackProgress: u(Math.round(e.getCurrentTime()))
                            };
                            return new o.metrics.TrackStreamedMetric(s({}, this.getMetricsBaseAttributes(e), r, this.getMetricsTrackIdentifier(), t))
                        }
                    }
                    class E {
                        constructor({
                            player: t,
                            clock: e = new c
                        }) {
                            this.player = t, this.clock = e, this.tracks = {}, this.currentRequestedTrack = null, window.addEventListener("beforeunload", this.onBeforeunload.bind(this)), t.addEventListener("ended", this.onEnded.bind(this)), t.addEventListener("stalled", this.onStalled.bind(this)), t.addEventListener("started", this.onStarted.bind(this))
                        }
                        reportMetrics() {
                            var t = [].slice.call(arguments);
                            this.player.configuration.flags.metrics && (f("Emitting metrics: " + t.map(t => t.actionName), t), o.reportClientActions(t, this.player.getConfig()))
                        }
                        shouldEmitStreamingRequiredRebuffering() {
                            return this.currentRequestedTrack && "number" == typeof this.currentRequestedTrack.stalledAt && this.clock.now() - this.currentRequestedTrack.stalledAt > 10
                        }
                        currentRequestedTrackIsPaused() {
                            return this.currentRequestedTrack && "number" == typeof this.currentRequestedTrack.pausedAt
                        }
                        currentRequestedTrackHasStartedButNotEnded() {
                            return this.currentRequestedTrack && "number" == typeof this.currentRequestedTrack.startedAt && !this.currentRequestedTrack.hasEnded
                        }
                        currentRequestedTrackHasStarted() {
                            return this.currentRequestedTrack && "number" == typeof this.currentRequestedTrack.startedAt
                        }
                        currentRequestedTrackHasStartedFromTheBeginnging() {
                            return this.currentRequestedTrack && this.currentRequestedTrack.hasStartedFromTheBeginning
                        }
                        currentRequestedTrackHasEnded() {
                            return this.currentRequestedTrack && this.currentRequestedTrack.hasEnded
                        }
                        currentRequestedTrackHasChanged(t) {
                            return this.currentRequestedTrack && !this.player.isCurrentTrackId(t)
                        }
                        currentRequestedTrackHasChangedOrEnded() {
                            return this.currentRequestedTrackHasChanged(this.currentRequestedTrack && this.currentRequestedTrack.id) || this.currentRequestedTrackHasEnded()
                        }
                        currentRequestedTrackHasRestarted(t, e) {
                            return this.currentRequestedTrack && t && this.currentRequestedTrack.id === t && this.currentRequestedTrackHasStarted() && 0 === e
                        }
                        updateLoadedTrack(t) {
                            this.tracks[t.id] ? this.tracks[t.id].applyUpdates(t) : this.tracks[t.id] = new w(t)
                        }
                        updateCurrentTrack(t) {
                            null === this.currentRequestedTrack || t.id && t.id !== this.currentRequestedTrack.id ? this.currentRequestedTrack = new w(t) : this.currentRequestedTrack.applyUpdates(t), this.tracks[this.currentRequestedTrack.id] = this.currentRequestedTrack
                        }
                        getStreamingInitiated(t = {}) {
                            return this.currentRequestedTrack.asStreamingInitiatedMetric({
                                overrides: t,
                                player: this.player
                            })
                        }
                        getStreamingRequiredReBuffering(t = {}) {
                            return this.currentRequestedTrack.asStreamingRequiredRebufferingMetric({
                                clock: this.clock,
                                overrides: t,
                                player: this.player
                            })
                        }
                        getStreamingTerminated(t = {}) {
                            return this.currentRequestedTrack.asStreamingTerminatedMetric({
                                clock: this.clock,
                                overrides: t,
                                player: this.player
                            })
                        }
                        getTrackStreamed(t = {}) {
                            return this.currentRequestedTrack.asTrackStreamedMetric({
                                overrides: t,
                                player: this.player
                            })
                        }
                        onBeforeunload() {
                            f("beforeunload", this), this.currentRequestedTrackHasStartedButNotEnded() && this.reportMetrics(this.getStreamingTerminated({
                                terminationReason: "userStop"
                            }), this.getTrackStreamed())
                        }
                        onEnded() {
                            f("ended", this), this.currentRequestedTrackHasChangedOrEnded() || (this.updateCurrentTrack({
                                hasEnded: !0
                            }), this.reportMetrics(this.getStreamingTerminated({
                                terminationReason: "trackFinished"
                            }), this.getTrackStreamed()))
                        }
                        onStalled(t) {
                            f("stalled", this), this.currentRequestedTrackHasChangedOrEnded() || (t ? this.updateCurrentTrack({
                                rebufferCount: this.currentRequestedTrack.rebufferCount + 1,
                                stalledAt: this.clock.now()
                            }) : (this.shouldEmitStreamingRequiredRebuffering() && this.reportMetrics(this.getStreamingRequiredReBuffering()), this.updateCurrentTrack({
                                stalledAt: null
                            })))
                        }
                        onStarted() {
                            f("started", this), this.currentRequestedTrackHasChangedOrEnded() || this.currentRequestedTrackHasStarted() || (this.updateCurrentTrack({
                                pausedAt: null,
                                startedAt: this.clock.now()
                            }), this.currentRequestedTrackHasStartedFromTheBeginnging() || this.reportMetrics(this.getStreamingInitiated()), this.updateCurrentTrack({
                                hasStartedFromTheBeginning: !0
                            }))
                        }
                        onLoad({
                            id: t,
                            type: e
                        }, {
                            isDirectedPlay: r,
                            isExplicitLanguageFilterOn: n,
                            isShufflePlay: i,
                            pageType: o,
                            selectionSourceType: s,
                            selectionSourceId: a,
                            selectionSourceSessionId: u
                        }) {
                            f("load", this), this.updateLoadedTrack({
                                id: t,
                                type: e,
                                isDirectedPlay: r,
                                isExplicitLanguageFilterOn: n,
                                isShufflePlay: i,
                                pageType: o,
                                selectionSourceType: s,
                                selectionSourceId: a,
                                selectionSourceSessionId: u
                            })
                        }
                        onPlay({
                            id: t,
                            position: e
                        }, {
                            isDirectedPlay: r,
                            isExplicitLanguageFilterOn: n,
                            isShufflePlay: i,
                            isCached: o,
                            pageType: a,
                            selectionSourceType: u,
                            selectionSourceId: c,
                            selectionSourceSessionId: h
                        }) {
                            f("play", this);
                            let l = !1;
                            if (this.currentRequestedTrackHasChanged(t) && this.currentRequestedTrackHasStartedButNotEnded()) {
                                const t = [this.getTrackStreamed()];
                                this.currentRequestedTrackIsPaused() || (t.push(this.getStreamingTerminated({
                                    terminationReason: "userNext"
                                })), this.shouldEmitStreamingRequiredRebuffering() && t.push(this.getStreamingRequiredReBuffering())), this.reportMetrics(...t)
                            } else if (this.currentRequestedTrackHasRestarted(t, e)) {
                                const t = [this.getTrackStreamed()];
                                this.currentRequestedTrackIsPaused() || t.push(this.getStreamingTerminated({
                                    terminationReason: "userPrev"
                                })), this.reportMetrics(...t)
                            } else this.currentRequestedTrackHasStartedButNotEnded() && (l = !0, this.currentRequestedTrackIsPaused() || this.reportMetrics(this.getStreamingTerminated({
                                terminationReason: "trackScrub"
                            })));
                            const p = {
                                hasEnded: !1,
                                initiatedAt: this.clock.now(),
                                isDirectedPlay: r,
                                isExplicitLanguageFilterOn: n,
                                isShufflePlay: i,
                                isCached: o,
                                pageType: a,
                                pausedAt: null,
                                selectionSourceType: u,
                                selectionSourceId: c,
                                selectionSourceSessionId: h,
                                startedAt: null
                            };
                            l || (p.hasStartedFromTheBeginning = !1), this.updateCurrentTrack(s({}, this.tracks[t], p))
                        }
                        onPause({
                            terminationReason: t = "userStop"
                        } = {}) {
                            f("pause", this), this.currentRequestedTrackHasStartedButNotEnded() && !this.currentRequestedTrackIsPaused() && (this.updateCurrentTrack({
                                pausedAt: this.clock.now()
                            }), this.reportMetrics(this.getStreamingTerminated({
                                terminationReason: t
                            })))
                        }
                        onSeekTo({
                            terminationReason: t = "trackScrub"
                        } = {}) {
                            f("seekTo", this), this.currentRequestedTrackHasStartedButNotEnded() && this.reportMetrics(this.getStreamingTerminated({
                                terminationReason: t
                            }))
                        }
                    }
                    const S = [/https\:\/\/[0-z]*\.ext-twitch\.tv/g, /https\:\/\/mp3localhost\.amazon\.com\:\d\d\d\d/g];
                    class I {
                        constructor({
                            player: t,
                            clock: e = new c
                        }) {
                            l({
                                player: t
                            }, ["player"]), this.player = t, this.clock = e, this.isHealthy = !1, this.updateId = 0, this.version = "1.0.0", this.currentTrack = {
                                asin: null,
                                duration: null
                            }, this.playbackState = "PAUSED", this.positionInSong = -1, this.postToParentWindow = this.postToParentWindow.bind(this), this.healthCheckHandler = this.healthCheckHandler.bind(this), this.onBeforeUnload = this.onBeforeUnload.bind(this), this.onUnload = this.onUnload.bind(this), this.onEnded = this.onEnded.bind(this), this.onStarted = this.onStarted.bind(this), this.onLoad = this.onLoad.bind(this), this.onPlay = this.onPlay.bind(this), this.onPause = this.onPause.bind(this), this.onSeekTo = this.onSeekTo.bind(this), this.onSetConfig = this.onSetConfig.bind(this), t.addEventListener("started", this.onStarted.bind(this)), t.addEventListener("ended", this.onEnded.bind(this)), window.addEventListener("beforeunload", this.onBeforeUnload.bind(this)), window.window.addEventListener("message", this.healthCheckHandler.bind(this))
                        }
                        postToParentWindow(t) {
                            if (!this.player.configuration.flags.broadcast || !this.isHealthy) return;
                            let e = Object.assign({}, t);
                            try {
                                e.timeStamp = this.clock.now(), e.updateId = ++this.updateId, e.version = "1.0.0", window.opener.postMessage(JSON.stringify(e), "*")
                            } catch (t) {
                                f(t)
                            }
                        }
                        healthCheckHandler(t = {}) {
                            window.window.opener && t.origin && S.some(e => e.test(t.origin)) && "Health" === t.data && (this.isHealthy || (this.isHealthy = !0, this.onSetConfig()), window.opener.postMessage("Health OK", t.origin))
                        }
                        onSetConfig() {
                            const {
                                appName: t,
                                appVersion: e,
                                clientId: r,
                                deviceId: n,
                                deviceTypeId: i,
                                customerId: o,
                                musicTerritory: s,
                                tier: a
                            } = this.player.configuration;
                            this.postToParentWindow({
                                appName: t,
                                appVersion: e,
                                clientId: r,
                                deviceId: n,
                                deviceTypeId: i,
                                customerId: o,
                                musicTerritory: s,
                                tier: a
                            })
                        }
                        onBeforeUnload() {
                            this.postToParentWindow({
                                playbackState: "PAUSED"
                            })
                        }
                        onUnload() {
                            this.postToParentWindow({
                                playbackState: "PAUSED"
                            })
                        }
                        onEnded() {
                            this.postToParentWindow({
                                playbackState: "PAUSED",
                                positionInSong: 0
                            })
                        }
                        onStarted() {
                            let t = Math.floor(this.player.getDuration());
                            this.postToParentWindow({
                                playbackState: "PLAYING",
                                currentTrack: {
                                    duration: t
                                },
                                positionInSong: this.player.getCurrentTime()
                            })
                        }
                        onLoad(t) {
                            this.postToParentWindow({
                                currentTrack: {
                                    asin: t
                                }
                            })
                        }
                        onPlay(t, e) {
                            const r = {
                                positionInSong: this.player.isCurrentTrackId(t) ? e : 0
                            };
                            t && !this.player.isCurrentTrackId(t) && (r.currentTrack = {}, r.currentTrack.asin = t), this.postToParentWindow(r)
                        }
                        onResume() {
                            const t = {
                                playbackState: "PLAYING",
                                positionInSong: this.player.getCurrentTime()
                            };
                            this.postToParentWindow(t)
                        }
                        onPause() {
                            this.postToParentWindow({
                                playbackState: "PAUSED"
                            })
                        }
                        onSeekTo(t) {
                            this.postToParentWindow({
                                positionInSong: t
                            })
                        }
                    }
                    var T = function(t, e, r) {
                        if (!t) return r;
                        var n, i;
                        if (Array.isArray(e) && (n = e.slice(0)), "string" == typeof e && (n = e.split(".")), "symbol" == typeof e && (n = [e]), !Array.isArray(n)) throw new Error("props arg must be an array, a string or a symbol");
                        for (; n.length;) {
                            if (i = n.shift(), !t) return r;
                            if (void 0 === (t = t[i])) return r
                        }
                        return t
                    };
                    const C = ["appVersion", "clientId", "customerId", "deviceId", "deviceTypeId", "hostname", "musicTerritory"],
                        k = ["https", "asin", "coid", "livemcid", "staticmcid"];
                    e.Player = class extends i.Player {
                        constructor(t) {
                            l(t, C), super(), this.configuration = Object.assign({}, t, {
                                flags: Object.assign({
                                    broadcast: !1,
                                    metrics: !0,
                                    drm: !0
                                }, t.flags)
                            }), this.flags = this.configuration.flags, this.setConfig({
                                drm: v(this.configuration)
                            }), this.setConfig(this.configuration), this.inflightIds = new Map, this.reportMetrics = this.reportMetrics.bind(this), this.load = this.load.bind(this), this.play = this.play.bind(this), this.pause = this.pause.bind(this), this.seekTo = this.seekTo.bind(this), this.getConfig = this.getConfig.bind(this), this.setConfig = this.setConfig.bind(this), this.inflightWrapper = this.inflightWrapper.bind(this), this.metricsReporter = new E({
                                player: this
                            }), this.addEventListener("error", this.handleError)
                        }
                        reportMetrics(t) {
                            this.metricsReporter && t(this.metricsReporter)
                        }
                        load(t, {
                            isDirectedPlay: e = !1,
                            isExplicitLanguageFilterOn: r = !1,
                            isShufflePlay: n = !1,
                            pageType: i,
                            selectionSourceType: s,
                            selectionSourceId: a,
                            selectionSourceSessionId: u
                        } = {}) {
                            const [c, h] = t.split("://");
                            let f, l = c;
                            if (!k.includes(c)) throw "Invalid identifier. Supported identifiers: " + k;
                            switch ("asin" === l && g() && (l = "coid"), this.playbackBroadcaster && this.playbackBroadcaster.onLoad(h), this.reportMetrics(t => t.onLoad({
                                id: h,
                                type: l
                            }, {
                                isDirectedPlay: e,
                                isExplicitLanguageFilterOn: r,
                                isShufflePlay: n,
                                pageType: i,
                                selectionSourceType: s,
                                selectionSourceId: a,
                                selectionSourceSessionId: u
                            })), l) {
                                case "asin":
                                    return f = ((t, e = p, r = {
                                        flags: {}
                                    }) => {
                                        const {
                                            flags: n
                                        } = r;
                                        let i;
                                        return i = n.drm && !(() => {
                                            const t = window.navigator;
                                            return t.vendor && t.vendor.indexOf("Apple") > -1 && t.userAgent && -1 == t.userAgent.indexOf("CriOS") && -1 == t.userAgent.indexOf("FxiOS")
                                        })() ? o.getDashManifestsV2(t, e, r) : o.getDashManifests(t, "ASIN", e, r), i.then(t => {
                                            if ((t => t.data && t.data.contentResponseList && t.data.contentResponseList[0] && "SUCCESS" !== t.data.contentResponseList[0].contentResponseStatusCode)(t)) throw new Error("CONTENT_NOT_ELIGIBLE");
                                            const e = (t => t && t.data && t.data.contentResponseList && t.data.contentResponseList[0].manifest.replace(/\n/g, "").replace(/\"/g, '"'))(t),
                                                r = (t => t && t.data && t.data.contentResponseList && t.data.contentResponseList[0] && t.data.contentResponseList[0].cdnType)(t);
                                            return {
                                                manifest: e,
                                                expiration: (t => {
                                                    const e = t && t.data && t.data.contentResponseList && t.data.contentResponseList[0] && t.data.contentResponseList[0].expiration && t.data.contentResponseList[0].expiration.fixedTime;
                                                    return e ? 1e3 * e : null
                                                })(t),
                                                extension: "mpd",
                                                cdnType: r
                                            }
                                        })
                                    })(h, void 0, this.configuration).then(t => {
                                        const {
                                            manifest: e,
                                            expiration: r,
                                            extension: n,
                                            cdnType: i
                                        } = t;
                                        return this.metricsReporter.updateLoadedTrack({
                                            id: h,
                                            cdnType: i
                                        }), super.load({
                                            id: h,
                                            manifest: e,
                                            extension: n,
                                            expiration: r
                                        })
                                    }), this.inflightWrapper(h, f);
                                case "coid":
                                    return f = o.getRestrictedStreamingURL(h, c.toUpperCase(), this.configuration).then(({
                                        data: t
                                    }) => {
                                        const e = (T(t, "contentResponse.urlList") || [])[0],
                                            r = T(t, "contentResponse.expiration");
                                        return super.load({
                                            id: h,
                                            url: e,
                                            expiration: r
                                        })
                                    }), this.inflightWrapper(h, f);
                                case "https":
                                    return Promise.resolve(super.load({
                                        id: h,
                                        url: t
                                    }));
                                case "livemcid":
                                    return f = o.getLiveStreamingURL(h, g() ? "HLS" : "DASH", this.configuration).then(({
                                        data: t
                                    }) => {
                                        const e = (T(t.Output, "contentResponseList") || [])[0],
                                            r = (T(e, "urlList") || [])[0],
                                            n = T(e, "expiration");
                                        return super.load({
                                            id: h,
                                            url: r,
                                            expiration: n
                                        })
                                    }), this.inflightWrapper(h, f);
                                case "staticmcid":
                                    return f = o.getOnDemandStreamingURL(h, g() ? "HLS" : "DASH", this.configuration).then(({
                                        data: t
                                    }) => {
                                        const e = (T(t.Output, "contentResponseList") || [])[0],
                                            r = (T(e, "urlList") || [])[0],
                                            n = T(e, "expiration");
                                        return super.load({
                                            id: h,
                                            url: r,
                                            expiration: n
                                        })
                                    }), this.inflightWrapper(h, f);
                                default:
                                    return Promise.reject(new Error("UNSUPPORTED_IDENITIFIER"))
                            }
                        }
                        play(t, e = 0, {
                            isDirectedPlay: r,
                            isExplicitLanguageFilterOn: n,
                            isShufflePlay: i,
                            pageType: o,
                            selectionSourceType: s,
                            selectionSourceId: a,
                            selectionSourceSessionId: u
                        } = {}) {
                            const [, c] = t.includes("://") ? t.split("://") : [null, t];
                            this.playbackBroadcaster && this.playbackBroadcaster.onPlay(c, e), this.reportMetrics(t => t.onPlay({
                                id: c,
                                position: e
                            }, {
                                isDirectedPlay: r,
                                isExplicitLanguageFilterOn: n,
                                isShufflePlay: i,
                                pageType: o,
                                selectionSourceType: s,
                                selectionSourceId: a,
                                selectionSourceSessionId: u,
                                isCached: this.isCached(c)
                            })), this.isPlaying() && !this.isCurrentTrackId(c) && super.pause(), this.isCached(c) && !this.isCurrentTrackId(c) || !this.inflightIds.has(c) ? super.play(c, e) : this.inflightIds.get(c).then(() => {
                                this.isCached(c) && super.play(c, e)
                            })
                        }
                        pause() {
                            this.playbackBroadcaster && this.playbackBroadcaster.onPause(), this.reportMetrics(t => t.onPause()), super.pause()
                        }
                        resume() {
                            this.playbackBroadcaster && this.playbackBroadcaster.onResume(), super.resume()
                        }
                        seekTo(t, {
                            terminationReason: e = "trackScrub"
                        } = {}) {
                            this.playbackBroadcaster && this.playbackBroadcaster.onSeekTo(t), this.reportMetrics(r => r.onSeekTo({
                                position: t,
                                terminationReason: e
                            })), super.seekTo(t)
                        }
                        getConfig() {
                            return this.configuration
                        }
                        setConfig(t) {
                            this.configuration = Object.assign({}, this.configuration, t), this.configuration = Object.assign({}, this.configuration, {
                                drm: v(this.configuration)
                            }), super.setConfig(this.configuration), this.configuration.flags.broadcast ? (this.playbackBroadcaster = this.playbackBroadcaster || new I({
                                player: this
                            }), this.playbackBroadcaster.onSetConfig()) : this.playbackBroadcaster = void 0
                        }
                        inflightWrapper(t, e) {
                            return this.inflightIds.set(t, e), e.then(e => (this.inflightIds.delete(t), e)).catch(e => {
                                throw this.inflightIds.delete(t), e
                            })
                        }
                        handleError(t, e) {
                            const r = this;
                            return Promise.resolve(function(n, i) {
                                try {
                                    var o = function() {
                                        const n = function() {
                                            if ("NETWORK_ERROR" === t) {
                                                const t = e.response,
                                                    n = function() {
                                                        if (t && 400 === t.status && t.url && t.url.indexOf("api/dmls") >= 0) return Promise.resolve(t.json()).then((function(t) {
                                                            "VMP_VALIDATION_FAILED" === t.denialReason && r.setConfig({
                                                                VMPFailed: !0
                                                            })
                                                        }))
                                                    }();
                                                if (n && n.then) return n.then((function() {}))
                                            }
                                        }();
                                        if (n && n.then) return n.then((function() {}))
                                    }()
                                } catch (t) {
                                    return
                                }
                                return o && o.then ? o.then(void 0, (function() {})) : o
                            }())
                        }
                    }
                }(e)
            }).call(this, r("yLpj"))
        }
    }
]);
//# sourceMappingURL=vendors~orchestra.6b4bc0c2339659a6e67e.js.map